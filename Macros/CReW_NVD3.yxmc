<?xml version="1.0"?>
<AlteryxDocument yxmdVer="9.0">
  <Nodes>
    <Node ToolID="7">
      <GuiSettings>
        <Position x="888" y="491.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Value name="ControlParams"><![CDATA[HTML=HTML
]]></Value>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output2">
          <RecordInfo>
            <Field name="Text" size="2147483647" source="Report:Text: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings Macro="CReW_DynamicReportText.yxmcsupporting" />
    </Node>
    <Node ToolID="14">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="396" y="323.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField field="JSON" type="V_String" size="536870911" expression="&quot;&lt;script&gt;function alteryxData() {&#xA;    return &quot; + [JSON] + &quot;;&#xA;}&#xA;&lt;/script&gt;&quot;" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>JSON="&lt;script&gt;function alteryxData() {
    return " + [JSON] ...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="JSON" size="2147483647" source="Formula: &quot;&lt;script&gt;function alteryxData() {&#xA;    return &quot; + [JSON] + &quot;;&#xA;}&#xA;&lt;/script&gt;&quot;" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="15">
      <GuiSettings>
        <Position x="300" y="323.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Value name="Column">True</Value>
          <Value name="Row">False</Value>
          <Value name="2Dim">False</Value>
          <Value name="WriteFile">False</Value>
          <Value name="File Browse" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="JSON" size="2147483647" source="Formula: &quot;{&quot; + [Concat_JSON_Field] + &quot;}&quot;" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings Macro="CReW_JSONCreate.yxmc" />
    </Node>
    <Node ToolID="17">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Join.Join">
        <Position x="612" y="491.1" />
      </GuiSettings>
      <Properties>
        <Configuration joinByRecordPos="True">
          <SelectConfiguration>
            <Configuration outputConnection="Join">
              <OrderChanged value="False" />
              <SelectFields>
                <SelectField field="*Unknown" selected="True" />
              </SelectFields>
            </Configuration>
          </SelectConfiguration>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Left">
          <RecordInfo>
            <Field name="JSON" size="2147483647" source="Formula: &quot;&lt;script&gt;function alteryxData() {&#xA;    return &quot; + [JSON] + &quot;;&#xA;}&#xA;&lt;/script&gt;&quot;" type="V_String" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Join">
          <RecordInfo>
            <Field name="JSON" size="2147483647" source="Formula: &quot;&lt;script&gt;function alteryxData() {&#xA;    return &quot; + [JSON] + &quot;;&#xA;}&#xA;&lt;/script&gt;&quot;" type="V_String" />
            <Field name="Concat_Field_1" size="1073741823" source="Summarize: Concat - Field_1" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Right">
          <RecordInfo>
            <Field name="Concat_Field_1" size="1073741823" source="Summarize: Concat - Field_1" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxJoin" />
    </Node>
    <Node ToolID="18">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="696" y="491.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField field="HTML" type="V_WString" size="99999999" expression="[JSON] + &quot;&#xA;&quot; + [Concat_Field_1]" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>HTML=[JSON] + "
" + [Concat_Field_1]</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="JSON" size="2147483647" source="Formula: &quot;&lt;script&gt;function alteryxData() {&#xA;    return &quot; + [JSON] + &quot;;&#xA;}&#xA;&lt;/script&gt;&quot;" type="V_String" />
            <Field name="Concat_Field_1" size="1073741823" source="Summarize: Concat - Field_1" type="V_WString" />
            <Field name="HTML" size="99999999" source="Formula: [JSON] + &quot;&#xA;&quot; + [Concat_Field_1]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="19">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="792" y="491.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <SelectFields>
            <SelectField field="JSON" selected="False" />
            <SelectField field="Concat_Field_1" selected="False" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="HTML" size="99999999" source="Formula: [JSON] + &quot;&#xA;&quot; + [Concat_Field_1]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="21">
      <GuiSettings Plugin="PortfolioPluginsGui.ComposerImage.PortfolioComposerImage">
        <Position x="918" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <ImageMode>File</ImageMode>
          <Filename>test.png</Filename>
          <ModifyFilename value="True" />
          <ModifyMode>ReplacePath</ModifyMode>
          <ModifyField>Field_1</ModifyField>
          <StopIfNotFound value="True" />
          <ImageStyle FixedWidth="false" ImageWidth="600" ShowBorder="false" BorderWidth="1" BorderColor="#000000" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Field_1" size="254" source="File: C:\Users\ariley\AppData\Local\Temp\Engine_2796_768da4e11084459db619b4c7c7a25502\output.txt" type="V_String" />
            <Field name="Image" size="2147483647" source="Report:Image:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="PortfolioPluginsEngine.dll" EngineDllEntryPoint="AlteryxPortfolioComposerImagePlugin" />
    </Node>
    <Node ToolID="25">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="1014" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <SelectFields>
            <SelectField field="Field_1" selected="False" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Image" size="2147483647" source="Report:Image:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="26">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="984" y="491.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <SelectFields>
            <SelectField field="Text" selected="True" rename="Image" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Image" size="2147483647" source="Report:Text: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="28">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="570" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField field="HTML" type="V_WString" size="99999999" expression="'&lt;!DOCTYPE html&gt;&#xA;&lt;meta charset=&quot;utf-8&quot;&gt;&#xA;&lt;body style=&quot;background-color: white;&quot;&gt;&#xA;' + HTML + '&#xA;&lt;/body&gt;'" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>HTML='&lt;!DOCTYPE html&gt;
&lt;meta charset="utf-8"&gt;
&lt;body style="bac...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="HTML" size="99999999" source="Formula: '&lt;!DOCTYPE html&gt;&#xA;&lt;meta charset=&quot;utf-8&quot;&gt;&#xA;&lt;body style=&quot;background-color: white;&quot;&gt;&#xA;' + HTML + '&#xA;&lt;/body&gt;'" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="32">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RunCommand.RunCommand">
        <Position x="666" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OutputConfiguration>
            <Configuration>
              <File MaxRecords="" FileFormat="0">%temp%\z_htmlchart.html</File>
              <Passwords />
              <FormatSpecificOptions>
                <LineEndStyle>CRLF</LineEndStyle>
                <Delimeter>\0</Delimeter>
                <ForceQuotes>False</ForceQuotes>
                <HeaderRow>False</HeaderRow>
                <CodePage>65001</CodePage>
              </FormatSpecificOptions>
              <MultiFile value="False" />
            </Configuration>
          </OutputConfiguration>
          <InputConfiguration>
            <Configuration>
              <Passwords />
              <File OutputFileName="" RecordLimit="1" SearchSubDirs="False" FileFormat="0">%temp%\output.txt</File>
              <FormatSpecificOptions>
                <CodePage>28591</CodePage>
                <Delimeter>\0</Delimeter>
                <IgnoreErrors>False</IgnoreErrors>
                <FieldLen>254</FieldLen>
                <AllowShareWrite>False</AllowShareWrite>
                <HeaderRow>False</HeaderRow>
                <IgnoreQuotes>DoubleQuotes</IgnoreQuotes>
              </FormatSpecificOptions>
            </Configuration>
          </InputConfiguration>
          <ProgramName>cmd.exe</ProgramName>
          <Arguments>/c ..\3rdParty\PhantomJS\phantomjs SupportingScripts\NVD3_rasterize.js "file:///%temp%\z_htmlchart.html" %temp%\test.png 800 600 1.01 &gt;%temp%\output.txt</Arguments>
          <WorkingDir />
          <RunMinimized value="False" />
          <RunSilent value="True" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>Run cmd.exe</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Field_1" size="254" source="File: C:\Users\ariley\AppData\Local\Temp\Engine_2796_768da4e11084459db619b4c7c7a25502\output.txt" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRunCommand" />
    </Node>
    <Node ToolID="34">
      <GuiSettings Plugin="AlteryxSpatialPluginsGui.Summarize.Summarize">
        <Position x="408" y="587.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <SummarizeFields>
            <SummarizeField field="Field_1" action="Concat" rename="Concat_Field_1">
              <Separator>\n</Separator>
            </SummarizeField>
          </SummarizeFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Concat_Field_1" size="1073741823" source="Summarize: Concat - Field_1" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxSpatialPluginsEngine.dll" EngineDllEntryPoint="AlteryxSummarize" />
    </Node>
    <Node ToolID="35">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Union.Union">
        <Position x="312" y="587.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <ByName_ErrorMode>Warning</ByName_ErrorMode>
          <ByName_OutputMode>All</ByName_OutputMode>
          <Mode>ByName</Mode>
          <SetOutputOrder value="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Field_1" size="40369" source="TextInput:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxUnion" />
    </Node>
    <Node ToolID="37">
      <GuiSettings Plugin="PortfolioPluginsGui.ComposerText.PortfolioComposerText">
        <Position x="1206" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <HeaderMode value="False" />
          <RawMode value="True" />
          <ValidatePCXML value="True" />
          <Message>&lt;div&gt;
[Right_Image:A]
[Image:A]
&lt;/div&gt;</Message>
          <RichTextMode value="False" />
          <RichTextString><![CDATA[{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Microsoft Sans Serif;}}
\viewkind4\uc1\pard\f0\fs29\par
}
]]></RichTextString>
          <Styles>
            <Style Name="TextStyle" />
          </Styles>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>Raw PCXML
No Text Styling</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Image" size="2147483647" source="Report:Text: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="V_String" />
            <Field name="Right_Image" size="2147483647" source="Report:Image:" type="V_String" />
            <Field name="Text" size="2147483647" source="Report:Text:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="PortfolioPluginsEngine.dll" EngineDllEntryPoint="AlteryxPortfolioComposerTextPlugin" />
    </Node>
    <Node ToolID="38">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Join.Join">
        <Position x="1110" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration joinByRecordPos="True">
          <SelectConfiguration>
            <Configuration outputConnection="Join">
              <OrderChanged value="False" />
              <SelectFields>
                <SelectField field="Right_Image" selected="True" rename="Right_Image" />
                <SelectField field="*Unknown" selected="True" />
              </SelectFields>
            </Configuration>
          </SelectConfiguration>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Left">
          <RecordInfo>
            <Field name="Image" size="2147483647" source="Report:Text: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Join">
          <RecordInfo>
            <Field name="Image" size="2147483647" source="Report:Text: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="V_String" />
            <Field name="Right_Image" size="2147483647" source="Report:Image:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Right">
          <RecordInfo>
            <Field name="Image" size="2147483647" source="Report:Image:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxJoin" />
    </Node>
    <Node ToolID="39">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="1302" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <SelectFields>
            <SelectField field="Text" selected="True" rename="InteractiveChart" />
            <SelectField field="*Unknown" selected="False" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="InteractiveChart" size="2147483647" source="Report:Text:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="43">
      <GuiSettings Plugin="AlteryxBasePluginsGui.TextInput.TextInput">
        <Position x="120" y="635.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <NumRows value="63" />
          <Fields>
            <Field name="Field_1" />
          </Fields>
          <Data>
            <r>
              <c />
            </r>
            <r>
              <c>&lt;div id="ChartHtml"&gt;</c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[    <div id="chart1" style="width:800px; height:600px;background-color: white;">]]></c>
            </r>
            <r>
              <c><![CDATA[        <svg ></svg>]]></c>
            </r>
            <r>
              <c><![CDATA[    </div>]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[    <script>]]></c>
            </r>
            <r>
              <c><![CDATA[        var parent = document.getElementById("ChartHtml").parentNode.parentNode;]]></c>
            </r>
            <r>
              <c><![CDATA[        var cells = parent.getElementsByTagName("img");]]></c>
            </r>
            <r>
              <c><![CDATA[        for (var i = 0; i < cells.length; i++)]]></c>
            </r>
            <r>
              <c><![CDATA[            cells[i].style.display = "none";]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[        var chart;]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[        nv.addGraph(function () {]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[            chart = nv.models.stackedAreaChart()]]></c>
            </r>
            <r>
              <c><![CDATA[                .options({]]></c>
            </r>
            <r>
              <c><![CDATA[                    x: function (d, i) { return i },]]></c>
            </r>
            <r>
              <c><![CDATA[                    showXAxis: true,]]></c>
            </r>
            <r>
              <c><![CDATA[                    showYAxis: true,]]></c>
            </r>
            <r>
              <c><![CDATA[                    forceY: 0]]></c>
            </r>
            <r>
              <c><![CDATA[                      //stacked : true]]></c>
            </r>
            <r>
              <c><![CDATA[                });]]></c>
            </r>
            <r>
              <c><![CDATA[            chart.margin({ left: 80 });]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[            chart.xAxis]]></c>
            </r>
            <r>
              <c><![CDATA[                  .axisLabel('Year')]]></c>
            </r>
            <r>
              <c><![CDATA[                .tickFormat(function (d) { return alteryxData()["Name"][d]; });]]></c>
            </r>
            <r>
              <c><![CDATA[            chart.yAxis]]></c>
            </r>
            <r>
              <c><![CDATA[              .axisLabel('Billions of Dollars')]]></c>
            </r>
            <r>
              <c><![CDATA[              .tickFormat(function (d) { return '$' + d3.format('0,000.0')(Math.round(10*d / 1000000000)/10) + '%'; })]]></c>
            </r>
            <r>
              <c><![CDATA[            ;]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[            d3.select('#chart1 svg')]]></c>
            </r>
            <r>
              <c><![CDATA[              .datum(theData())]]></c>
            </r>
            <r>
              <c><![CDATA[              .call(chart);]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[            return chart;]]></c>
            </r>
            <r>
              <c><![CDATA[        });]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c><![CDATA[        function theData() {]]></c>
            </r>
            <r>
              <c><![CDATA[            var ret = [];]]></c>
            </r>
            <r>
              <c><![CDATA[            var data = alteryxData();]]></c>
            </r>
            <r>
              <c><![CDATA[            var names = data["Name"];]]></c>
            </r>
            <r>
              <c><![CDATA[            for (var name in data) {]]></c>
            </r>
            <r>
              <c><![CDATA[                if (name != "Name") {]]></c>
            </r>
            <r>
              <c><![CDATA[                    var v = data[name];]]></c>
            </r>
            <r>
              <c><![CDATA[                    var out = [];]]></c>
            </r>
            <r>
              <c><![CDATA[                    for (var i = 0; i < names.length; ++i) {]]></c>
            </r>
            <r>
              <c><![CDATA[                        out.push({ x: names[i], y: v[i] });]]></c>
            </r>
            <r>
              <c><![CDATA[                    }]]></c>
            </r>
            <r>
              <c><![CDATA[                    ret.push({ values: out, key: name });]]></c>
            </r>
            <r>
              <c><![CDATA[                }]]></c>
            </r>
            <r>
              <c><![CDATA[            }]]></c>
            </r>
            <r>
              <c><![CDATA[            return ret;]]></c>
            </r>
            <r>
              <c><![CDATA[        }]]></c>
            </r>
            <r>
              <c />
            </r>
            <r>
              <c>&lt;/script&gt;</c>
            </r>
            <r>
              <c>&lt;/div&gt;</c>
            </r>
            <r>
              <c><![CDATA[  ]]></c>
            </r>
          </Data>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Field_1" size="118" source="TextInput:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxTextInput" />
    </Node>
    <Node ToolID="74">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="1398" y="762" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>Output</Name>
          <Abbrev>
          </Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name>Output</Name>
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="73">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroInput.MacroInput">
        <Position x="108" y="323.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UseFileInput value="False" />
          <Name>Input</Name>
          <Abbrev />
          <ShowFieldMap value="False" />
          <TextInput>
            <Configuration>
              <NumRows value="54" />
              <Fields>
                <Field name="NameTemplate" />
                <Field name="Brazil" />
                <Field name="China" />
                <Field name="France" />
                <Field name="Germany" />
                <Field name="India" />
                <Field name="Italy" />
                <Field name="Japan" />
                <Field name="Russian_Federation" />
                <Field name="United_Kingdom" />
                <Field name="United_States" />
              </Fields>
              <Data>
                <r>
                  <c>1960a</c>
                  <c>15165569912.5199</c>
                  <c>61377930682.0013</c>
                  <c>62651474946.6007</c>
                  <c />
                  <c />
                  <c>40385288344.1911</c>
                  <c>44307342950.4</c>
                  <c />
                  <c>72328047042.1588</c>
                  <c>520531181568</c>
                </r>
                <r>
                  <c>1961b</c>
                  <c>15236854859.469</c>
                  <c>50100934915.6492</c>
                  <c>68346741504.4257</c>
                  <c />
                  <c />
                  <c>44842760293.1924</c>
                  <c>53508617739.3778</c>
                  <c />
                  <c>76694360635.9159</c>
                  <c>539050934272</c>
                </r>
                <r>
                  <c>1962</c>
                  <c>19926293839.0163</c>
                  <c>46464003927.0217</c>
                  <c>76313782251.6964</c>
                  <c />
                  <c />
                  <c>50383891898.9911</c>
                  <c>60723018683.7333</c>
                  <c />
                  <c>80601939635.2483</c>
                  <c>579748429824</c>
                </r>
                <r>
                  <c>1963</c>
                  <c>23021477292.2093</c>
                  <c>50280424169.1138</c>
                  <c>85551113767.3727</c>
                  <c />
                  <c />
                  <c>57710743059.8341</c>
                  <c>69498131797.3333</c>
                  <c />
                  <c>85443766670.4279</c>
                  <c>611669508096</c>
                </r>
                <r>
                  <c>1964</c>
                  <c>21211892259.9904</c>
                  <c>58613239132.7057</c>
                  <c>94906593388.3107</c>
                  <c />
                  <c />
                  <c>63175417019.0094</c>
                  <c>81749006381.5111</c>
                  <c />
                  <c>93387598813.9269</c>
                  <c>656912089088</c>
                </r>
                <r>
                  <c>1965</c>
                  <c>21790035102.382</c>
                  <c>69709152023.4307</c>
                  <c>102160571409.274</c>
                  <c />
                  <c />
                  <c>67978153850.5191</c>
                  <c>90950278257.7778</c>
                  <c />
                  <c>100595782309.165</c>
                  <c>712081997824</c>
                </r>
                <r>
                  <c>1966</c>
                  <c>27062716510.5085</c>
                  <c>75879433528.3157</c>
                  <c>110597467198.645</c>
                  <c />
                  <c />
                  <c>73654870011.2757</c>
                  <c>105628070343.111</c>
                  <c />
                  <c>107090721447.057</c>
                  <c>780760514560</c>
                </r>
                <r>
                  <c>1967</c>
                  <c>30591834045.3823</c>
                  <c>72057026115.9338</c>
                  <c>119466139619.589</c>
                  <c />
                  <c />
                  <c>81133120065.4202</c>
                  <c>123781880217.6</c>
                  <c />
                  <c>111185383409.521</c>
                  <c>825056165888</c>
                </r>
                <r>
                  <c>1968</c>
                  <c>33875881906.0553</c>
                  <c>69993499400.1529</c>
                  <c>129847107787.883</c>
                  <c />
                  <c />
                  <c>87942231678.3505</c>
                  <c>146601072685.511</c>
                  <c />
                  <c>104702736248.084</c>
                  <c>901455806464</c>
                </r>
                <r>
                  <c>1969</c>
                  <c>37458898265.2258</c>
                  <c>78718820945.8759</c>
                  <c>140725497222.277</c>
                  <c />
                  <c />
                  <c>97085082807.3751</c>
                  <c>172204199480.889</c>
                  <c />
                  <c>112676874821.987</c>
                  <c>973385170944</c>
                </r>
                <r>
                  <c>1970</c>
                  <c>42327600115.9852</c>
                  <c>91506213646.1258</c>
                  <c>146441124365.182</c>
                  <c>208869771037.638</c>
                  <c>63517181993.6053</c>
                  <c>109254765501.859</c>
                  <c>209070551156.728</c>
                  <c />
                  <c>124795414233.403</c>
                  <c>1024800000000</c>
                </r>
                <r>
                  <c>1971</c>
                  <c>49204456711.657</c>
                  <c>98562021764.4023</c>
                  <c>163695749970.404</c>
                  <c>241913902391.321</c>
                  <c>68532271313.3294</c>
                  <c>120120043348.939</c>
                  <c>236154755295.311</c>
                  <c />
                  <c>141173077753.817</c>
                  <c>1113100000000</c>
                </r>
                <r>
                  <c>1972</c>
                  <c>58539008795.7658</c>
                  <c>112159815863.885</c>
                  <c>200955006501.951</c>
                  <c>290121986826.722</c>
                  <c>72716595886.0793</c>
                  <c>139955971404.382</c>
                  <c>312738030289.861</c>
                  <c />
                  <c>162199828773.059</c>
                  <c>1225000000000</c>
                </r>
                <r>
                  <c>1973</c>
                  <c>79279057736.1044</c>
                  <c>136769881126.331</c>
                  <c>261476281673.542</c>
                  <c>385511902238.43</c>
                  <c>87014945188.1292</c>
                  <c>169084087914.314</c>
                  <c>424891148590.079</c>
                  <c />
                  <c>183042760577.565</c>
                  <c>1369300000000</c>
                </r>
                <r>
                  <c>1974</c>
                  <c>105136007544.771</c>
                  <c>142254740054.455</c>
                  <c>282165984724.495</c>
                  <c>430926173895.312</c>
                  <c>101271489825.572</c>
                  <c>192277533277.761</c>
                  <c>471643172433.559</c>
                  <c />
                  <c>197728221109.711</c>
                  <c>1485900000000</c>
                </r>
                <r>
                  <c>1975</c>
                  <c>123709376566.885</c>
                  <c>161162497663.83</c>
                  <c>355600887257.152</c>
                  <c>474795560457.4</c>
                  <c>100199514361.009</c>
                  <c>219381696527.284</c>
                  <c>512861437158.428</c>
                  <c />
                  <c>236425105833.394</c>
                  <c>1623400000000</c>
                </r>
                <r>
                  <c>1976</c>
                  <c>152678020453.114</c>
                  <c>151627679386.658</c>
                  <c>367269735045.07</c>
                  <c>502973378649.526</c>
                  <c>104518118780.154</c>
                  <c>216511885598.977</c>
                  <c>576405865272.702</c>
                  <c />
                  <c>227154794942.501</c>
                  <c>1809100000000</c>
                </r>
                <r>
                  <c>1977</c>
                  <c>176171284305.289</c>
                  <c>172349008332.744</c>
                  <c>405391414816.796</c>
                  <c>581110225899.624</c>
                  <c>123617837579.073</c>
                  <c>248190364575.379</c>
                  <c>709404712455.298</c>
                  <c />
                  <c>256549448457.881</c>
                  <c>2013600000000</c>
                </r>
                <r>
                  <c>1978</c>
                  <c>200800891871.957</c>
                  <c>148178859490.823</c>
                  <c>500065261627.907</c>
                  <c>716562767146.076</c>
                  <c>139708688959.484</c>
                  <c>303554190323.979</c>
                  <c>996741758196.698</c>
                  <c />
                  <c>325122723735.856</c>
                  <c>2276000000000</c>
                </r>
                <r>
                  <c>1979</c>
                  <c>224969488839.356</c>
                  <c>176634786270.697</c>
                  <c>605024051803.885</c>
                  <c>852889587366.288</c>
                  <c>155674337009.821</c>
                  <c>379302315991.61</c>
                  <c>1037452649454.79</c>
                  <c />
                  <c>422476906755.023</c>
                  <c>2543500000000</c>
                </r>
                <r>
                  <c>1980</c>
                  <c>235024598984.118</c>
                  <c>189399992473.921</c>
                  <c>690324433405.775</c>
                  <c>919609249883.11</c>
                  <c>189594121347.877</c>
                  <c>459830080798.101</c>
                  <c>1086988088500.98</c>
                  <c />
                  <c>541910295142.924</c>
                  <c>2767500000000</c>
                </r>
                <r>
                  <c>1981</c>
                  <c>263561088975.615</c>
                  <c>194111112580.308</c>
                  <c>605221484610.742</c>
                  <c>774627579736.361</c>
                  <c>196883474526.44</c>
                  <c>414976039558.849</c>
                  <c>1201465862931.98</c>
                  <c />
                  <c>515030144694.534</c>
                  <c>3103800000000</c>
                </r>
                <r>
                  <c>1982</c>
                  <c>281682304160.256</c>
                  <c>203183214981.86</c>
                  <c>574594470506.039</c>
                  <c>751503470607.305</c>
                  <c>204234366470.423</c>
                  <c>411671084979.241</c>
                  <c>1116840773461.85</c>
                  <c />
                  <c>490957372466.806</c>
                  <c>3227700000000</c>
                </r>
                <r>
                  <c>1983</c>
                  <c>203304515490.695</c>
                  <c>228455947879.686</c>
                  <c>550344091574.146</c>
                  <c>745801590616.898</c>
                  <c>222090283349.141</c>
                  <c>426864993168.027</c>
                  <c>1218106450431.84</c>
                  <c />
                  <c>465676822798.242</c>
                  <c>3506900000000</c>
                </r>
                <r>
                  <c>1984</c>
                  <c>209023912696.764</c>
                  <c>257432147241.187</c>
                  <c>521686181790.888</c>
                  <c>701699792252.972</c>
                  <c>215878233652.135</c>
                  <c>421898527725.369</c>
                  <c>1294608503864.81</c>
                  <c />
                  <c>438830806065.443</c>
                  <c>3900400000000</c>
                </r>
                <r>
                  <c>1985</c>
                  <c>222942790435.318</c>
                  <c>306666660698.093</c>
                  <c>543485326325.011</c>
                  <c>708883867563.958</c>
                  <c>236589100978.44</c>
                  <c>435705088167.529</c>
                  <c>1384532251034.57</c>
                  <c />
                  <c>464268480492.813</c>
                  <c>4184800000000</c>
                </r>
                <r>
                  <c>1986</c>
                  <c>268137224729.724</c>
                  <c>297831879941.527</c>
                  <c>758520030305.9</c>
                  <c>1012479276703.47</c>
                  <c>253352444883.55</c>
                  <c>617003094712.3</c>
                  <c>2051061226984.48</c>
                  <c />
                  <c>570432424508.942</c>
                  <c>4425000000000</c>
                </r>
                <r>
                  <c>1987</c>
                  <c>294084112392.657</c>
                  <c>270372194996.888</c>
                  <c>917896322165.23</c>
                  <c>1256262486740.27</c>
                  <c>283926977522.353</c>
                  <c>776293080273.379</c>
                  <c>2485236197212.38</c>
                  <c />
                  <c>700547475077.627</c>
                  <c>4698900000000</c>
                </r>
                <r>
                  <c>1988</c>
                  <c>330397381998.489</c>
                  <c>309522625241.62</c>
                  <c>1001159453804.65</c>
                  <c>1355992248617.77</c>
                  <c>301790951202.894</c>
                  <c>859052483314.49</c>
                  <c>3015393553892.39</c>
                  <c />
                  <c>851138384916.4</c>
                  <c>5061900000000</c>
                </r>
                <r>
                  <c>1989</c>
                  <c>425595310000</c>
                  <c>343973680226.249</c>
                  <c>1007009356364.38</c>
                  <c>1353799613924.54</c>
                  <c>301233728790.862</c>
                  <c>894751916820.491</c>
                  <c>3017052046398.07</c>
                  <c>506500146307.614</c>
                  <c>859414267015.707</c>
                  <c>5439700000000</c>
                </r>
                <r>
                  <c>1990</c>
                  <c>461951782000</c>
                  <c>356936901183.933</c>
                  <c>1244163956149.86</c>
                  <c>1714470068623.4</c>
                  <c>326608014285.815</c>
                  <c>1138091138036.52</c>
                  <c>3103698099973.54</c>
                  <c>516814258695.568</c>
                  <c>1019307528409.09</c>
                  <c>5750800000000</c>
                </r>
                <r>
                  <c>1991</c>
                  <c>407337832905.405</c>
                  <c>379468656246.252</c>
                  <c>1245406348099.06</c>
                  <c>1808603417796.11</c>
                  <c>274842348144.396</c>
                  <c>1200715302564.38</c>
                  <c>3536800942895.47</c>
                  <c>509381638906.293</c>
                  <c>1064201058201.06</c>
                  <c>5930700000000</c>
                </r>
                <r>
                  <c>1992</c>
                  <c>390566551483.761</c>
                  <c>422660918111.414</c>
                  <c>1372967781908.3</c>
                  <c>2064370695053.22</c>
                  <c>293262352360.487</c>
                  <c>1271956871335.43</c>
                  <c>3852794371593.94</c>
                  <c>460205414725.771</c>
                  <c>1101730431730.43</c>
                  <c>6261800000000</c>
                </r>
                <r>
                  <c>1993</c>
                  <c>438299504406.263</c>
                  <c>440500898964.599</c>
                  <c>1297003822098.68</c>
                  <c>2007452975275.05</c>
                  <c>284193716755.321</c>
                  <c>1026071880521.72</c>
                  <c>4414962786901.46</c>
                  <c>435060123490.732</c>
                  <c>991046790641.872</c>
                  <c>6582900000000</c>
                </r>
                <r>
                  <c>1994</c>
                  <c>546233380259.659</c>
                  <c>559224707280.731</c>
                  <c>1368008034026.46</c>
                  <c>2148005303121.61</c>
                  <c>333014463391.511</c>
                  <c>1059079564101.83</c>
                  <c>4850348016491.89</c>
                  <c>395086555837.015</c>
                  <c>1072190082644.63</c>
                  <c>6993300000000</c>
                </r>
                <r>
                  <c>1995</c>
                  <c>768951297894.977</c>
                  <c>728007199936.412</c>
                  <c>1572061768957.81</c>
                  <c>2522860652381.6</c>
                  <c>366599645609.097</c>
                  <c>1131770110939.02</c>
                  <c>5333925511058.95</c>
                  <c>395528488655.671</c>
                  <c>1170658040082.06</c>
                  <c>7338400000000</c>
                </r>
                <r>
                  <c>1996</c>
                  <c>839682618644.911</c>
                  <c>856084729312.253</c>
                  <c>1572776381587.38</c>
                  <c>2436963867949.05</c>
                  <c>399786888515.031</c>
                  <c>1266354134493.66</c>
                  <c>4706187126019.61</c>
                  <c>391721392325.09</c>
                  <c>1229931357254.29</c>
                  <c>7751100000000</c>
                </r>
                <r>
                  <c>1997</c>
                  <c>871200342859.687</c>
                  <c>952652693079.137</c>
                  <c>1421492020678.8</c>
                  <c>2157229866907.29</c>
                  <c>423160419439.977</c>
                  <c>1198654411765.58</c>
                  <c>4324278106865.89</c>
                  <c>404926534140.017</c>
                  <c>1368099214145.38</c>
                  <c>8256500000000</c>
                </r>
                <r>
                  <c>1998</c>
                  <c>843827363149.355</c>
                  <c>1019458585326.15</c>
                  <c>1468872804091.62</c>
                  <c>2178170501278.2</c>
                  <c>428741030147.281</c>
                  <c>1224579873011.04</c>
                  <c>3914574887342.22</c>
                  <c>270953116950.026</c>
                  <c>1461937727724.41</c>
                  <c>8741000000000</c>
                </r>
                <r>
                  <c>1999</c>
                  <c>586862640399.442</c>
                  <c>1083277930359.88</c>
                  <c>1456431067547.41</c>
                  <c>2131046239079.48</c>
                  <c>464344395616.421</c>
                  <c>1208180354708.08</c>
                  <c>4432599282922.53</c>
                  <c>195905767668.562</c>
                  <c>1503751820093.84</c>
                  <c>9301000000000</c>
                </r>
                <r>
                  <c>2000</c>
                  <c>644701831101.394</c>
                  <c>1198474934198.78</c>
                  <c>1326334899576.19</c>
                  <c>1886401326699.83</c>
                  <c>474691627708.133</c>
                  <c>1104009462562.19</c>
                  <c>4731198760271.14</c>
                  <c>259708496267.33</c>
                  <c>1475705855651.38</c>
                  <c>9898800000000</c>
                </r>
                <r>
                  <c>2001</c>
                  <c>553582178386.192</c>
                  <c>1324806914358.35</c>
                  <c>1338302818791.95</c>
                  <c>1880894854586.13</c>
                  <c>492378579615.659</c>
                  <c>1123702691037.14</c>
                  <c>4159859918093.56</c>
                  <c>306602673980.117</c>
                  <c>1468026486253.06</c>
                  <c>10233900000000</c>
                </r>
                <r>
                  <c>2002</c>
                  <c>504221228974.035</c>
                  <c>1453827554714.01</c>
                  <c>1452030303030.3</c>
                  <c>2006587615283.27</c>
                  <c>522798457731.02</c>
                  <c>1225176959595.33</c>
                  <c>3980819536159.76</c>
                  <c>345110438693.573</c>
                  <c>1601617206235.01</c>
                  <c>10590200000000</c>
                </r>
                <r>
                  <c>2003</c>
                  <c>552469288267.793</c>
                  <c>1640958732775.07</c>
                  <c>1792214221218.96</c>
                  <c>2423814898419.86</c>
                  <c>617572578402.853</c>
                  <c>1514503536381.49</c>
                  <c>4302939184963.79</c>
                  <c>430347770733.155</c>
                  <c>1855666938775.51</c>
                  <c>11089300000000</c>
                </r>
                <r>
                  <c>2004</c>
                  <c>663760341880.342</c>
                  <c>1931644331142.47</c>
                  <c>2055678853687.46</c>
                  <c>2726341472500.05</c>
                  <c>721585293250.318</c>
                  <c>1735521503771.58</c>
                  <c>4655803055650.55</c>
                  <c>591016690742.937</c>
                  <c>2196860009520.67</c>
                  <c>11797800000000</c>
                </r>
                <r>
                  <c>2005</c>
                  <c>882185702547.247</c>
                  <c>2256902590825.33</c>
                  <c>2136555489230.46</c>
                  <c>2766253792966.22</c>
                  <c>834216897836.722</c>
                  <c>1786275014006.62</c>
                  <c>4571875737175.42</c>
                  <c>764000901160.58</c>
                  <c>2295844712162.59</c>
                  <c>12564300000000</c>
                </r>
                <r>
                  <c>2006</c>
                  <c>1088916819852.94</c>
                  <c>2712950886698.27</c>
                  <c>2255705477450.04</c>
                  <c>2902748698160.05</c>
                  <c>949116769619.216</c>
                  <c>1872982702430.31</c>
                  <c>4356761451087.28</c>
                  <c>989930542278.684</c>
                  <c>2452969436251.46</c>
                  <c>13314500000000</c>
                </r>
                <r>
                  <c>2007</c>
                  <c>1366853244424.28</c>
                  <c>3494055944791.32</c>
                  <c>2582389733356.33</c>
                  <c>3323807412152.12</c>
                  <c>1238700195643.9</c>
                  <c>2127180496503.06</c>
                  <c>4356329296669.33</c>
                  <c>1299705764824.48</c>
                  <c>2825526440056.67</c>
                  <c>13961800000000</c>
                </r>
                <r>
                  <c>2008</c>
                  <c>1653538618144.8</c>
                  <c>4521827288303.98</c>
                  <c>2831794045482.84</c>
                  <c>3623686234298.9</c>
                  <c>1224096625885.47</c>
                  <c>2307311495086.24</c>
                  <c>4849208099923.57</c>
                  <c>1660846387626</c>
                  <c>2648935779074.43</c>
                  <c>14219300000000</c>
                </r>
                <r>
                  <c>2009</c>
                  <c>1620165226993.77</c>
                  <c>4991256406734.99</c>
                  <c>2619685000757.11</c>
                  <c>3298635952561.88</c>
                  <c>1365372912989.09</c>
                  <c>2111148008711.62</c>
                  <c>5035141567658.9</c>
                  <c>1222648134225.45</c>
                  <c>2183862761501.06</c>
                  <c>13898300000000</c>
                </r>
                <r>
                  <c>2010</c>
                  <c>2143035333258.24</c>
                  <c>5949785721835.46</c>
                  <c>2548315434210.53</c>
                  <c>3284473684210.53</c>
                  <c>1710917218018.04</c>
                  <c>2041954747600</c>
                  <c>5495379357484.62</c>
                  <c>1524915341870.26</c>
                  <c>2256260000000</c>
                  <c>14419400000000</c>
                </r>
                <r>
                  <c>2011</c>
                  <c>2476652189879.72</c>
                  <c>7314432078359.94</c>
                  <c>2779719500000</c>
                  <c>3600833333333.33</c>
                  <c>1872845406804.92</c>
                  <c>2192357094734.72</c>
                  <c>5896794887858.66</c>
                  <c>1899086233311.76</c>
                  <c>2444883870967.74</c>
                  <c>14991300000000</c>
                </r>
                <r>
                  <c>2012</c>
                  <c>2252664120777.39</c>
                  <c>8358363135690.43</c>
                  <c>2612878387760.35</c>
                  <c>3399588583183.34</c>
                  <c>1841717371769.71</c>
                  <c>2013263114238.88</c>
                  <c>5959718262199.13</c>
                  <c>2014776311554.55</c>
                  <c>2435173775671.41</c>
                  <c>15684800000000</c>
                </r>
              </Data>
            </Configuration>
          </TextInput>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name>Input</Name>
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NameTemplate" size="5" source="TextInput:" type="String" />
            <Field name="Brazil" source="TextInput:" type="Double" />
            <Field name="China" source="TextInput:" type="Double" />
            <Field name="France" source="TextInput:" type="Double" />
            <Field name="Germany" source="TextInput:" type="Double" />
            <Field name="India" source="TextInput:" type="Double" />
            <Field name="Italy" source="TextInput:" type="Double" />
            <Field name="Japan" source="TextInput:" type="Double" />
            <Field name="Russian_Federation" source="TextInput:" type="Double" />
            <Field name="United_Kingdom" source="TextInput:" type="Double" />
            <Field name="United_States" source="TextInput:" type="Int64" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroInput" />
    </Node>
    <Node ToolID="49">
      <GuiSettings Plugin="AlteryxBasePluginsGui.BrowseV2.BrowseV2">
        <Position x="1398" y="822" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <TempFile>C:\Users\ariley\AppData\Local\Temp\Engine_2796_768da4e11084459db619b4c7c7a25502\Engine_13304_b9fd6bfca2604107ae6c37e69a57700e.yxdb</TempFile>
          <Layout>
            <ViewMode>Single</ViewMode>
            <ViewSize value="100" />
            <View1>
              <DefaultTab>Report</DefaultTab>
              <Hints />
            </View1>
            <View2 />
          </Layout>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxBrowseV2" />
    </Node>
    <Node ToolID="50">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="204" y="323.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <SelectFields>
            <SelectField field="NameTemplate" selected="True" rename="Name" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Name" size="5" source="TextInput:" type="String" />
            <Field name="Brazil" source="TextInput:" type="Double" />
            <Field name="China" source="TextInput:" type="Double" />
            <Field name="France" source="TextInput:" type="Double" />
            <Field name="Germany" source="TextInput:" type="Double" />
            <Field name="India" source="TextInput:" type="Double" />
            <Field name="Italy" source="TextInput:" type="Double" />
            <Field name="Japan" source="TextInput:" type="Double" />
            <Field name="Russian_Federation" source="TextInput:" type="Double" />
            <Field name="United_Kingdom" source="TextInput:" type="Double" />
            <Field name="United_States" source="TextInput:" type="Int64" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="71">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="54" y="269.1" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="72">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="54" y="269.1" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="44">
      <GuiSettings Plugin="AlteryxGuiToolkit.ToolContainer.ToolContainer">
        <Position x="110" y="438.1" width="120" height="158" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Caption>Container 44</Caption>
          <Style TextColor="#2f4f4f" FillColor="#ecf2f2" BorderColor="#2f4f4f" Transparency="25" Margin="10" />
          <Disabled value="False" />
          <Folded value="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <ChildNodes>
        <Node ToolID="42">
          <GuiSettings Plugin="AlteryxBasePluginsGui.TextInput.TextInput">
            <Position x="120" y="527.1" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <NumRows value="93" />
              <Fields>
                <Field name="Field_1" />
              </Fields>
              <Data>
                <r>
                  <c>&lt;style&gt;</c>
                </r>
                <r>
                  <c>.chartWrap{margin:0;padding:0;overflow:hidden}.nvtooltip.with-3d-shadow,.with-3d-shadow .nvtooltip{-moz-box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px}.nvtooltip{position:absolute;background-color:rgba(255,255,255,1.0);padding:1px;border:1px solid rgba(0,0,0,.2);z-index:10000;font-family:Arial;font-size:13px;text-align:left;pointer-events:none;white-space:nowrap;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nvtooltip.with-transitions,.with-transitions .nvtooltip{transition:opacity 250ms linear;-moz-transition:opacity 250ms linear;-webkit-transition:opacity 250ms linear;transition-delay:250ms;-moz-transition-delay:250ms;-webkit-transition-delay:250ms}.nvtooltip.x-nvtooltip,.nvtooltip.y-nvtooltip{padding:8px}.nvtooltip h3{margin:0;padding:4px 14px;line-height:18px;font-weight:normal;background-color:rgba(247,247,247,0.75);text-align:center;border-bottom:1px solid #ebebeb;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0}.nvtooltip p{margin:0;padding:5px 14px;text-align:center}.nvtooltip span{display:inline-block;margin:2px 0}.nvtooltip table{margin:6px;border-spacing:0}.nvtooltip table td{padding:2px 9px 2px 0;vertical-align:middle}.nvtooltip table td.key{font-weight:normal}.nvtooltip table td.value{text-align:right;font-weight:bold}.nvtooltip table tr.highlight td{padding:1px 9px 1px 0;border-bottom-style:solid;border-bottom-width:1px;border-top-style:solid;border-top-width:1px}.nvtooltip table td.legend-color-guide div{width:8px;height:8px;vertical-align:middle}.nvtooltip .footer{padding:3px;text-align:center}.nvtooltip-pending-removal{position:absolute;pointer-events:none}svg{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block;width:100%;height:100%}svg text{font:normal 12px Arial}svg .title{font:bold 14px Arial}.nvd3 .nv-background{fill:white;fill-opacity:0}.nvd3.nv-noData{font-size:18px;font-weight:bold}.nv-brush .extent{fill-opacity:.125;shape-rendering:crispEdges}.nvd3 .nv-legend .nv-series{cursor:pointer}.nvd3 .nv-legend .disabled circle{fill-opacity:0}.nvd3 .nv-axis{pointer-events:none}.nvd3 .nv-axis path{fill:none;stroke:#000;stroke-opacity:.75;shape-rendering:crispEdges}.nvd3 .nv-axis path.domain{stroke-opacity:.75}.nvd3 .nv-axis.nv-x path.domain{stroke-opacity:0}.nvd3 .nv-axis line{fill:none;stroke:#e5e5e5;shape-rendering:crispEdges}.nvd3 .nv-axis .zero line,.nvd3 .nv-axis line.zero{stroke-opacity:.75}.nvd3 .nv-axis .nv-axisMaxMin text{font-weight:bold}.nvd3 .x .nv-axis .nv-axisMaxMin text,.nvd3 .x2 .nv-axis .nv-axisMaxMin text,.nvd3 .x3 .nv-axis .nv-axisMaxMin text{text-anchor:middle}.nv-brush .resize path{fill:#eee;stroke:#666}.nvd3 .nv-bars .negative rect{zfill:brown}.nvd3 .nv-bars rect{zfill:steelblue;fill-opacity:.75;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-bars rect.hover{fill-opacity:1}.nvd3 .nv-bars .hover rect{fill:lightblue}.nvd3 .nv-bars text{fill:rgba(0,0,0,0)}.nvd3 .nv-bars .hover text{fill:rgba(0,0,0,1)}.nvd3 .nv-multibar .nv-groups rect,.nvd3 .nv-multibarHorizontal .nv-groups rect,.nvd3 .nv-discretebar .nv-groups rect{stroke-opacity:0;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-multibar .nv-groups rect:hover,.nvd3 .nv-multibarHorizontal .nv-groups rect:hover,.nvd3 .nv-discretebar .nv-groups rect:hover{fill-opacity:1}.nvd3 .nv-discretebar .nv-groups text,.nvd3 .nv-multibarHorizontal .nv-groups text{font-weight:bold;fill:rgba(0,0,0,1);stroke:rgba(0,0,0,0)}.nvd3.nv-pie path{stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-pie .nv-slice text{stroke:#000;stroke-width:0}.nvd3.nv-pie path{stroke:#fff;stroke-width:1px;stroke-opacity:1}.nvd3.nv-pie .hover path{fill-opacity:.7}.nvd3.nv-pie .nv-label{pointer-events:none}.nvd3.nv-pie .nv-label rect{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-groups path.nv-line{fill:none;stroke-width:1.5px}.nvd3 .nv-groups path.nv-line.nv-thin-line{stroke-width:1px}.nvd3 .nv-groups path.nv-area{stroke:none}.nvd3 .nv-line.hover path{stroke-width:6px}.nvd3.nv-line .nvd3.nv-scatter .nv-groups .nv-point{fill-opacity:0;stroke-opacity:0}.nvd3.nv-scatter.nv-single-point .nv-groups .nv-point{fill-opacity:.5!important;stroke-opacity:.5!important}.with-transitions .nvd3 .nv-groups .nv-point{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-scatter .nv-groups .nv-point.hover,.nvd3 .nv-groups .nv-point.hover{stroke-width:7px;fill-opacity:.95!important;stroke-opacity:.95!important}.nvd3 .nv-point-paths path{stroke:#aaa;stroke-opacity:0;fill:#eee;fill-opacity:0}.nvd3 .nv-indexLine{cursor:ew-resize}.nvd3 .nv-distribution{pointer-events:none}.nvd3 .nv-groups .nv-point.hover{stroke-width:20px;stroke-opacity:.5}.nvd3 .nv-scatter .nv-point.hover{fill-opacity:1}.nvd3.nv-stackedarea path.nv-area{fill-opacity:.7;stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-stackedarea path.nv-area.hover{fill-opacity:.9}.nvd3.nv-stackedarea .nv-groups .nv-point{stroke-opacity:0;fill-opacity:0}.nvd3.nv-linePlusBar .nv-bar rect{fill-opacity:.75}.nvd3.nv-linePlusBar .nv-bar rect:hover{fill-opacity:1}.nvd3.nv-bullet{font:10px sans-serif}.nvd3.nv-bullet .nv-measure{fill-opacity:.8}.nvd3.nv-bullet .nv-measure:hover{fill-opacity:1}.nvd3.nv-bullet .nv-marker{stroke:#000;stroke-width:2px}.nvd3.nv-bullet .nv-markerTriangle{stroke:#000;fill:#fff;stroke-width:1.5px}.nvd3.nv-bullet .nv-tick line{stroke:#666;stroke-width:.5px}.nvd3.nv-bullet .nv-range.nv-s0{fill:#eee}.nvd3.nv-bullet .nv-range.nv-s1{fill:#ddd}.nvd3.nv-bullet .nv-range.nv-s2{fill:#ccc}.nvd3.nv-bullet .nv-title{font-size:14px;font-weight:bold}.nvd3.nv-bullet .nv-subtitle{fill:#999}.nvd3.nv-bullet .nv-range{fill:#bababa;fill-opacity:.4}.nvd3.nv-bullet .nv-range:hover{fill-opacity:.7}.nvd3.nv-sparkline path{fill:none}.nvd3.nv-sparklineplus g.nv-hoverValue{pointer-events:none}.nvd3.nv-sparklineplus .nv-hoverValue line{stroke:#333;stroke-width:1.5px}.nvd3.nv-sparklineplus,.nvd3.nv-sparklineplus g{pointer-events:all}.nvd3 .nv-hoverArea{fill-opacity:0;stroke-opacity:0}.nvd3.nv-sparklineplus .nv-xValue,.nvd3.nv-sparklineplus .nv-yValue{stroke-width:0;font-size:.9em;font-weight:normal}.nvd3.nv-sparklineplus .nv-yValue{stroke:#f66}.nvd3.nv-sparklineplus .nv-maxValue{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-sparklineplus .nv-minValue{stroke:#d62728;fill:#d62728}.nvd3.nv-sparklineplus .nv-currentValue{font-weight:bold;font-size:1.1em}.nvd3.nv-ohlcBar .nv-ticks .nv-tick{stroke-width:2px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.hover{stroke-width:4px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.positive{stroke:#2ca02c}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.negative{stroke:#d62728}.nvd3.nv-historicalStockChart .nv-axis .nv-axislabel{font-weight:bold}.nvd3.nv-historicalStockChart .nv-dragTarget{fill-opacity:0;stroke:none;cursor:move}.nvd3 .nv-brush .extent{fill-opacity:0!important}.nvd3 .nv-brushBackground rect{stroke:#000;stroke-width:.4;fill:#fff;fill-opacity:.7}.nvd3.nv-indentedtree .name{margin-left:5px}.nvd3.nv-indentedtree .clickable{color:#08C;cursor:pointer}.nvd3.nv-indentedtree span.clickable:hover{color:#005580;text-decoration:underline}.nvd3.nv-indentedtree .nv-childrenCount{display:inline-block;margin-left:5px}.nvd3.nv-indentedtree .nv-treeicon{cursor:pointer}.nvd3.nv-indentedtree .nv-treeicon.nv-folded{cursor:pointer}.nvd3 .background path{fill:none;stroke:#ccc;stroke-opacity:.4;shape-rendering:crispEdges}.nvd3 .foreground path{fill:none;stroke:steelblue;stroke-opacity:.7}.nvd3 .brush .extent{fill-opacity:.3;stroke:#fff;shape-rendering:crispEdges}.nvd3 .axis line,.axis path{fill:none;stroke:#000;shape-rendering:crispEdges}.nvd3 .axis text{text-shadow:0 1px 0 #fff}.nvd3 .nv-interactiveGuideLine{pointer-events:none}.nvd3 line.nv-guideline{stroke:#ccc}</c>
                </r>
                <r>
                  <c>&lt;/style&gt;</c>
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c><![CDATA[    <script>]]></c>
                </r>
                <r>
                  <c><![CDATA[        if (!Function.prototype.bind) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            Function.prototype.bind = function (oThis) {]]></c>
                </r>
                <r>
                  <c><![CDATA[                if (typeof this !== "function") {]]></c>
                </r>
                <r>
                  <c><![CDATA[                    // closest thing possible to the ECMAScript 5 internal IsCallable function]]></c>
                </r>
                <r>
                  <c><![CDATA[                    throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");]]></c>
                </r>
                <r>
                  <c><![CDATA[                }]]></c>
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c><![CDATA[                var aArgs = Array.prototype.slice.call(arguments, 1),]]></c>
                </r>
                <r>
                  <c><![CDATA[                    fToBind = this,]]></c>
                </r>
                <r>
                  <c><![CDATA[                    fNOP = function () { },]]></c>
                </r>
                <r>
                  <c><![CDATA[                    fBound = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[                        return fToBind.apply(this instanceof fNOP && oThis]]></c>
                </r>
                <r>
                  <c><![CDATA[                                               ? this]]></c>
                </r>
                <r>
                  <c><![CDATA[                                               : oThis,]]></c>
                </r>
                <r>
                  <c><![CDATA[                                             aArgs.concat(Array.prototype.slice.call(arguments)));]]></c>
                </r>
                <r>
                  <c><![CDATA[                    };]]></c>
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c><![CDATA[                fNOP.prototype = this.prototype;]]></c>
                </r>
                <r>
                  <c><![CDATA[                fBound.prototype = new fNOP();]]></c>
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c><![CDATA[                return fBound;]]></c>
                </r>
                <r>
                  <c><![CDATA[            };]]></c>
                </r>
                <r>
                  <c><![CDATA[        }]]></c>
                </r>
                <r>
                  <c><![CDATA[    </script>]]></c>
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c><![CDATA[    ]]></c>
                </r>
                <r>
                  <c><![CDATA[    <script>(function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[    function e(e, t) { try { for (var n in t) Object.defineProperty(e.prototype, n, { value: t[n], enumerable: !1 }) } catch (r) { e.prototype = t } } function t(e) { var t = -1, n = e.length, r = []; while (++t < n) r.push(e[t]); return r } function n(e) { return Array.prototype.slice.call(e) } function r() { } function i(e) { return e } function s() { return this } function o() { return !0 } function u(e) { return typeof e == "function" ? e : function () { return e } } function a(e, t, n) { return function () { var r = n.apply(t, arguments); return arguments.length ? e : r } } function f(e) { return e != null && !isNaN(e) } function l(e) { return e.length } function c(e) { return e == null } function h(e) { return e.trim().replace(/\s+/g, " ") } function p(e) { var t = 1; while (e * t % 1) t *= 10; return t } function d() { } function v(e) { function t() { var t = n, r = -1, i = t.length, s; while (++r < i) (s = t[r].on) && s.apply(this, arguments); return e } var n = [], i = new r; return t.on = function (t, r) { var s = i.get(t), o; return arguments.length < 2 ? s && s.on : (s && (s.on = null, n = n.slice(0, o = n.indexOf(s)).concat(n.slice(o + 1)), i.remove(t)), r && n.push(i.set(t, { on: r })), e) }, t } function m(e, t) { return t - (e ? 1 + Math.floor(Math.log(e + Math.pow(10, 1 + Math.floor(Math.log(e) / Math.LN10) - t)) / Math.LN10) : 1) } function g(e) { return e + "" } function y(e) { var t = e.lastIndexOf("."), n = t >= 0 ? e.substring(t) : (t = e.length, ""), r = []; while (t > 0) r.push(e.substring(t -= 3, t + 3)); return r.reverse().join(",") + n } function b(e, t) { var n = Math.pow(10, Math.abs(8 - t) * 3); return { scale: t > 8 ? function (e) { return e / n } : function (e) { return e * n }, symbol: e } } function w(e) { return function (t) { return t <= 0 ? 0 : t >= 1 ? 1 : e(t) } } function E(e) { return function (t) { return 1 - e(1 - t) } } function S(e) { return function (t) { return .5 * (t < .5 ? e(2 * t) : 2 - e(2 - 2 * t)) } } function x(e) { return e } function T(e) { return function (t) { return Math.pow(t, e) } } function N(e) { return 1 - Math.cos(e * Math.PI / 2) } function C(e) { return Math.pow(2, 10 * (e - 1)) } function k(e) { return 1 - Math.sqrt(1 - e * e) } function L(e, t) { var n; return arguments.length < 2 && (t = .45), arguments.length < 1 ? (e = 1, n = t / 4) : n = t / (2 * Math.PI) * Math.asin(1 / e), function (r) { return 1 + e * Math.pow(2, 10 * -r) * Math.sin((r - n) * 2 * Math.PI / t) } } function A(e) { return e || (e = 1.70158), function (t) { return t * t * ((e + 1) * t - e) } } function O(e) { return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375 } function M() { d3.event.stopPropagation(), d3.event.preventDefault() } function _() { var e = d3.event, t; while (t = e.sourceEvent) e = t; return e } function D(e) { var t = new d, n = 0, r = arguments.length; while (++n < r) t[arguments[n]] = v(t); return t.of = function (n, r) { return function (i) { try { var s = i.sourceEvent = d3.event; i.target = e, d3.event = i, t[i.type].apply(n, r) } finally { d3.event = s } } }, t } function P(e) { var t = [e.a, e.b], n = [e.c, e.d], r = B(t), i = H(t, n), s = B(j(n, t, -i)) || 0; t[0] * n[1] < n[0] * t[1] && (t[0] *= -1, t[1] *= -1, r *= -1, i *= -1), this.rotate = (r ? Math.atan2(t[1], t[0]) : Math.atan2(-n[0], n[1])) * fs, this.translate = [e.e, e.f], this.scale = [r, s], this.skew = s ? Math.atan2(i, s) * fs : 0 } function H(e, t) { return e[0] * t[0] + e[1] * t[1] } function B(e) { var t = Math.sqrt(H(e, e)); return t && (e[0] /= t, e[1] /= t), t } function j(e, t, n) { return e[0] += n * t[0], e[1] += n * t[1], e } function F(e) { return e == "transform" ? d3.interpolateTransform : d3.interpolate } function I(e, t) { return t = t - (e = +e) ? 1 / (t - e) : 0, function (n) { return (n - e) * t } } function q(e, t) { return t = t - (e = +e) ? 1 / (t - e) : 0, function (n) { return Math.max(0, Math.min(1, (n - e) * t)) } } function R(e, t, n) { return new U(e, t, n) } function U(e, t, n) { this.r = e, this.g = t, this.b = n } function z(e) { return e < 16 ? "0" + Math.max(0, e).toString(16) : Math.min(255, e).toString(16) } function W(e, t, n) { var r = 0, i = 0, s = 0, o, u, a; o = /([a-z]+)\((.*)\)/i.exec(e); if (o) { u = o[2].split(","); switch (o[1]) { case "hsl": return n(parseFloat(u[0]), parseFloat(u[1]) / 100, parseFloat(u[2]) / 100); case "rgb": return t(J(u[0]), J(u[1]), J(u[2])) } } return (a = hs.get(e)) ? t(a.r, a.g, a.b) : (e != null && e.charAt(0) === "#" && (e.length === 4 ? (r = e.charAt(1), r += r, i = e.charAt(2), i += i, s = e.charAt(3), s += s) : e.length === 7 && (r = e.substring(1, 3), i = e.substring(3, 5), s = e.substring(5, 7)), r = parseInt(r, 16), i = parseInt(i, 16), s = parseInt(s, 16)), t(r, i, s)) } function X(e, t, n) { var r = Math.min(e /= 255, t /= 255, n /= 255), i = Math.max(e, t, n), s = i - r, o, u, a = (i + r) / 2; return s ? (u = a < .5 ? s / (i + r) : s / (2 - i - r), e == i ? o = (t - n) / s + (t < n ? 6 : 0) : t == i ? o = (n - e) / s + 2 : o = (e - t) / s + 4, o *= 60) : u = o = 0, K(o, u, a) } function V(e, t, n) { e = $(e), t = $(t), n = $(n); var r = ot((.4124564 * e + .3575761 * t + .1804375 * n) / ds), i = ot((.2126729 * e + .7151522 * t + .072175 * n) / vs), s = ot((.0193339 * e + .119192 * t + .9503041 * n) / ms); return tt(116 * i - 16, 500 * (r - i), 200 * (i - s)) } function $(e) { return (e /= 255) <= .04045 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4) } function J(e) { var t = parseFloat(e); return e.charAt(e.length - 1) === "%" ? Math.round(t * 2.55) : t } function K(e, t, n) { return new Q(e, t, n) } function Q(e, t, n) { this.h = e, this.s = t, this.l = n } function G(e, t, n) { function r(e) { return e > 360 ? e -= 360 : e < 0 && (e += 360), e < 60 ? s + (o - s) * e / 60 : e < 180 ? o : e < 240 ? s + (o - s) * (240 - e) / 60 : s } function i(e) { return Math.round(r(e) * 255) } var s, o; return e %= 360, e < 0 && (e += 360), t = t < 0 ? 0 : t > 1 ? 1 : t, n = n < 0 ? 0 : n > 1 ? 1 : n, o = n <= .5 ? n * (1 + t) : n + t - n * t, s = 2 * n - o, R(i(e + 120), i(e), i(e - 120)) } function Y(e, t, n) { return new Z(e, t, n) } function Z(e, t, n) { this.h = e, this.c = t, this.l = n } function et(e, t, n) { return tt(n, Math.cos(e *= Math.PI / 180) * t, Math.sin(e) * t) } function tt(e, t, n) { return new nt(e, t, n) } function nt(e, t, n) { this.l = e, this.a = t, this.b = n } function rt(e, t, n) { var r = (e + 16) / 116, i = r + t / 500, s = r - n / 200; return i = st(i) * ds, r = st(r) * vs, s = st(s) * ms, R(ut(3.2404542 * i - 1.5371385 * r - .4985314 * s), ut(-0.969266 * i + 1.8760108 * r + .041556 * s), ut(.0556434 * i - .2040259 * r + 1.0572252 * s)) } function it(e, t, n) { return Y(Math.atan2(n, t) / Math.PI * 180, Math.sqrt(t * t + n * n), e) } function st(e) { return e > .206893034 ? e * e * e : (e - 4 / 29) / 7.787037 } function ot(e) { return e > .008856 ? Math.pow(e, 1 / 3) : 7.787037 * e + 4 / 29 } function ut(e) { return Math.round(255 * (e <= .00304 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - .055)) } function at(e) { return Ki(e, Ss), e } function ft(e) { return function () { return gs(e, this) } } function lt(e) { return function () { return ys(e, this) } } function ct(e, t) { function n() { this.removeAttribute(e) } function r() { this.removeAttributeNS(e.space, e.local) } function i() { this.setAttribute(e, t) } function s() { this.setAttributeNS(e.space, e.local, t) } function o() { var n = t.apply(this, arguments); n == null ? this.removeAttribute(e) : this.setAttribute(e, n) } function u() { var n = t.apply(this, arguments); n == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, n) } return e = d3.ns.qualify(e), t == null ? e.local ? r : n : typeof t == "function" ? e.local ? u : o : e.local ? s : i } function ht(e) { return new RegExp("(?:^|\\s+)" + d3.requote(e) + "(?:\\s+|$)", "g") } function pt(e, t) { function n() { var n = -1; while (++n < i) e[n](this, t) } function r() { var n = -1, r = t.apply(this, arguments); while (++n < i) e[n](this, r) } e = e.trim().split(/\s+/).map(dt); var i = e.length; return typeof t == "function" ? r : n } function dt(e) { var t = ht(e); return function (n, r) { if (i = n.classList) return r ? i.add(e) : i.remove(e); var i = n.className, s = i.baseVal != null, o = s ? i.baseVal : i; r ? (t.lastIndex = 0, t.test(o) || (o = h(o + " " + e), s ? i.baseVal = o : n.className = o)) : o && (o = h(o.replace(t, " ")), s ? i.baseVal = o : n.className = o) } } function vt(e, t, n) { function r() { this.style.removeProperty(e) } function i() { this.style.setProperty(e, t, n) } function s() { var r = t.apply(this, arguments); r == null ? this.style.removeProperty(e) : this.style.setProperty(e, r, n) } return t == null ? r : typeof t == "function" ? s : i } function mt(e, t) { function n() { delete this[e] } function r() { this[e] = t } function i() { var n = t.apply(this, arguments); n == null ? delete this[e] : this[e] = n } return t == null ? n : typeof t == "function" ? i : r } function gt(e) { return { __data__: e } } function yt(e) { return function () { return Es(this, e) } } function bt(e) { return arguments.length || (e = d3.ascending), function (t, n) { return e(t && t.__data__, n && n.__data__) } } function wt(e, t, n) { function r() { var t = this[s]; t && (this.removeEventListener(e, t, t.$), delete this[s]) } function i() { function i(e) { var n = d3.event; d3.event = e, u[0] = o.__data__; try { t.apply(o, u) } finally { d3.event = n } } var o = this, u = arguments; r.call(this), this.addEventListener(e, this[s] = i, i.$ = n), i._ = t } var s = "__on" + e, o = e.indexOf("."); return o > 0 && (e = e.substring(0, o)), t ? i : r } function Et(e, t) { for (var n = 0, r = e.length; n < r; n++) for (var i = e[n], s = 0, o = i.length, u; s < o; s++) (u = i[s]) && t(u, s, n); return e } function St(e) { return Ki(e, Ts), e } function xt(e, t, n) { Ki(e, Ns); var i = new r, s = d3.dispatch("start", "end"), o = Ds; return e.id = t, e.time = n, e.tween = function (t, n) { return arguments.length < 2 ? i.get(t) : (n == null ? i.remove(t) : i.set(t, n), e) }, e.ease = function (t) { return arguments.length ? (o = typeof t == "function" ? t : d3.ease.apply(d3, arguments), e) : o }, e.each = function (t, n) { return arguments.length < 2 ? Tt.call(e, t) : (s.on(t, n), e) }, d3.timer(function (r) { return Et(e, function (e, u, a) { function f(r) { return v.active > t ? c() : (v.active = t, i.forEach(function (t, n) { (n = n.call(e, m, u)) && h.push(n) }), s.start.call(e, m, u), l(r) || d3.timer(l, 0, n), 1) } function l(n) { if (v.active !== t) return c(); var r = (n - p) / d, i = o(r), a = h.length; while (a > 0) h[--a].call(e, i); if (r >= 1) return c(), ks = t, s.end.call(e, m, u), ks = 0, 1 } function c() { return --v.count || delete e.__transition__, 1 } var h = [], p = e.delay, d = e.duration, v = (e = e.node).__transition__ || (e.__transition__ = { active: 0, count: 0 }), m = e.__data__; ++v.count, p <= r ? f(r) : d3.timer(f, p, n) }) }, 0, n), e } function Tt(e) { var t = ks, n = Ds, r = Ms, i = _s; return ks = this.id, Ds = this.ease(), Et(this, function (t, n, r) { Ms = t.delay, _s = t.duration, e.call(t = t.node, t.__data__, n, r) }), ks = t, Ds = n, Ms = r, _s = i, this } function Nt(e, t, n) { return n != "" && Ps } function Ct(e, t) { return d3.tween(e, F(t)) } function kt() { var e, t = Date.now(), n = Hs; while (n) e = t - n.then, e >= n.delay && (n.flush = n.callback(e)), n = n.next; var r = Lt() - t; r > 24 ? (isFinite(r) && (clearTimeout(js), js = setTimeout(kt, r)), Bs = 0) : (Bs = 1, Fs(kt)) } function Lt() { var e = null, t = Hs, n = Infinity; while (t) t.flush ? t = e ? e.next = t.next : Hs = t.next : (n = Math.min(n, t.then + t.delay), t = (e = t).next); return n } function At(e, t) { var n = e.ownerSVGElement || e; if (n.createSVGPoint) { var r = n.createSVGPoint(); if (Is < 0 && (window.scrollX || window.scrollY)) { n = d3.select(document.body).append("svg").style("position", "absolute").style("top", 0).style("left", 0); var i = n[0][0].getScreenCTM(); Is = !i.f && !i.e, n.remove() } return Is ? (r.x = t.pageX, r.y = t.pageY) : (r.x = t.clientX, r.y = t.clientY), r = r.matrixTransform(e.getScreenCTM().inverse()), [r.x, r.y] } var s = e.getBoundingClientRect(); return [t.clientX - s.left - e.clientLeft, t.clientY - s.top - e.clientTop] } function Ot() { } function Mt(e) { var t = e[0], n = e[e.length - 1]; return t < n ? [t, n] : [n, t] } function _t(e) { return e.rangeExtent ? e.rangeExtent() : Mt(e.range()) } function Dt(e, t) { var n = 0, r = e.length - 1, i = e[n], s = e[r], o; s < i && (o = n, n = r, r = o, o = i, i = s, s = o); if (t = t(s - i)) e[n] = t.floor(i), e[r] = t.ceil(s); return e } function Pt() { return Math } function Ht(e, t, n, r) { function i() { var i = Math.min(e.length, t.length) > 2 ? Ut : Rt, a = r ? q : I; return o = i(e, t, a, n), u = i(t, e, a, d3.interpolate), s } function s(e) { return o(e) } var o, u; return s.invert = function (e) { return u(e) }, s.domain = function (t) { return arguments.length ? (e = t.map(Number), i()) : e }, s.range = function (e) { return arguments.length ? (t = e, i()) : t }, s.rangeRound = function (e) { return s.range(e).interpolate(d3.interpolateRound) }, s.clamp = function (e) { return arguments.length ? (r = e, i()) : r }, s.interpolate = function (e) { return arguments.length ? (n = e, i()) : n }, s.ticks = function (t) { return It(e, t) }, s.tickFormat = function (t) { return qt(e, t) }, s.nice = function () { return Dt(e, jt), i() }, s.copy = function () { return Ht(e, t, n, r) }, i() } function Bt(e, t) { return d3.rebind(e, t, "range", "rangeRound", "interpolate", "clamp") } function jt(e) { return e = Math.pow(10, Math.round(Math.log(e) / Math.LN10) - 1), e && { floor: function (t) { return Math.floor(t / e) * e }, ceil: function (t) { return Math.ceil(t / e) * e } } } function Ft(e, t) { var n = Mt(e), r = n[1] - n[0], i = Math.pow(10, Math.floor(Math.log(r / t) / Math.LN10)), s = t / r * i; return s <= .15 ? i *= 10 : s <= .35 ? i *= 5 : s <= .75 && (i *= 2), n[0] = Math.ceil(n[0] / i) * i, n[1] = Math.floor(n[1] / i) * i + i * .5, n[2] = i, n } function It(e, t) { return d3.range.apply(d3, Ft(e, t)) } function qt(e, t) { return d3.format(",." + Math.max(0, -Math.floor(Math.log(Ft(e, t)[2]) / Math.LN10 + .01)) + "f") } function Rt(e, t, n, r) { var i = n(e[0], e[1]), s = r(t[0], t[1]); return function (e) { return s(i(e)) } } function Ut(e, t, n, r) { var i = [], s = [], o = 0, u = Math.min(e.length, t.length) - 1; e[u] < e[0] && (e = e.slice().reverse(), t = t.slice().reverse()); while (++o <= u) i.push(n(e[o - 1], e[o])), s.push(r(t[o - 1], t[o])); return function (t) { var n = d3.bisect(e, t, 1, u) - 1; return s[n](i[n](t)) } } function zt(e, t) { function n(n) { return e(t(n)) } var r = t.pow; return n.invert = function (t) { return r(e.invert(t)) }, n.domain = function (i) { return arguments.length ? (t = i[0] < 0 ? Xt : Wt, r = t.pow, e.domain(i.map(t)), n) : e.domain().map(r) }, n.nice = function () { return e.domain(Dt(e.domain(), Pt)), n }, n.ticks = function () { var n = Mt(e.domain()), i = []; if (n.every(isFinite)) { var s = Math.floor(n[0]), o = Math.ceil(n[1]), u = r(n[0]), a = r(n[1]); if (t === Xt) { i.push(r(s)); for (; s++ < o;) for (var f = 9; f > 0; f--) i.push(r(s) * f) } else { for (; s < o; s++) for (var f = 1; f < 10; f++) i.push(r(s) * f); i.push(r(s)) } for (s = 0; i[s] < u; s++); for (o = i.length; i[o - 1] > a; o--); i = i.slice(s, o) } return i }, n.tickFormat = function (e, i) { arguments.length < 2 && (i = qs); if (arguments.length < 1) return i; var s = Math.max(.1, e / n.ticks().length), o = t === Xt ? (u = -1e-12, Math.floor) : (u = 1e-12, Math.ceil), u; return function (e) { return e / r(o(t(e) + u)) <= s ? i(e) : "" } }, n.copy = function () { return zt(e.copy(), t) }, Bt(n, e) } function Wt(e) { return Math.log(e < 0 ? 0 : e) / Math.LN10 } function Xt(e) { return -Math.log(e > 0 ? 0 : -e) / Math.LN10 } function Vt(e, t) { function n(t) { return e(r(t)) } var r = $t(t), i = $t(1 / t); return n.invert = function (t) { return i(e.invert(t)) }, n.domain = function (t) { return arguments.length ? (e.domain(t.map(r)), n) : e.domain().map(i) }, n.ticks = function (e) { return It(n.domain(), e) }, n.tickFormat = function (e) { return qt(n.domain(), e) }, n.nice = function () { return n.domain(Dt(n.domain(), jt)) }, n.exponent = function (e) { if (!arguments.length) return t; var s = n.domain(); return r = $t(t = e), i = $t(1 / t), n.domain(s) }, n.copy = function () { return Vt(e.copy(), t) }, Bt(n, e) } function $t(e) { return function (t) { return t < 0 ? -Math.pow(-t, e) : Math.pow(t, e) } } function Jt(e, t) { function n(t) { return o[((s.get(t) || s.set(t, e.push(t))) - 1) % o.length] } function i(t, n) { return d3.range(e.length).map(function (e) { return t + n * e }) } var s, o, u; return n.domain = function (i) { if (!arguments.length) return e; e = [], s = new r; var o = -1, u = i.length, a; while (++o < u) s.has(a = i[o]) || s.set(a, e.push(a)); return n[t.t].apply(n, t.a) }, n.range = function (e) { return arguments.length ? (o = e, u = 0, t = { t: "range", a: arguments }, n) : o }, n.rangePoints = function (r, s) { arguments.length < 2 && (s = 0); var a = r[0], f = r[1], l = (f - a) / (Math.max(1, e.length - 1) + s); return o = i(e.length < 2 ? (a + f) / 2 : a + l * s / 2, l), u = 0, t = { t: "rangePoints", a: arguments }, n }, n.rangeBands = function (r, s, a) { arguments.length < 2 && (s = 0), arguments.length < 3 && (a = s); var f = r[1] < r[0], l = r[f - 0], c = r[1 - f], h = (c - l) / (e.length - s + 2 * a); return o = i(l + h * a, h), f && o.reverse(), u = h * (1 - s), t = { t: "rangeBands", a: arguments }, n }, n.rangeRoundBands = function (r, s, a) { arguments.length < 2 && (s = 0), arguments.length < 3 && (a = s); var f = r[1] < r[0], l = r[f - 0], c = r[1 - f], h = Math.floor((c - l) / (e.length - s + 2 * a)), p = c - l - (e.length - s) * h; return o = i(l + Math.round(p / 2), h), f && o.reverse(), u = Math.round(h * (1 - s)), t = { t: "rangeRoundBands", a: arguments }, n }, n.rangeBand = function () { return u }, n.rangeExtent = function () { return Mt(t.a[0]) }, n.copy = function () { return Jt(e, t) }, n.domain(e) } function Kt(e, t) { function n() { var n = 0, s = e.length, o = t.length; i = []; while (++n < o) i[n - 1] = d3.quantile(e, n / o); return r } function r(e) { return isNaN(e = +e) ? NaN : t[d3.bisect(i, e)] } var i; return r.domain = function (t) { return arguments.length ? (e = t.filter(function (e) { return !isNaN(e) }).sort(d3.ascending), n()) : e }, r.range = function (e) { return arguments.length ? (t = e, n()) : t }, r.quantiles = function () { return i }, r.copy = function () { return Kt(e, t) }, n() } function Qt(e, t, n) { function r(t) { return n[Math.max(0, Math.min(o, Math.floor(s * (t - e))))] } function i() { return s = n.length / (t - e), o = n.length - 1, r } var s, o; return r.domain = function (n) { return arguments.length ? (e = +n[0], t = +n[n.length - 1], i()) : [e, t] }, r.range = function (e) { return arguments.length ? (n = e, i()) : n }, r.copy = function () { return Qt(e, t, n) }, i() } function Gt(e, t) { function n(n) { return t[d3.bisect(e, n)] } return n.domain = function (t) { return arguments.length ? (e = t, n) : e }, n.range = function (e) { return arguments.length ? (t = e, n) : t }, n.copy = function () { return Gt(e, t) }, n } function Yt(e) { function t(e) { return +e } return t.invert = t, t.domain = t.range = function (n) { return arguments.length ? (e = n.map(t), t) : e }, t.ticks = function (t) { return It(e, t) }, t.tickFormat = function (t) { return qt(e, t) }, t.copy = function () { return Yt(e) }, t } function Zt(e) { return e.innerRadius } function en(e) { return e.outerRadius } function tn(e) { return e.startAngle } function nn(e) { return e.endAngle } function rn(e) { function t(t) { function o() { a.push("M", s(e(l), f)) } var a = [], l = [], c = -1, h = t.length, p, d = u(n), v = u(r); while (++c < h) i.call(this, p = t[c], c) ? l.push([+d.call(this, p, c), +v.call(this, p, c)]) : l.length && (o(), l = []); return l.length && o(), a.length ? a.join("") : null } var n = sn, r = on, i = o, s = un, a = s.key, f = .7; return t.x = function (e) { return arguments.length ? (n = e, t) : n }, t.y = function (e) { return arguments.length ? (r = e, t) : r }, t.defined = function (e) { return arguments.length ? (i = e, t) : i }, t.interpolate = function (e) { return arguments.length ? (typeof e == "function" ? a = s = e : a = (s = $s.get(e) || un).key, t) : a }, t.tension = function (e) { return arguments.length ? (f = e, t) : f }, t } function sn(e) { return e[0] } function on(e) { return e[1] } function un(e) { return e.join("L") } function an(e) { return un(e) + "Z" } function fn(e) { var t = 0, n = e.length, r = e[0], i = [r[0], ",", r[1]]; while (++t < n) i.push("V", (r = e[t])[1], "H", r[0]); return i.join("") } function ln(e) { var t = 0, n = e.length, r = e[0], i = [r[0], ",", r[1]]; while (++t < n) i.push("H", (r = e[t])[0], "V", r[1]); return i.join("") } function cn(e, t) { return e.length < 4 ? un(e) : e[1] + dn(e.slice(1, e.length - 1), vn(e, t)) } function hn(e, t) { return e.length < 3 ? un(e) : e[0] + dn((e.push(e[0]), e), vn([e[e.length - 2]].concat(e, [e[1]]), t)) } function pn(e, t, n) { return e.length < 3 ? un(e) : e[0] + dn(e, vn(e, t)) } function dn(e, t) { if (t.length < 1 || e.length != t.length && e.length != t.length + 2) return un(e); var n = e.length != t.length, r = "", i = e[0], s = e[1], o = t[0], u = o, a = 1; n && (r += "Q" + (s[0] - o[0] * 2 / 3) + "," + (s[1] - o[1] * 2 / 3) + "," + s[0] + "," + s[1], i = e[1], a = 2); if (t.length > 1) { u = t[1], s = e[a], a++, r += "C" + (i[0] + o[0]) + "," + (i[1] + o[1]) + "," + (s[0] - u[0]) + "," + (s[1] - u[1]) + "," + s[0] + "," + s[1]; for (var f = 2; f < t.length; f++, a++) s = e[a], u = t[f], r += "S" + (s[0] - u[0]) + "," + (s[1] - u[1]) + "," + s[0] + "," + s[1] } if (n) { var l = e[a]; r += "Q" + (s[0] + u[0] * 2 / 3) + "," + (s[1] + u[1] * 2 / 3) + "," + l[0] + "," + l[1] } return r } function vn(e, t) { var n = [], r = (1 - t) / 2, i, s = e[0], o = e[1], u = 1, a = e.length; while (++u < a) i = s, s = o, o = e[u], n.push([r * (o[0] - i[0]), r * (o[1] - i[1])]); return n } function mn(e) { if (e.length < 3) return un(e); var t = 1, n = e.length, r = e[0], i = r[0], s = r[1], o = [i, i, i, (r = e[1])[0]], u = [s, s, s, r[1]], a = [i, ",", s]; En(a, o, u); while (++t < n) r = e[t], o.shift(), o.push(r[0]), u.shift(), u.push(r[1]), En(a, o, u); t = -1; while (++t < 2) o.shift(), o.push(r[0]), u.shift(), u.push(r[1]), En(a, o, u); return a.join("") } function gn(e) { if (e.length < 4) return un(e); var t = [], n = -1, r = e.length, i, s = [0], o = [0]; while (++n < 3) i = e[n], s.push(i[0]), o.push(i[1]); t.push(wn(Qs, s) + "," + wn(Qs, o)), --n; while (++n < r) i = e[n], s.shift(), s.push(i[0]), o.shift(), o.push(i[1]), En(t, s, o); return t.join("") } function yn(e) { var t, n = -1, r = e.length, i = r + 4, s, o = [], u = []; while (++n < 4) s = e[n % r], o.push(s[0]), u.push(s[1]); t = [wn(Qs, o), ",", wn(Qs, u)], --n; while (++n < i) s = e[n % r], o.shift(), o.push(s[0]), u.shift(), u.push(s[1]), En(t, o, u); return t.join("") } function bn(e, t) { var n = e.length - 1; if (n) { var r = e[0][0], i = e[0][1], s = e[n][0] - r, o = e[n][1] - i, u = -1, a, f; while (++u <= n) a = e[u], f = u / n, a[0] = t * a[0] + (1 - t) * (r + f * s), a[1] = t * a[1] + (1 - t) * (i + f * o) } return mn(e) } function wn(e, t) { return e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3] * t[3] } function En(e, t, n) { e.push("C", wn(Js, t), ",", wn(Js, n), ",", wn(Ks, t), ",", wn(Ks, n), ",", wn(Qs, t), ",", wn(Qs, n)) } function Sn(e, t) { return (t[1] - e[1]) / (t[0] - e[0]) } function xn(e) { var t = 0, n = e.length - 1, r = [], i = e[0], s = e[1], o = r[0] = Sn(i, s); while (++t < n) r[t] = (o + (o = Sn(i = s, s = e[t + 1]))) / 2; return r[t] = o, r } function Tn(e) { var t = [], n, r, i, s, o = xn(e), u = -1, a = e.length - 1; while (++u < a) n = Sn(e[u], e[u + 1]), Math.abs(n) < 1e-6 ? o[u] = o[u + 1] = 0 : (r = o[u] / n, i = o[u + 1] / n, s = r * r + i * i, s > 9 && (s = n * 3 / Math.sqrt(s), o[u] = s * r, o[u + 1] = s * i)); u = -1; while (++u <= a) s = (e[Math.min(a, u + 1)][0] - e[Math.max(0, u - 1)][0]) / (6 * (1 + o[u] * o[u])), t.push([s || 0, o[u] * s || 0]); return t } function Nn(e) { return e.length < 3 ? un(e) : e[0] + dn(e, Tn(e)) } function Cn(e) { var t, n = -1, r = e.length, i, s; while (++n < r) t = e[n], i = t[0], s = t[1] + Xs, t[0] = i * Math.cos(s), t[1] = i * Math.sin(s); return e } function kn(e) { function t(t) { function o() { l.push("M", f(e(v), p), h, c(e(d.reverse()), p), "Z") } var l = [], d = [], v = [], m = -1, g = t.length, y, b = u(n), w = u(i), E = n === r ? function () { return x } : u(r), S = i === s ? function () { return T } : u(s), x, T; while (++m < g) a.call(this, y = t[m], m) ? (d.push([x = +b.call(this, y, m), T = +w.call(this, y, m)]), v.push([+E.call(this, y, m), +S.call(this, y, m)])) : d.length && (o(), d = [], v = []); return d.length && o(), l.length ? l.join("") : null } var n = sn, r = sn, i = 0, s = on, a = o, f = un, l = f.key, c = f, h = "L", p = .7; return t.x = function (e) { return arguments.length ? (n = r = e, t) : r }, t.x0 = function (e) { return arguments.length ? (n = e, t) : n }, t.x1 = function (e) { return arguments.length ? (r = e, t) : r }, t.y = function (e) { return arguments.length ? (i = s = e, t) : s }, t.y0 = function (e) { return arguments.length ? (i = e, t) : i }, t.y1 = function (e) { return arguments.length ? (s = e, t) : s }, t.defined = function (e) { return arguments.length ? (a = e, t) : a }, t.interpolate = function (e) { return arguments.length ? (typeof e == "function" ? l = f = e : l = (f = $s.get(e) || un).key, c = f.reverse || f, h = f.closed ? "M" : "L", t) : l }, t.tension = function (e) { return arguments.length ? (p = e, t) : p }, t } function Ln(e) { return e.source } function An(e) { return e.target } function On(e) { return e.radius } function Mn(e) { return e.startAngle } function _n(e) { return e.endAngle } function Dn(e) { return [e.x, e.y] } function Pn(e) { return function () { var t = e.apply(this, arguments), n = t[0], r = t[1] + Xs; return [n * Math.cos(r), n * Math.sin(r)] } } function Hn() { return 64 } function Bn() { return "circle" } function jn(e) { var t = Math.sqrt(e / Math.PI); return "M0," + t + "A" + t + "," + t + " 0 1,1 0," + -t + "A" + t + "," + t + " 0 1,1 0," + t + "Z" } function Fn(e, t) { e.attr("transform", function (e) { return "translate(" + t(e) + ",0)" }) } function In(e, t) { e.attr("transform", function (e) { return "translate(0," + t(e) + ")" }) } function qn(e, t, n) { i = []; if (n && t.length > 1) { var r = Mt(e.domain()), i, s = -1, o = t.length, u = (t[1] - t[0]) / ++n, a, f; while (++s < o) for (a = n; --a > 0;) (f = +t[s] - a * u) >= r[0] && i.push(f); for (--s, a = 0; ++a < n && (f = +t[s] + a * u) < r[1];) i.push(f) } return i } function Rn() { no || (no = d3.select("body").append("div").style("visibility", "hidden").style("top", 0).style("height", 0).style("width", 0).style("overflow-y", "scroll").append("div").style("height", "2000px").node().parentNode); var e = d3.event, t; try { no.scrollTop = 1e3, no.dispatchEvent(e), t = 1e3 - no.scrollTop } catch (n) { t = e.wheelDelta || -e.detail * 5 } return t } function Un(e) { var t = e.source, n = e.target, r = Wn(t, n), i = [t]; while (t !== r) t = t.parent, i.push(t); var s = i.length; while (n !== r) i.splice(s, 0, n), n = n.parent; return i } function zn(e) { var t = [], n = e.parent; while (n != null) t.push(e), e = n, n = n.parent; return t.push(e), t } function Wn(e, t) { if (e === t) return e; var n = zn(e), r = zn(t), i = n.pop(), s = r.pop(), o = null; while (i === s) o = i, i = n.pop(), s = r.pop(); return o } function Xn(e) { e.fixed |= 2 } function Vn(e) { e.fixed &= 1 } function $n(e) { e.fixed |= 4 } function Jn(e) { e.fixed &= 3 } function Kn(e, t, n) { var r = 0, i = 0; e.charge = 0; if (!e.leaf) { var s = e.nodes, o = s.length, u = -1, a; while (++u < o) { a = s[u]; if (a == null) continue; Kn(a, t, n), e.charge += a.charge, r += a.charge * a.cx, i += a.charge * a.cy } } if (e.point) { e.leaf || (e.point.x += Math.random() - .5, e.point.y += Math.random() - .5); var f = t * n[e.point.index]; e.charge += e.pointCharge = f, r += f * e.point.x, i += f * e.point.y } e.cx = r / e.charge, e.cy = i / e.charge } function Qn(e) { return 20 } function Gn(e) { return 1 } function Yn(e) { return e.x } function Zn(e) { return e.y } function er(e, t, n) { e.y0 = t, e.y = n } function tr(e) { return d3.range(e.length) } function nr(e) { var t = -1, n = e[0].length, r = []; while (++t < n) r[t] = 0; return r } function rr(e) { var t = 1, n = 0, r = e[0][1], i, s = e.length; for (; t < s; ++t) (i = e[t][1]) > r && (n = t, r = i); return n } function ir(e) { return e.reduce(sr, 0) } function sr(e, t) { return e + t[1] } function or(e, t) { return ur(e, Math.ceil(Math.log(t.length) / Math.LN2 + 1)) } function ur(e, t) { var n = -1, r = +e[0], i = (e[1] - r) / t, s = []; while (++n <= t) s[n] = i * n + r; return s } function ar(e) { return [d3.min(e), d3.max(e)] } function fr(e, t) { return d3.rebind(e, t, "sort", "children", "value"), e.links = pr, e.nodes = function (t) { return uo = !0, (e.nodes = e)(t) }, e } function lr(e) { return e.children } function cr(e) { return e.value } function hr(e, t) { return t.value - e.value } function pr(e) { return d3.merge(e.map(function (e) { return (e.children || []).map(function (t) { return { source: e, target: t } }) })) } function dr(e, t) { return e.value - t.value } function vr(e, t) { var n = e._pack_next; e._pack_next = t, t._pack_prev = e, t._pack_next = n, n._pack_prev = t } function mr(e, t) { e._pack_next = t, t._pack_prev = e } function gr(e, t) { var n = t.x - e.x, r = t.y - e.y, i = e.r + t.r; return i * i - n * n - r * r > .001 } function yr(e) { function t(e) { r = Math.min(e.x - e.r, r), i = Math.max(e.x + e.r, i), s = Math.min(e.y - e.r, s), o = Math.max(e.y + e.r, o) } if (!(n = e.children) || !(p = n.length)) return; var n, r = Infinity, i = -Infinity, s = Infinity, o = -Infinity, u, a, f, l, c, h, p; n.forEach(br), u = n[0], u.x = -u.r, u.y = 0, t(u); if (p > 1) { a = n[1], a.x = a.r, a.y = 0, t(a); if (p > 2) { f = n[2], Sr(u, a, f), t(f), vr(u, f), u._pack_prev = f, vr(f, a), a = u._pack_next; for (l = 3; l < p; l++) { Sr(u, a, f = n[l]); var d = 0, v = 1, m = 1; for (c = a._pack_next; c !== a; c = c._pack_next, v++) if (gr(c, f)) { d = 1; break } if (d == 1) for (h = u._pack_prev; h !== c._pack_prev; h = h._pack_prev, m++) if (gr(h, f)) break; d ? (v < m || v == m && a.r < u.r ? mr(u, a = c) : mr(u = h, a), l--) : (vr(u, f), a = f, t(f)) } } } var g = (r + i) / 2, y = (s + o) / 2, b = 0; for (l = 0; l < p; l++) f = n[l], f.x -= g, f.y -= y, b = Math.max(b, f.r + Math.sqrt(f.x * f.x + f.y * f.y)); e.r = b, n.forEach(wr) } function br(e) { e._pack_next = e._pack_prev = e } function wr(e) { delete e._pack_next, delete e._pack_prev } function Er(e, t, n, r) { var i = e.children; e.x = t += r * e.x, e.y = n += r * e.y, e.r *= r; if (i) { var s = -1, o = i.length; while (++s < o) Er(i[s], t, n, r) } } function Sr(e, t, n) { var r = e.r + n.r, i = t.x - e.x, s = t.y - e.y; if (r && (i || s)) { var o = t.r + n.r, u = i * i + s * s; o *= o, r *= r; var a = .5 + (r - o) / (2 * u), f = Math.sqrt(Math.max(0, 2 * o * (r + u) - (r -= u) * r - o * o)) / (2 * u); n.x = e.x + a * i + f * s, n.y = e.y + a * s - f * i } else n.x = e.x + r, n.y = e.y } function xr(e) { return 1 + d3.max(e, function (e) { return e.y }) } function Tr(e) { return e.reduce(function (e, t) { return e + t.x }, 0) / e.length } function Nr(e) { var t = e.children; return t && t.length ? Nr(t[0]) : e } function Cr(e) { var t = e.children, n; return t && (n = t.length) ? Cr(t[n - 1]) : e } function kr(e, t) { return e.parent == t.parent ? 1 : 2 } function Lr(e) { var t = e.children; return t && t.length ? t[0] : e._tree.thread } function Ar(e) { var t = e.children, n; return t && (n = t.length) ? t[n - 1] : e._tree.thread } function Or(e, t) { var n = e.children; if (n && (i = n.length)) { var r, i, s = -1; while (++s < i) t(r = Or(n[s], t), e) > 0 && (e = r) } return e } function Mr(e, t) { return e.x - t.x } function _r(e, t) { return t.x - e.x } function Dr(e, t) { return e.depth - t.depth } function Pr(e, t) { function n(e, r) { var i = e.children; if (i && (a = i.length)) { var s, o = null, u = -1, a; while (++u < a) s = i[u], n(s, o), o = s } t(e, r) } n(e, null) } function Hr(e) { var t = 0, n = 0, r = e.children, i = r.length, s; while (--i >= 0) s = r[i]._tree, s.prelim += t, s.mod += t, t += s.shift + (n += s.change) } function Br(e, t, n) { e = e._tree, t = t._tree; var r = n / (t.number - e.number); e.change += r, t.change -= r, t.shift += n, t.prelim += n, t.mod += n } function jr(e, t, n) { return e._tree.ancestor.parent == t.parent ? e._tree.ancestor : n } function Fr(e) { return { x: e.x, y: e.y, dx: e.dx, dy: e.dy } } function Ir(e, t) { var n = e.x + t[3], r = e.y + t[0], i = e.dx - t[1] - t[3], s = e.dy - t[0] - t[2]; return i < 0 && (n += i / 2, i = 0), s < 0 && (r += s / 2, s = 0), { x: n, y: r, dx: i, dy: s } } function qr(e, t) { function n(e, r) { d3.text(e, t, function (e) { r(e && n.parse(e)) }) } function r(t) { return t.map(i).join(e) } function i(e) { return o.test(e) ? '"' + e.replace(/\"/g, '""') + '"' : e } var s = new RegExp("\r\n|[" + e + "\r\n]", "g"), o = new RegExp('["' + e + "\n]"), u = e.charCodeAt(0); return n.parse = function (e) { var t; return n.parseRows(e, function (e, n) { if (n) { var r = {}, i = -1, s = t.length; while (++i < s) r[t[i]] = e[i]; return r } return t = e, null }) }, n.parseRows = function (e, t) { function n() { if (s.lastIndex >= e.length) return i; if (l) return l = !1, r; var t = s.lastIndex; if (e.charCodeAt(t) === 34) { var n = t; while (n++ < e.length) if (e.charCodeAt(n) === 34) { if (e.charCodeAt(n + 1) !== 34) break; n++ } s.lastIndex = n + 2; var o = e.charCodeAt(n + 1); return o === 13 ? (l = !0, e.charCodeAt(n + 2) === 10 && s.lastIndex++) : o === 10 && (l = !0), e.substring(t + 1, n).replace(/""/g, '"') } var a = s.exec(e); return a ? (l = a[0].charCodeAt(0) !== u, e.substring(t, a.index)) : (s.lastIndex = e.length, e.substring(t)) } var r = {}, i = {}, o = [], a = 0, f, l; s.lastIndex = 0; while ((f = n()) !== i) { var c = []; while (f !== r && f !== i) c.push(f), f = n(); if (t && !(c = t(c, a++))) continue; o.push(c) } return o }, n.format = function (e) { return e.map(r).join("\n") }, n } function Rr(e, t) { return function (n) { return n && e.hasOwnProperty(n.type) ? e[n.type](n) : t } } function Ur(e) { return "m0," + e + "a" + e + "," + e + " 0 1,1 0," + -2 * e + "a" + e + "," + e + " 0 1,1 0," + 2 * e + "z" } function zr(e, t) { fo.hasOwnProperty(e.type) && fo[e.type](e, t) } function Wr(e, t) { zr(e.geometry, t) } function Xr(e, t) { for (var n = e.features, r = 0, i = n.length; r < i; r++) zr(n[r].geometry, t) } function Vr(e, t) { for (var n = e.geometries, r = 0, i = n.length; r < i; r++) zr(n[r], t) } function $r(e, t) { for (var n = e.coordinates, r = 0, i = n.length; r < i; r++) t.apply(null, n[r]) } function Jr(e, t) { for (var n = e.coordinates, r = 0, i = n.length; r < i; r++) for (var s = n[r], o = 0, u = s.length; o < u; o++) t.apply(null, s[o]) } function Kr(e, t) { for (var n = e.coordinates, r = 0, i = n.length; r < i; r++) for (var s = n[r][0], o = 0, u = s.length; o < u; o++) t.apply(null, s[o]) } function Qr(e, t) { t.apply(null, e.coordinates) } function Gr(e, t) { for (var n = e.coordinates[0], r = 0, i = n.length; r < i; r++) t.apply(null, n[r]) } function Yr(e) { return e.source } function Zr(e) { return e.target } function ei() { function e(e) { var t = Math.sin(e *= p) * d, n = Math.sin(p - e) * d, r = n * s + t * c, u = n * o + t * h, a = n * i + t * l; return [Math.atan2(u, r) / ao, Math.atan2(a, Math.sqrt(r * r + u * u)) / ao] } var t, n, r, i, s, o, u, a, f, l, c, h, p, d; return e.distance = function () { return p == null && (d = 1 / Math.sin(p = Math.acos(Math.max(-1, Math.min(1, i * l + r * f * Math.cos(u - t)))))), p }, e.source = function (u) { var a = Math.cos(t = u[0] * ao), f = Math.sin(t); return r = Math.cos(n = u[1] * ao), i = Math.sin(n), s = r * a, o = r * f, p = null, e }, e.target = function (t) { var n = Math.cos(u = t[0] * ao), r = Math.sin(u); return f = Math.cos(a = t[1] * ao), l = Math.sin(a), c = f * n, h = f * r, p = null, e }, e } function ti(e, t) { var n = ei().source(e).target(t); return n.distance(), n } function ni(e) { var t = 0, n = 0; for (; ;) { if (e(t, n)) return [t, n]; t === 0 ? (t = n + 1, n = 0) : (t -= 1, n += 1) } } function ri(e, t, n, r) { var i, s, o, u, a, f, l; return i = r[e], s = i[0], o = i[1], i = r[t], u = i[0], a = i[1], i = r[n], f = i[0], l = i[1], (l - o) * (u - s) - (a - o) * (f - s) > 0 } function ii(e, t, n) { return (n[0] - t[0]) * (e[1] - t[1]) < (n[1] - t[1]) * (e[0] - t[0]) } function si(e, t, n, r) { var i = e[0], s = t[0], o = n[0], u = r[0], a = e[1], f = t[1], l = n[1], c = r[1], h = i - o, p = s - i, d = u - o, v = a - l, m = f - a, g = c - l, y = (d * v - g * h) / (g * p - d * m); return [i + y * p, a + y * m] } function oi(e, t) {]]></c>
                </r>
                <r>
                  <c><![CDATA[        var n = { list: e.map(function (e, t) { return { index: t, x: e[0], y: e[1] } }).sort(function (e, t) { return e.y < t.y ? -1 : e.y > t.y ? 1 : e.x < t.x ? -1 : e.x > t.x ? 1 : 0 }), bottomSite: null }, r = { list: [], leftEnd: null, rightEnd: null, init: function () { r.leftEnd = r.createHalfEdge(null, "l"), r.rightEnd = r.createHalfEdge(null, "l"), r.leftEnd.r = r.rightEnd, r.rightEnd.l = r.leftEnd, r.list.unshift(r.leftEnd, r.rightEnd) }, createHalfEdge: function (e, t) { return { edge: e, side: t, vertex: null, l: null, r: null } }, insert: function (e, t) { t.l = e, t.r = e.r, e.r.l = t, e.r = t }, leftBound: function (e) { var t = r.leftEnd; do t = t.r; while (t != r.rightEnd && i.rightOf(t, e)); return t = t.l, t }, del: function (e) { e.l.r = e.r, e.r.l = e.l, e.edge = null }, right: function (e) { return e.r }, left: function (e) { return e.l }, leftRegion: function (e) { return e.edge == null ? n.bottomSite : e.edge.region[e.side] }, rightRegion: function (e) { return e.edge == null ? n.bottomSite : e.edge.region[ho[e.side]] } }, i = { bisect: function (e, t) { var n = { region: { l: e, r: t }, ep: { l: null, r: null } }, r = t.x - e.x, i = t.y - e.y, s = r > 0 ? r : -r, o = i > 0 ? i : -i; return n.c = e.x * r + e.y * i + (r * r + i * i) * .5, s > o ? (n.a = 1, n.b = i / r, n.c /= r) : (n.b = 1, n.a = r / i, n.c /= i), n }, intersect: function (e, t) { var n = e.edge, r = t.edge; if (!n || !r || n.region.r == r.region.r) return null; var i = n.a * r.b - n.b * r.a; if (Math.abs(i) < 1e-10) return null; var s = (n.c * r.b - r.c * n.b) / i, o = (r.c * n.a - n.c * r.a) / i, u = n.region.r, a = r.region.r, f, l; u.y < a.y || u.y == a.y && u.x < a.x ? (f = e, l = n) : (f = t, l = r); var c = s >= l.region.r.x; return c && f.side === "l" || !c && f.side === "r" ? null : { x: s, y: o } }, rightOf: function (e, t) { var n = e.edge, r = n.region.r, i = t.x > r.x; if (i && e.side === "l") return 1; if (!i && e.side === "r") return 0; if (n.a === 1) { var s = t.y - r.y, o = t.x - r.x, u = 0, a = 0; !i && n.b < 0 || i && n.b >= 0 ? a = u = s >= n.b * o : (a = t.x + t.y * n.b > n.c, n.b < 0 && (a = !a), a || (u = 1)); if (!u) { var f = r.x - n.region.l.x; a = n.b * (o * o - s * s) < f * s * (1 + 2 * o / f + n.b * n.b), n.b < 0 && (a = !a) } } else { var l = n.c - n.a * t.x, c = t.y - l, h = t.x - r.x, p = l - r.y; a = c * c > h * h + p * p } return e.side === "l" ? a : !a }, endPoint: function (e, n, r) { e.ep[n] = r; if (!e.ep[ho[n]]) return; t(e) }, distance: function (e, t) { var n = e.x - t.x, r = e.y - t.y; return Math.sqrt(n * n + r * r) } }, s = { list: [], insert: function (e, t, n) { e.vertex = t, e.ystar = t.y + n; for (var r = 0, i = s.list, o = i.length; r < o; r++) { var u = i[r]; if (e.ystar > u.ystar || e.ystar == u.ystar && t.x > u.vertex.x) continue; break } i.splice(r, 0, e) }, del: function (e) { for (var t = 0, n = s.list, r = n.length; t < r && n[t] != e; ++t); n.splice(t, 1) }, empty: function () { return s.list.length === 0 }, nextEvent: function (e) { for (var t = 0, n = s.list, r = n.length; t < r; ++t) if (n[t] == e) return n[t + 1]; return null }, min: function () { var e = s.list[0]; return { x: e.vertex.x, y: e.ystar } }, extractMin: function () { return s.list.shift() } }; r.init(), n.bottomSite = n.list.shift(); var o = n.list.shift(), u, a, f, l, c, h, p, d, v, m, g, y, b; for (; ;) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            s.empty() || (u = s.min()); if (o && (s.empty() || o.y < u.y || o.y == u.y && o.x < u.x)) a = r.leftBound(o), f = r.right(a), p = r.rightRegion(a), y = i.bisect(p, o), h = r.createHalfEdge(y, "l"), r.insert(a, h), m = i.intersect(a, h), m && (s.del(a), s.insert(a, m, i.distance(m, o))), a = h, h = r.createHalfEdge(y, "r"]]></c>
                </r>
                <r>
                  <c><![CDATA[            ), r.insert(a, h), m = i.intersect(h, f), m && s.insert(h, m, i.distance(m, o)), o = n.list.shift(); else { if (!!s.empty()) break; a = s.extractMin(), l = r.left(a), f = r.right(a), c = r.right(f), p = r.leftRegion(a), d = r.rightRegion(f), g = a.vertex, i.endPoint(a.edge, a.side, g), i.endPoint(f.edge, f.side, g), r.del(a), s.del(f), r.del(f), b = "l", p.y > d.y && (v = p, p = d, d = v, b = "r"), y = i.bisect(p, d), h = r.createHalfEdge(y, b), r.insert(l, h), i.endPoint(y, ho[b], g), m = i.intersect(l, h), m && (s.del(l), s.insert(l, m, i.distance(m, p))), m = i.intersect(h, c), m && s.insert(h, m, i.distance(m, p)) }]]></c>
                </r>
                <r>
                  <c><![CDATA[        } for (a = r.right(r.leftEnd) ; a != r.rightEnd; a = r.right(a)) t(a.edge)]]></c>
                </r>
                <r>
                  <c><![CDATA[    } function ui() { return { leaf: !0, nodes: [], point: null } } function ai(e, t, n, r, i, s) { if (!e(t, n, r, i, s)) { var o = (n + i) * .5, u = (r + s) * .5, a = t.nodes; a[0] && ai(e, a[0], n, r, o, u), a[1] && ai(e, a[1], o, r, i, u), a[2] && ai(e, a[2], n, u, o, s), a[3] && ai(e, a[3], o, u, i, s) } } function fi(e) { return { x: e[0], y: e[1] } } function li() { this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]) } function ci(e) { return e.substring(0, 3) } function hi(e, t, n, r) { var i, s, o = 0, u = t.length, a = n.length; while (o < u) { if (r >= a) return -1; i = t.charCodeAt(o++); if (i == 37) { s = Ho[t.charAt(o++)]; if (!s || (r = s(e, n, r)) < 0) return -1 } else if (i != n.charCodeAt(r++)) return -1 } return r } function pi(e) { return new RegExp("^(?:" + e.map(d3.requote).join("|") + ")", "i") } function di(e) { var t = new r, n = -1, i = e.length; while (++n < i) t.set(e[n].toLowerCase(), n); return t } function vi(e, t, n) { Ao.lastIndex = 0; var r = Ao.exec(t.substring(n)); return r ? n += r[0].length : -1 } function mi(e, t, n) { Lo.lastIndex = 0; var r = Lo.exec(t.substring(n)); return r ? n += r[0].length : -1 } function gi(e, t, n) { _o.lastIndex = 0; var r = _o.exec(t.substring(n)); return r ? (e.m = Do.get(r[0].toLowerCase()), n += r[0].length) : -1 } function yi(e, t, n) { Oo.lastIndex = 0; var r = Oo.exec(t.substring(n)); return r ? (e.m = Mo.get(r[0].toLowerCase()), n += r[0].length) : -1 } function bi(e, t, n) { return hi(e, Po.c.toString(), t, n) } function wi(e, t, n) { return hi(e, Po.x.toString(), t, n) } function Ei(e, t, n) { return hi(e, Po.X.toString(), t, n) } function Si(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 4)); return r ? (e.y = +r[0], n += r[0].length) : -1 } function xi(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 2)); return r ? (e.y = Ti(+r[0]), n += r[0].length) : -1 } function Ti(e) { return e + (e > 68 ? 1900 : 2e3) } function Ni(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 2)); return r ? (e.m = r[0] - 1, n += r[0].length) : -1 } function Ci(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 2)); return r ? (e.d = +r[0], n += r[0].length) : -1 } function ki(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 2)); return r ? (e.H = +r[0], n += r[0].length) : -1 } function Li(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 2)); return r ? (e.M = +r[0], n += r[0].length) : -1 } function Ai(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 2)); return r ? (e.S = +r[0], n += r[0].length) : -1 } function Oi(e, t, n) { Bo.lastIndex = 0; var r = Bo.exec(t.substring(n, n + 3)); return r ? (e.L = +r[0], n += r[0].length) : -1 } function Mi(e, t, n) { var r = jo.get(t.substring(n, n += 2).toLowerCase()); return r == null ? -1 : (e.p = r, n) } function _i(e) { var t = e.getTimezoneOffset(), n = t > 0 ? "-" : "+", r = ~~(Math.abs(t) / 60), i = Math.abs(t) % 60; return n + To(r) + To(i) } function Di(e) { return e.toISOString() } function Pi(e, t, n) { function r(t) { var n = e(t), r = s(n, 1); return t - n < r - t ? n : r } function i(n) { return t(n = e(new po(n - 1)), 1), n } function s(e, n) { return t(e = new po(+e), n), e } function o(e, r, s) { var o = i(e), u = []; if (s > 1) while (o < r) n(o) % s || u.push(new Date(+o)), t(o, 1); else while (o < r) u.push(new Date(+o)), t(o, 1); return u } function u(e, t, n) { try { po = li; var r = new li; return r._ = e, o(r, t, n) } finally { po = Date } } e.floor = e, e.round = r, e.ceil = i, e.offset = s, e.range = o; var a = e.utc = Hi(e); return a.floor = a, a.round = Hi(r), a.ceil = Hi(i), a.offset = Hi(s), a.range = u, e } function Hi(e) { return function (t, n) { try { po = li; var r = new li; return r._ = t, e(r, n)._ } finally { po = Date } } } function Bi(e, t, n) { function r(t) { return e(t) } return r.invert = function (t) { return Fi(e.invert(t)) }, r.domain = function (t) { return arguments.length ? (e.domain(t), r) : e.domain().map(Fi) }, r.nice = function (e) { return r.domain(Dt(r.domain(), function () { return e })) }, r.ticks = function (n, i) { var s = ji(r.domain()); if (typeof n != "function") { var o = s[1] - s[0], u = o / n, a = d3.bisect(Io, u); if (a == Io.length) return t.year(s, n); if (!a) return e.ticks(n).map(Fi); Math.log(u / Io[a - 1]) < Math.log(Io[a] / u) && --a, n = t[a], i = n[1], n = n[0].range } return n(s[0], new Date(+s[1] + 1), i) }, r.tickFormat = function () { return n }, r.copy = function () { return Bi(e.copy(), t, n) }, d3.rebind(r, e, "range", "rangeRound", "interpolate", "clamp") } function ji(e) { var t = e[0], n = e[e.length - 1]; return t < n ? [t, n] : [n, t] } function Fi(e) { return new Date(e) } function Ii(e) { return function (t) { var n = e.length - 1, r = e[n]; while (!r[1](t)) r = e[--n]; return r[0](t) } } function qi(e) { var t = new Date(e, 0, 1); return t.setFullYear(e), t } function Ri(e) { var t = e.getFullYear(), n = qi(t), r = qi(t + 1); return t + (e - n) / (r - n) } function Ui(e) { var t = new Date(Date.UTC(e, 0, 1)); return t.setUTCFullYear(e), t } function zi(e) { var t = e.getUTCFullYear(), n = Ui(t), r = Ui(t + 1); return t + (e - n) / (r - n) } Date.now || (Date.now = function () { return +(new Date) }); try { document.createElement("div").style.setProperty("opacity", 0, "") } catch (Wi) { var Xi = CSSStyleDeclaration.prototype, Vi = Xi.setProperty; Xi.setProperty = function (e, t, n) { Vi.call(this, e, t + "", n) } } d3 = { version: "2.10.2" }; var $i = n; try { $i(document.documentElement.childNodes)[0].nodeType } catch (Ji) { $i = t } var Ki = [].__proto__ ? function (e, t) { e.__proto__ = t } : function (e, t) { for (var n in t) e[n] = t[n] }; d3.map = function (e) { var t = new r; for (var n in e) t.set(n, e[n]); return t }, e(r, { has: function (e) { return Qi + e in this }, get: function (e) { return this[Qi + e] }, set: function (e, t) { return this[Qi + e] = t }, remove: function (e) { return e = Qi + e, e in this && delete this[e] }, keys: function () { var e = []; return this.forEach(function (t) { e.push(t) }), e }, values: function () { var e = []; return this.forEach(function (t, n) { e.push(n) }), e }, entries: function () { var e = []; return this.forEach(function (t, n) { e.push({ key: t, value: n }) }), e }, forEach: function (e) { for (var t in this) t.charCodeAt(0) === Gi && e.call(this, t.substring(1), this[t]) } }); var Qi = "\0", Gi = Qi.charCodeAt(0); d3.functor = u, d3.rebind = function (e, t) { var n = 1, r = arguments.length, i; while (++n < r) e[i = arguments[n]] = a(e, t, t[i]); return e }, d3.ascending = function (e, t) { return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN }, d3.descending = function (e, t) { return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN }, d3.mean = function (e, t) { var n = e.length, r, i = 0, s = -1, o = 0; if (arguments.length === 1) while (++s < n) f(r = e[s]) && (i += (r - i) / ++o); else while (++s < n) f(r = t.call(e, e[s], s)) && (i += (r - i) / ++o); return o ? i : undefined }, d3.median = function (e, t) { return arguments.length > 1 && (e = e.map(t)), e = e.filter(f), e.length ? d3.quantile(e.sort(d3.ascending), .5) : undefined }, d3.min = function (e, t) { var n = -1, r = e.length, i, s; if (arguments.length === 1) { while (++n < r && ((i = e[n]) == null || i != i)) i = undefined; while (++n < r) (s = e[n]) != null && i > s && (i = s) } else { while (++n < r && ((i = t.call(e, e[n], n)) == null || i != i)) i = undefined; while (++n < r) (s = t.call(e, e[n], n)) != null && i > s && (i = s) } return i }, d3.max = function (e, t) { var n = -1, r = e.length, i, s; if (arguments.length === 1) { while (++n < r && ((i = e[n]) == null || i != i)) i = undefined; while (++n < r) (s = e[n]) != null && s > i && (i = s) } else { while (++n < r && ((i = t.call(e, e[n], n)) == null || i != i)) i = undefined; while (++n < r) (s = t.call(e, e[n], n)) != null && s > i && (i = s) } return i }, d3.extent = function (e, t) { var n = -1, r = e.length, i, s, o; if (arguments.length === 1) { while (++n < r && ((i = o = e[n]) == null || i != i)) i = o = undefined; while (++n < r) (s = e[n]) != null && (i > s && (i = s), o < s && (o = s)) } else { while (++n < r && ((i = o = t.call(e, e[n], n)) == null || i != i)) i = undefined; while (++n < r) (s = t.call(e, e[n], n)) != null && (i > s && (i = s), o < s && (o = s)) } return [i, o] }, d3.random = { normal: function (e, t) { var n = arguments.length; return n < 2 && (t = 1), n < 1 && (e = 0), function () { var n, r, i; do n = Math.random() * 2 - 1, r = Math.random() * 2 - 1, i = n * n + r * r; while (!i || i > 1); return e + t * n * Math.sqrt(-2 * Math.log(i) / i) } }, logNormal: function (e, t) { var n = arguments.length; n < 2 && (t = 1), n < 1 && (e = 0); var r = d3.random.normal(); return function () { return Math.exp(e + t * r()) } }, irwinHall: function (e) { return function () { for (var t = 0, n = 0; n < e; n++) t += Math.random(); return t / e } } }, d3.sum = function (e, t) { var n = 0, r = e.length, i, s = -1; if (arguments.length === 1) while (++s < r) isNaN(i = +e[s]) || (n += i); else while (++s < r) isNaN(i = +t.call(e, e[s], s)) || (n += i); return n }, d3.quantile = function (e, t) { var n = (e.length - 1) * t + 1, r = Math.floor(n), i = e[r - 1], s = n - r; return s ? i + s * (e[r] - i) : i }, d3.transpose = function (e) { return d3.zip.apply(d3, e) }, d3.zip = function () { if (!(i = arguments.length)) return []; for (var e = -1, t = d3.min(arguments, l), n = new Array(t) ; ++e < t;) for (var r = -1, i, s = n[e] = new Array(i) ; ++r < i;) s[r] = arguments[r][e]; return n }, d3.bisector = function (e) { return { left: function (t, n, r, i) { arguments.length < 3 && (r = 0), arguments.length < 4 && (i = t.length); while (r < i) { var s = r + i >>> 1; e.call(t, t[s], s) < n ? r = s + 1 : i = s } return r }, right: function (t, n, r, i) { arguments.length < 3 && (r = 0), arguments.length < 4 && (i = t.length); while (r < i) { var s = r + i >>> 1; n < e.call(t, t[s], s) ? i = s : r = s + 1 } return r } } }; var Yi = d3.bisector(function (e) { return e }); d3.bisectLeft = Yi.left, d3.bisect = d3.bisectRight = Yi.right, d3.first = function (e, t) { var n = 0, r = e.length, i = e[0], s; arguments.length === 1 && (t = d3.ascending); while (++n < r) t.call(e, i, s = e[n]) > 0 && (i = s); return i }, d3.last = function (e, t) { var n = 0, r = e.length, i = e[0], s; arguments.length === 1 && (t = d3.ascending); while (++n < r) t.call(e, i, s = e[n]) <= 0 && (i = s); return i }, d3.nest = function () { function e(t, s) { if (s >= i.length) return u ? u.call(n, t) : o ? t.sort(o) : t; var a = -1, f = t.length, l = i[s++], c, h, p = new r, d, v = {}; while (++a < f) (d = p.get(c = l(h = t[a]))) ? d.push(h) : p.set(c, [h]); return p.forEach(function (t, n) { v[t] = e(n, s) }), v } function t(e, n) { if (n >= i.length) return e; var r = [], o = s[n++], u; for (u in e) r.push({ key: u, values: t(e[u], n) }); return o && r.sort(function (e, t) { return o(e.key, t.key) }), r } var n = {}, i = [], s = [], o, u; return n.map = function (t) { return e(t, 0) }, n.entries = function (n) { return t(e(n, 0), 0) }, n.key = function (e) { return i.push(e), n }, n.sortKeys = function (e) { return s[i.length - 1] = e, n }, n.sortValues = function (e) { return o = e, n }, n.rollup = function (e) { return u = e, n }, n }, d3.keys = function (e) { var t = []; for (var n in e) t.push(n); return t }, d3.values = function (e) { var t = []; for (var n in e) t.push(e[n]); return t }, d3.entries = function (e) { var t = []; for (var n in e) t.push({ key: n, value: e[n] }); return t }, d3.permute = function (e, t) { var n = [], r = -1, i = t.length; while (++r < i) n[r] = e[t[r]]; return n }, d3.merge = function (e) { return Array.prototype.concat.apply([], e) }, d3.split = function (e, t) { var n = [], r = [], i, s = -1, o = e.length; arguments.length < 2 && (t = c); while (++s < o) t.call(r, i = e[s], s) ? r = [] : (r.length || n.push(r), r.push(i)); return n }, d3.range = function (e, t, n) { arguments.length < 3 && (n = 1, arguments.length < 2 && (t = e, e = 0)); if ((t - e) / n === Infinity) throw new Error("infinite range"); var r = [], i = p(Math.abs(n)), s = -1, o; e *= i, t *= i, n *= i; if (n < 0) while ((o = e + n * ++s) > t) r.push(o / i); else while ((o = e + n * ++s) < t) r.push(o / i); return r }, d3.requote = function (e) { return e.replace(Zi, "\\$&") }; var Zi = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g; d3.round = function (e, t) { return t ? Math.round(e * (t = Math.pow(10, t))) / t : Math.round(e) }, d3.xhr = function (e, t, n) { var r = new XMLHttpRequest; arguments.length < 3 ? (n = t, t = null) : t && r.overrideMimeType && r.overrideMimeType(t), r.open("GET", e, !0), t && r.setRequestHeader("Accept", t), r.onreadystatechange = function () { if (r.readyState === 4) { var e = r.status; n(!e && r.response || e >= 200 && e < 300 || e === 304 ? r : null) } }, r.send(null) }, d3.text = function (e, t, n) { function r(e) { n(e && e.responseText) } arguments.length < 3 && (n = t, t = null), d3.xhr(e, t, r) }, d3.json = function (e, t) { d3.text(e, "application/json", function (e) { t(e ? JSON.parse(e) : null) }) }, d3.html = function (e, t) { d3.text(e, "text/html", function (e) { if (e != null) { var n = document.createRange(); n.selectNode(document.body), e = n.createContextualFragment(e) } t(e) }) }, d3.xml = function (e, t, n) { function r(e) { n(e && e.responseXML) } arguments.length < 3 && (n = t, t = null), d3.xhr(e, t, r) }; var es = { svg: "http://www.w3.org/2000/svg", xhtml: "http://www.w3.org/1999/xhtml", xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/" }; d3.ns = { prefix: es, qualify: function (e) { var t = e.indexOf(":"), n = e; return t >= 0 && (n = e.substring(0, t), e = e.substring(t + 1)), es.hasOwnProperty(n) ? { space: es[n], local: e } : e } }, d3.dispatch = function () { var e = new d, t = -1, n = arguments.length; while (++t < n) e[arguments[t]] = v(e); return e }, d.prototype.on = function (e, t) { var n = e.indexOf("."), r = ""; return n > 0 && (r = e.substring(n + 1), e = e.substring(0, n)), arguments.length < 2 ? this[e].on(r) : this[e].on(r, t) }, d3.format = function (e) { var t = ts.exec(e), n = t[1] || " ", r = t[3] || "", i = t[5], s = +t[6], o = t[7], u = t[8], a = t[9], f = 1, l = "", c = !1; u && (u = +u.substring(1)), i && (n = "0", o && (s -= Math.floor((s - 1) / 4))); switch (a) { case "n": o = !0, a = "g"; break; case "%": f = 100, l = "%", a = "f"; break; case "p": f = 100, l = "%", a = "r"; break; case "d": c = !0, u = 0; break; case "s": f = -1, a = "r" } return a == "r" && !u && (a = "g"), a = ns.get(a) || g, function (e) { if (c && e % 1) return ""; var t = e < 0 && (e = -e) ? "-" : r; if (f < 0) { var h = d3.formatPrefix(e, u); e = h.scale(e), l = h.symbol } else e *= f; e = a(e, u); if (i) { var p = e.length + t.length; p < s && (e = (new Array(s - p + 1)).join(n) + e), o && (e = y(e)), e = t + e } else { o && (e = y(e)), e = t + e; var p = e.length; p < s && (e = (new Array(s - p + 1)).join(n) + e) } return e + l } }; var ts = /(?:([^{])?([<>=^]))?([+\- ])?(#)?(0)?([0-9]+)?(,)?(\.[0-9]+)?([a-zA-Z%])?/, ns = d3.map({ g: function (e, t) { return e.toPrecision(t) }, e: function (e, t) { return e.toExponential(t) }, f: function (e, t) { return e.toFixed(t) }, r: function (e, t) { return d3.round(e, t = m(e, t)).toFixed(Math.max(0, Math.min(20, t))) } }), rs = ["y", "z", "a", "f", "p", "n", "μ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(b); d3.formatPrefix = function (e, t) { var n = 0; return e && (e < 0 && (e *= -1), t && (e = d3.round(e, m(e, t))), n = 1 + Math.floor(1e-12 + Math.log(e) / Math.LN10), n = Math.max(-24, Math.min(24, Math.floor((n <= 0 ? n + 1 : n - 1) / 3) * 3))), rs[8 + n / 3] }; var is = T(2), ss = T(3), os = function () { return x }, us = d3.map({ linear: os, poly: T, quad: function () { return is }, cubic: function () { return ss }, sin: function () { return N }, exp: function () { return C }, circle: function () { return k }, elastic: L, back: A, bounce: function () { return O } }), as = d3.map({ "in": x, out: E, "in-out": S, "out-in": function (e) { return S(E(e)) } }); d3.ease = function (e) { var t = e.indexOf("-"), n = t >= 0 ? e.substring(0, t) : e, r = t >= 0 ? e.substring(t + 1) : "in"; return n = us.get(n) || os, r = as.get(r) || x, w(r(n.apply(null, Array.prototype.slice.call(arguments, 1)))) }, d3.event = null, d3.transform = function (e) { var t = document.createElementNS(d3.ns.prefix.svg, "g"); return (d3.transform = function (e) { t.setAttribute("transform", e); var n = t.transform.baseVal.consolidate(); return new P(n ? n.matrix : ls) })(e) }, P.prototype.toString = function () { return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")" }; var fs = 180 / Math.PI, ls = { a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }; d3.interpolate = function (e, t) { var n = d3.interpolators.length, r; while (--n >= 0 && !(r = d3.interpolators[n](e, t))); return r }, d3.interpolateNumber = function (e, t) { return t -= e, function (n) { return e + t * n } }, d3.interpolateRound = function (e, t) { return t -= e, function (n) { return Math.round(e + t * n) } }, d3.interpolateString = function (e, t) { var n, r, i, s = 0, o = 0, u = [], a = [], f, l; cs.lastIndex = 0; for (r = 0; n = cs.exec(t) ; ++r) n.index && u.push(t.substring(s, o = n.index)), a.push({ i: u.length, x: n[0] }), u.push(null), s = cs.lastIndex; s < t.length && u.push(t.substring(s)); for (r = 0, f = a.length; (n = cs.exec(e)) && r < f; ++r) { l = a[r]; if (l.x == n[0]) { if (l.i) if (u[l.i + 1] == null) { u[l.i - 1] += l.x, u.splice(l.i, 1); for (i = r + 1; i < f; ++i) a[i].i-- } else { u[l.i - 1] += l.x + u[l.i + 1], u.splice(l.i, 2); for (i = r + 1; i < f; ++i) a[i].i -= 2 } else if (u[l.i + 1] == null) u[l.i] = l.x; else { u[l.i] = l.x + u[l.i + 1], u.splice(l.i + 1, 1); for (i = r + 1; i < f; ++i) a[i].i-- } a.splice(r, 1), f--, r-- } else l.x = d3.interpolateNumber(parseFloat(n[0]), parseFloat(l.x)) } while (r < f) l = a.pop(), u[l.i + 1] == null ? u[l.i] = l.x : (u[l.i] = l.x + u[l.i + 1], u.splice(l.i + 1, 1)), f--; return u.length === 1 ? u[0] == null ? a[0].x : function () { return t } : function (e) { for (r = 0; r < f; ++r) u[(l = a[r]).i] = l.x(e); return u.join("") } }, d3.interpolateTransform = function (e, t) { var n = [], r = [], i, s = d3.transform(e), o = d3.transform(t), u = s.translate, a = o.translate, f = s.rotate, l = o.rotate, c = s.skew, h = o.skew, p = s.scale, d = o.scale; return u[0] != a[0] || u[1] != a[1] ? (n.push("translate(", null, ",", null, ")"), r.push({ i: 1, x: d3.interpolateNumber(u[0], a[0]) }, { i: 3, x: d3.interpolateNumber(u[1], a[1]) })) : a[0] || a[1] ? n.push("translate(" + a + ")") : n.push(""), f != l ? (f - l > 180 ? l += 360 : l - f > 180 && (f += 360), r.push({ i: n.push(n.pop() + "rotate(", null, ")") - 2, x: d3.interpolateNumber(f, l) })) : l && n.push(n.pop() + "rotate(" + l + ")"), c != h ? r.push({ i: n.push(n.pop() + "skewX(", null, ")") - 2, x: d3.interpolateNumber(c, h) }) : h && n.push(n.pop() + "skewX(" + h + ")"), p[0] != d[0] || p[1] != d[1] ? (i = n.push(n.pop() + "scale(", null, ",", null, ")"), r.push({ i: i - 4, x: d3.interpolateNumber(p[0], d[0]) }, { i: i - 2, x: d3.interpolateNumber(p[1], d[1]) })) : (d[0] != 1 || d[1] != 1) && n.push(n.pop() + "scale(" + d + ")"), i = r.length, function (e) { var t = -1, s; while (++t < i) n[(s = r[t]).i] = s.x(e); return n.join("") } }, d3.interpolateRgb = function (e, t) { e = d3.rgb(e), t = d3.rgb(t); var n = e.r, r = e.g, i = e.b, s = t.r - n, o = t.g - r, u = t.b - i; return function (e) { return "#" + z(Math.round(n + s * e)) + z(Math.round(r + o * e)) + z(Math.round(i + u * e)) } }, d3.interpolateHsl = function (e, t) { e = d3.hsl(e), t = d3.hsl(t); var n = e.h, r = e.s, i = e.l, s = t.h - n, o = t.s - r, u = t.l - i; return s > 180 ? s -= 360 : s < -180 && (s += 360), function (e) { return G(n + s * e, r + o * e, i + u * e) + "" } }, d3.interpolateLab = function (e, t) { e = d3.lab(e), t = d3.lab(t); var n = e.l, r = e.a, i = e.b, s = t.l - n, o = t.a - r, u = t.b - i; return function (e) { return rt(n + s * e, r + o * e, i + u * e) + "" } }, d3.interpolateHcl = function (e, t) { e = d3.hcl(e), t = d3.hcl(t); var n = e.h, r = e.c, i = e.l, s = t.h - n, o = t.c - r, u = t.l - i; return s > 180 ? s -= 360 : s < -180 && (s += 360), function (e) { return et(n + s * e, r + o * e, i + u * e) + "" } }, d3.interpolateArray = function (e, t) { var n = [], r = [], i = e.length, s = t.length, o = Math.min(e.length, t.length), u; for (u = 0; u < o; ++u) n.push(d3.interpolate(e[u], t[u])); for (; u < i; ++u) r[u] = e[u]; for (; u < s; ++u) r[u] = t[u]; return function (e) { for (u = 0; u < o; ++u) r[u] = n[u](e); return r } }, d3.interpolateObject = function (e, t) { var n = {}, r = {}, i; for (i in e) i in t ? n[i] = F(i)(e[i], t[i]) : r[i] = e[i]; for (i in t) i in e || (r[i] = t[i]); return function (e) { for (i in n) r[i] = n[i](e); return r } }; var cs = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g; d3.interpolators = [d3.interpolateObject, function (e, t) { return t instanceof Array && d3.interpolateArray(e, t) }, function (e, t) { return (typeof e == "string" || typeof t == "string") && d3.interpolateString(e + "", t + "") }, function (e, t) { return (typeof t == "string" ? hs.has(t) || /^(#|rgb\(|hsl\()/.test(t) : t instanceof U || t instanceof Q) && d3.interpolateRgb(e, t) }, function (e, t) { return !isNaN(e = +e) && !isNaN(t = +t) && d3.interpolateNumber(e, t) }], d3.rgb = function (e, t, n) { return arguments.length === 1 ? e instanceof U ? R(e.r, e.g, e.b) : W("" + e, R, G) : R(~~e, ~~t, ~~n) }, U.prototype.brighter = function (e) { e = Math.pow(.7, arguments.length ? e : 1); var t = this.r, n = this.g, r = this.b, i = 30; return !t && !n && !r ? R(i, i, i) : (t && t < i && (t = i), n && n < i && (n = i), r && r < i && (r = i), R(Math.min(255, Math.floor(t / e)), Math.min(255, Math.floor(n / e)), Math.min(255, Math.floor(r / e)))) }, U.prototype.darker = function (e) { return e = Math.pow(.7, arguments.length ? e : 1), R(Math.floor(e * this.r), Math.floor(e * this.g), Math.floor(e * this.b)) }, U.prototype.hsl = function () { return X(this.r, this.g, this.b) }, U.prototype.toString = function () { return "#" + z(this.r) + z(this.g) + z(this.b) }; var hs = d3.map({ aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", green: "#008000", greenyellow: "#adff2f", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", red: "#ff0000", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32" }); hs.forEach(function (e, t) { hs.set(e, W(t, R, G)) }), d3.hsl = function (e, t, n) { return arguments.length === 1 ? e instanceof Q ? K(e.h, e.s, e.l) : W("" + e, X, K) : K(+e, +t, +n) }, Q.prototype.brighter = function (e) { return e = Math.pow(.7, arguments.length ? e : 1), K(this.h, this.s, this.l / e) }, Q.prototype.darker = function (e) { return e = Math.pow(.7, arguments.length ? e : 1), K(this.h, this.s, e * this.l) }, Q.prototype.rgb = function () { return G(this.h, this.s, this.l) }, Q.prototype.toString = function () { return this.rgb().toString() }, d3.hcl = function (e, t, n) { return arguments.length === 1 ? e instanceof Z ? Y(e.h, e.c, e.l) : e instanceof nt ? it(e.l, e.a, e.b) : it((e = V((e = d3.rgb(e)).r, e.g, e.b)).l, e.a, e.b) : Y(+e, +t, +n) }, Z.prototype.brighter = function (e) { return Y(this.h, this.c, Math.min(100, this.l + ps * (arguments.length ? e : 1))) }, Z.prototype.darker = function (e) { return Y(this.h, this.c, Math.max(0, this.l - ps * (arguments.length ? e : 1))) }, Z.prototype.rgb = function () { return et(this.h, this.c, this.l).rgb() }, Z.prototype.toString = function () { return this.rgb() + "" }, d3.lab = function (e, t, n) { return arguments.length === 1 ? e instanceof nt ? tt(e.l, e.a, e.b) : e instanceof Z ? et(e.l, e.c, e.h) : V((e = d3.rgb(e)).r, e.g, e.b) : tt(+e, +t, +n) }; var ps = 18, ds = .95047, vs = 1, ms = 1.08883; nt.prototype.brighter = function (e) { return tt(Math.min(100, this.l + ps * (arguments.length ? e : 1)), this.a, this.b) }, nt.prototype.darker = function (e) { return tt(Math.max(0, this.l - ps * (arguments.length ? e : 1)), this.a, this.b) }, nt.prototype.rgb = function () { return rt(this.l, this.a, this.b) }, nt.prototype.toString = function () { return this.rgb() + "" }; var gs = function (e, t) { return t.querySelector(e) }, ys = function (e, t) { return t.querySelectorAll(e) }, bs = document.documentElement, ws = bs.matchesSelector || bs.webkitMatchesSelector || bs.mozMatchesSelector || bs.msMatchesSelector || bs.oMatchesSelector, Es = function (e, t) { return ws.call(e, t) }; typeof Sizzle == "function" && (gs = function (e, t) { return Sizzle(e, t)[0] || null }, ys = function (e, t) { return Sizzle.uniqueSort(Sizzle(e, t)) }, Es = Sizzle.matchesSelector); var Ss = []; d3.selection = function () { return xs }, d3.selection.prototype = Ss, Ss.select = function (e) { var t = [], n, r, i, s; typeof e != "function" && (e = ft(e)); for (var o = -1, u = this.length; ++o < u;) { t.push(n = []), n.parentNode = (i = this[o]).parentNode; for (var a = -1, f = i.length; ++a < f;) (s = i[a]) ? (n.push(r = e.call(s, s.__data__, a)), r && "__data__" in s && (r.__data__ = s.__data__)) : n.push(null) } return at(t) }, Ss.selectAll = function (e) { var t = [], n, r; typeof e != "function" && (e = lt(e)); for (var i = -1, s = this.length; ++i < s;) for (var o = this[i], u = -1, a = o.length; ++u < a;) if (r = o[u]) t.push(n = $i(e.call(r, r.__data__, u))), n.parentNode = r; return at(t) }, Ss.attr = function (e, t) { if (arguments.length < 2) { if (typeof e == "string") { var n = this.node(); return e = d3.ns.qualify(e), e.local ? n.getAttributeNS(e.space, e.local) : n.getAttribute(e) } for (t in e) this.each(ct(t, e[t])); return this } return this.each(ct(e, t)) }, Ss.classed = function (e, t) { if (arguments.length < 2) { if (typeof e == "string") { var n = this.node(), r = (e = e.trim().split(/^|\s+/g)).length, i = -1; if (t = n.classList) { while (++i < r) if (!t.contains(e[i])) return !1 } else { t = n.className, t.baseVal != null && (t = t.baseVal); while (++i < r) if (!ht(e[i]).test(t)) return !1 } return !0 } for (t in e) this.each(pt(t, e[t])); return this } return this.each(pt(e, t)) }, Ss.style = function (e, t, n) { var r = arguments.length; if (r < 3) { if (typeof e != "string") { r < 2 && (t = ""); for (n in e) this.each(vt(n, e[n], t)); return this } if (r < 2) return window.getComputedStyle(this.node(), null).getPropertyValue(e); n = "" } return this.each(vt(e, t, n)) }, Ss.property = function (e, t) { if (arguments.length < 2) { if (typeof e == "string") return this.node()[e]; for (t in e) this.each(mt(t, e[t])); return this } return this.each(mt(e, t)) }, Ss.text = function (e) { return arguments.length < 1 ? this.node().textContent : this.each(typeof e == "function" ? function () { var t = e.apply(this, arguments); this.textContent = t == null ? "" : t } : e == null ? function () { this.textContent = "" } : function () { this.textContent = e }) }, Ss.html = function (e) { return arguments.length < 1 ? this.node().innerHTML : this.each(typeof e == "function" ? function () { var t = e.apply(this, arguments); this.innerHTML = t == null ? "" : t } : e == null ? function () { this.innerHTML = "" } : function () { this.innerHTML = e }) }, Ss.append = function (e) { function t() { return this.appendChild(document.createElementNS(this.namespaceURI, e)) } function n() { return this.appendChild(document.createElementNS(e.space, e.local)) } return e = d3.ns.qualify(e), this.select(e.local ? n : t) }, Ss.insert = function (e, t) { function n() { return this.insertBefore(document.createElementNS(this.namespaceURI, e), gs(t, this)) } function r() { return this.insertBefore(document.createElementNS(e.space, e.local), gs(t, this)) } return e = d3.ns.qualify(e), this.select(e.local ? r : n) }, Ss.remove = function () { return this.each(function () { var e = this.parentNode; e && e.removeChild(this) }) }, Ss.data = function (e, t) { function n(e, n) { var i, s = e.length, o = n.length, u = Math.min(s, o), c = Math.max(s, o), h = [], p = [], d = [], v, m; if (t) { var g = new r, y = [], b, w = n.length; for (i = -1; ++i < s;) b = t.call(v = e[i], v.__data__, i), g.has(b) ? d[w++] = v : g.set(b, v), y.push(b); for (i = -1; ++i < o;) b = t.call(n, m = n[i], i), g.has(b) ? (h[i] = v = g.get(b), v.__data__ = m, p[i] = d[i] = null) : (p[i] = gt(m), h[i] = d[i] = null), g.remove(b); for (i = -1; ++i < s;) g.has(y[i]) && (d[i] = e[i]) } else { for (i = -1; ++i < u;) v = e[i], m = n[i], v ? (v.__data__ = m, h[i] = v, p[i] = d[i] = null) : (p[i] = gt(m), h[i] = d[i] = null); for (; i < o; ++i) p[i] = gt(n[i]), h[i] = d[i] = null; for (; i < c; ++i) d[i] = e[i], p[i] = h[i] = null } p.update = h, p.parentNode = h.parentNode = d.parentNode = e.parentNode, a.push(p), f.push(h), l.push(d) } var i = -1, s = this.length, o, u; if (!arguments.length) { e = new Array(s = (o = this[0]).length); while (++i < s) if (u = o[i]) e[i] = u.__data__; return e } var a = St([]), f = at([]), l = at([]); if (typeof e == "function") while (++i < s) n(o = this[i], e.call(o, o.parentNode.__data__, i)); else while (++i < s) n(o = this[i], e); return f.enter = function () { return a }, f.exit = function () { return l }, f }, Ss.datum = Ss.map = function (e) { return arguments.length < 1 ? this.property("__data__") : this.property("__data__", e) }, Ss.filter = function (e) { var t = [], n, r, i; typeof e != "function" && (e = yt(e)); for (var s = 0, o = this.length; s < o; s++) { t.push(n = []), n.parentNode = (r = this[s]).parentNode; for (var u = 0, a = r.length; u < a; u++) (i = r[u]) && e.call(i, i.__data__, u) && n.push(i) } return at(t) }, Ss.order = function () { for (var e = -1, t = this.length; ++e < t;) for (var n = this[e], r = n.length - 1, i = n[r], s; --r >= 0;) if (s = n[r]) i && i !== s.nextSibling && i.parentNode.insertBefore(s, i), i = s; return this }, Ss.sort = function (e) { e = bt.apply(this, arguments); for (var t = -1, n = this.length; ++t < n;) this[t].sort(e); return this.order() }, Ss.on = function (e, t, n) { var r = arguments.length; if (r < 3) { if (typeof e != "string") { r < 2 && (t = !1); for (n in e) this.each(wt(n, e[n], t)); return this } if (r < 2) return (r = this.node()["__on" + e]) && r._; n = !1 } return this.each(wt(e, t, n)) }, Ss.each = function (e) { return Et(this, function (t, n, r) { e.call(t, t.__data__, n, r) }) }, Ss.call = function (e) { return e.apply(this, (arguments[0] = this, arguments)), this }, Ss.empty = function () { return !this.node() }, Ss.node = function (e) { for (var t = 0, n = this.length; t < n; t++) for (var r = this[t], i = 0, s = r.length; i < s; i++) { var o = r[i]; if (o) return o } return null }, Ss.transition = function () { var e = [], t, n; for (var r = -1, i = this.length; ++r < i;) { e.push(t = []); for (var s = this[r], o = -1, u = s.length; ++o < u;) t.push((n = s[o]) ? { node: n, delay: Ms, duration: _s } : null) } return xt(e, ks || ++Cs, Date.now()) }; var xs = at([[document]]); xs[0].parentNode = bs, d3.select = function (e) { return typeof e == "string" ? xs.select(e) : at([[e]]) }, d3.selectAll = function (e) { return typeof e == "string" ? xs.selectAll(e) : at([$i(e)]) }; var Ts = []; d3.selection.enter = St, d3.selection.enter.prototype = Ts, Ts.append = Ss.append, Ts.insert = Ss.insert, Ts.empty = Ss.empty, Ts.node = Ss.node, Ts.select = function (e) { var t = [], n, r, i, s, o; for (var u = -1, a = this.length; ++u < a;) { i = (s = this[u]).update, t.push(n = []), n.parentNode = s.parentNode; for (var f = -1, l = s.length; ++f < l;) (o = s[f]) ? (n.push(i[f] = r = e.call(s.parentNode, o.__data__, f)), r.__data__ = o.__data__) : n.push(null) } return at(t) }; var Ns = [], Cs = 0, ks = 0, Ls = 0, As = 250, Os = d3.ease("cubic-in-out"), Ms = Ls, _s = As, Ds = Os; Ns.call = Ss.call, d3.transition = function (e) { return arguments.length ? ks ? e.transition() : e : xs.transition() }, d3.transition.prototype = Ns, Ns.select = function (e) { var t = [], n, r, i; typeof e != "function" && (e = ft(e)); for (var s = -1, o = this.length; ++s < o;) { t.push(n = []); for (var u = this[s], a = -1, f = u.length; ++a < f;) (i = u[a]) && (r = e.call(i.node, i.node.__data__, a)) ? ("__data__" in i.node && (r.__data__ = i.node.__data__), n.push({ node: r, delay: i.delay, duration: i.duration })) : n.push(null) } return xt(t, this.id, this.time).ease(this.ease()) }, Ns.selectAll = function (e) { var t = [], n, r, i; typeof e != "function" && (e = lt(e)); for (var s = -1, o = this.length; ++s < o;) for (var u = this[s], a = -1, f = u.length; ++a < f;) if (i = u[a]) { r = e.call(i.node, i.node.__data__, a), t.push(n = []); for (var l = -1, c = r.length; ++l < c;) n.push({ node: r[l], delay: i.delay, duration: i.duration }) } return xt(t, this.id, this.time).ease(this.ease()) }, Ns.filter = function (e) { var t = [], n, r, i; typeof e != "function" && (e = yt(e)); for (var s = 0, o = this.length; s < o; s++) { t.push(n = []); for (var r = this[s], u = 0, a = r.length; u < a; u++) (i = r[u]) && e.call(i.node, i.node.__data__, u) && n.push(i) } return xt(t, this.id, this.time).ease(this.ease()) }, Ns.attr = function (e, t) { if (arguments.length < 2) { for (t in e) this.attrTween(t, Ct(e[t], t)); return this } return this.attrTween(e, Ct(t, e)) }, Ns.attrTween = function (e, t) { function n(e, n) { var r = t.call(this, e, n, this.getAttribute(i)); return r === Ps ? (this.removeAttribute(i), null) : r && function (e) { this.setAttribute(i, r(e)) } } function r(e, n) { var r = t.call(this, e, n, this.getAttributeNS(i.space, i.local)); return r === Ps ? (this.removeAttributeNS(i.space, i.local), null) : r && function (e) { this.setAttributeNS(i.space, i.local, r(e)) } } var i = d3.ns.qualify(e); return this.tween("attr." + e, i.local ? r : n) }, Ns.style = function (e, t, n) { var r = arguments.length; if (r < 3) { if (typeof e != "string") { r < 2 && (t = ""); for (n in e) this.styleTween(n, Ct(e[n], n), t); return this } n = "" } return this.styleTween(e, Ct(t, e), n) }, Ns.styleTween = function (e, t, n) { return arguments.length < 3 && (n = ""), this.tween("style." + e, function (r, i) { var s = t.call(this, r, i, window.getComputedStyle(this, null).getPropertyValue(e)); return s === Ps ? (this.style.removeProperty(e), null) : s && function (t) { this.style.setProperty(e, s(t), n) } }) }, Ns.text = function (e) { return this.tween("text", function (t, n) { this.textContent = typeof e == "function" ? e.call(this, t, n) : e }) }, Ns.remove = function () { return this.each("end.transition", function () { var e; !this.__transition__ && (e = this.parentNode) && e.removeChild(this) }) }, Ns.delay = function (e) { return Et(this, typeof e == "function" ? function (t, n, r) { t.delay = e.call(t = t.node, t.__data__, n, r) | 0 } : (e |= 0, function (t) { t.delay = e })) }, Ns.duration = function (e) { return Et(this, typeof e == "function" ? function (t, n, r) { t.duration = Math.max(1, e.call(t = t.node, t.__data__, n, r) | 0) } : (e = Math.max(1, e | 0), function (t) { t.duration = e })) }, Ns.transition = function () { return this.select(s) }, d3.tween = function (e, t) { function n(n, r, i) { var s = e.call(this, n, r); return s == null ? i != "" && Ps : i != s && t(i, s) } function r(n, r, i) { return i != e && t(i, e) } return typeof e == "function" ? n : e == null ? Nt : (e += "", r) }; var Ps = {}, Hs = null, Bs, js; d3.timer = function (e, t, n) { var r = !1, i, s = Hs; if (arguments.length < 3) { if (arguments.length < 2) t = 0; else if (!isFinite(t)) return; n = Date.now() } while (s) { if (s.callback === e) { s.then = n, s.delay = t, r = !0; break } i = s, s = s.next } r || (Hs = { callback: e, then: n, delay: t, next: Hs }), Bs || (js = clearTimeout(js), Bs = 1, Fs(kt)) }, d3.timer.flush = function () { var e, t = Date.now(), n = Hs; while (n) e = t - n.then, n.delay || (n.flush = n.callback(e)), n = n.next; Lt() }; var Fs = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||]]></c>
                </r>
                <r>
                  <c><![CDATA[    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e) { setTimeout(e, 17) }; d3.mouse = function (e) { return At(e, _()) }; var Is = /WebKit/.test(navigator.userAgent) ? -1 : 0; d3.touches = function (e, t) { return arguments.length < 2 && (t = _().touches), t ? $i(t).map(function (t) { var n = At(e, t); return n.identifier = t.identifier, n }) : [] }, d3.scale = {}, d3.scale.linear = function () { return Ht([0, 1], [0, 1], d3.interpolate, !1) }, d3.scale.log = function () { return zt(d3.scale.linear(), Wt) }; var qs = d3.format(".0e"); Wt.pow = function (e) { return Math.pow(10, e) }, Xt.pow = function (e) { return -Math.pow(10, -e) }, d3.scale.pow = function () { return Vt(d3.scale.linear(), 1) }, d3.scale.sqrt = function () { return d3.scale.pow().exponent(.5) }, d3.scale.ordinal = function () { return Jt([], { t: "range", a: [[]] }) }, d3.scale.category10 = function () { return d3.scale.ordinal().range(Rs) }, d3.scale.category20 = function () { return d3.scale.ordinal().range(Us) }, d3.scale.category20b = function () { return d3.scale.ordinal().range(zs) }, d3.scale.category20c = function () { return d3.scale.ordinal().range(Ws) }; var Rs = ["#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd", "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"], Us = ["#1f77b4", "#aec7e8", "#ff7f0e", "#ffbb78", "#2ca02c", "#98df8a", "#d62728", "#ff9896", "#9467bd", "#c5b0d5", "#8c564b", "#c49c94", "#e377c2", "#f7b6d2", "#7f7f7f", "#c7c7c7", "#bcbd22", "#dbdb8d", "#17becf", "#9edae5"], zs = ["#393b79", "#5254a3", "#6b6ecf", "#9c9ede", "#637939", "#8ca252", "#b5cf6b", "#cedb9c", "#8c6d31", "#bd9e39", "#e7ba52", "#e7cb94", "#843c39", "#ad494a", "#d6616b", "#e7969c", "#7b4173", "#a55194", "#ce6dbd", "#de9ed6"], Ws = ["#3182bd", "#6baed6", "#9ecae1", "#c6dbef", "#e6550d", "#fd8d3c", "#fdae6b", "#fdd0a2", "#31a354", "#74c476", "#a1d99b", "#c7e9c0", "#756bb1", "#9e9ac8", "#bcbddc", "#dadaeb", "#636363", "#969696", "#bdbdbd", "#d9d9d9"]; d3.scale.quantile = function () { return Kt([], []) }, d3.scale.quantize = function () { return Qt(0, 1, [0, 1]) }, d3.scale.threshold = function () { return Gt([.5], [0, 1]) }, d3.scale.identity = function () { return Yt([0, 1]) }, d3.svg = {}, d3.svg.arc = function () { function e() { var e = t.apply(this, arguments), s = n.apply(this, arguments), o = r.apply(this, arguments) + Xs, u = i.apply(this, arguments) + Xs, a = (u < o && (a = o, o = u, u = a), u - o), f = a < Math.PI ? "0" : "1", l = Math.cos(o), c = Math.sin(o), h = Math.cos(u), p = Math.sin(u); return a >= Vs ? e ? "M0," + s + "A" + s + "," + s + " 0 1,1 0," + -s + "A" + s + "," + s + " 0 1,1 0," + s + "M0," + e + "A" + e + "," + e + " 0 1,0 0," + -e + "A" + e + "," + e + " 0 1,0 0," + e + "Z" : "M0," + s + "A" + s + "," + s + " 0 1,1 0," + -s + "A" + s + "," + s + " 0 1,1 0," + s + "Z" : e ? "M" + s * l + "," + s * c + "A" + s + "," + s + " 0 " + f + ",1 " + s * h + "," + s * p + "L" + e * h + "," + e * p + "A" + e + "," + e + " 0 " + f + ",0 " + e * l + "," + e * c + "Z" : "M" + s * l + "," + s * c + "A" + s + "," + s + " 0 " + f + ",1 " + s * h + "," + s * p + "L0,0" + "Z" } var t = Zt, n = en, r = tn, i = nn; return e.innerRadius = function (n) { return arguments.length ? (t = u(n), e) : t }, e.outerRadius = function (t) { return arguments.length ? (n = u(t), e) : n }, e.startAngle = function (t) { return arguments.length ? (r = u(t), e) : r }, e.endAngle = function (t) { return arguments.length ? (i = u(t), e) : i }, e.centroid = function () { var e = (t.apply(this, arguments) + n.apply(this, arguments)) / 2, s = (r.apply(this, arguments) + i.apply(this, arguments)) / 2 + Xs; return [Math.cos(s) * e, Math.sin(s) * e] }, e }; var Xs = -Math.PI / 2, Vs = 2 * Math.PI - 1e-6; d3.svg.line = function () { return rn(i) }; var $s = d3.map({ linear: un, "linear-closed": an, "step-before": fn, "step-after": ln, basis: mn, "basis-open": gn, "basis-closed": yn, bundle: bn, cardinal: pn, "cardinal-open": cn, "cardinal-closed": hn, monotone: Nn }); $s.forEach(function (e, t) { t.key = e, t.closed = /-closed$/.test(e) }); var Js = [0, 2 / 3, 1 / 3, 0], Ks = [0, 1 / 3, 2 / 3, 0], Qs = [0, 1 / 6, 2 / 3, 1 / 6]; d3.svg.line.radial = function () { var e = rn(Cn); return e.radius = e.x, delete e.x, e.angle = e.y, delete e.y, e }, fn.reverse = ln, ln.reverse = fn, d3.svg.area = function () { return kn(i) }, d3.svg.area.radial = function () { var e = kn(Cn); return e.radius = e.x, delete e.x, e.innerRadius = e.x0, delete e.x0, e.outerRadius = e.x1, delete e.x1, e.angle = e.y, delete e.y, e.startAngle = e.y0, delete e.y0, e.endAngle = e.y1, delete e.y1, e }, d3.svg.chord = function () { function e(e, u) { var a = t(this, s, e, u), f = t(this, o, e, u); return "M" + a.p0 + r(a.r, a.p1, a.a1 - a.a0) + (n(a, f) ? i(a.r, a.p1, a.r, a.p0) : i(a.r, a.p1, f.r, f.p0) + r(f.r, f.p1, f.a1 - f.a0) + i(f.r, f.p1, a.r, a.p0)) + "Z" } function t(e, t, n, r) { var i = t.call(e, n, r), s = a.call(e, i, r), o = f.call(e, i, r) + Xs, u = l.call(e, i, r) + Xs; return { r: s, a0: o, a1: u, p0: [s * Math.cos(o), s * Math.sin(o)], p1: [s * Math.cos(u), s * Math.sin(u)] } } function n(e, t) { return e.a0 == t.a0 && e.a1 == t.a1 } function r(e, t, n) { return "A" + e + "," + e + " 0 " + +(n > Math.PI) + ",1 " + t } function i(e, t, n, r) { return "Q 0,0 " + r } var s = Ln, o = An, a = On, f = tn, l = nn; return e.radius = function (t) { return arguments.length ? (a = u(t), e) : a }, e.source = function (t) { return arguments.length ? (s = u(t), e) : s }, e.target = function (t) { return arguments.length ? (o = u(t), e) : o }, e.startAngle = function (t) { return arguments.length ? (f = u(t), e) : f }, e.endAngle = function (t) { return arguments.length ? (l = u(t), e) : l }, e }, d3.svg.diagonal = function () { function e(e, i) { var s = t.call(this, e, i), o = n.call(this, e, i), u = (s.y + o.y) / 2, a = [s, { x: s.x, y: u }, { x: o.x, y: u }, o]; return a = a.map(r), "M" + a[0] + "C" + a[1] + " " + a[2] + " " + a[3] } var t = Ln, n = An, r = Dn; return e.source = function (n) { return arguments.length ? (t = u(n), e) : t }, e.target = function (t) { return arguments.length ? (n = u(t), e) : n }, e.projection = function (t) { return arguments.length ? (r = t, e) : r }, e }, d3.svg.diagonal.radial = function () { var e = d3.svg.diagonal(), t = Dn, n = e.projection; return e.projection = function (e) { return arguments.length ? n(Pn(t = e)) : t }, e }, d3.svg.mouse = d3.mouse, d3.svg.touches = d3.touches, d3.svg.symbol = function () { function e(e, r) { return (Gs.get(t.call(this, e, r)) || jn)(n.call(this, e, r)) } var t = Bn, n = Hn; return e.type = function (n) { return arguments.length ? (t = u(n), e) : t }, e.size = function (t) { return arguments.length ? (n = u(t), e) : n }, e }; var Gs = d3.map({ circle: jn, cross: function (e) { var t = Math.sqrt(e / 5) / 2; return "M" + -3 * t + "," + -t + "H" + -t + "V" + -3 * t + "H" + t + "V" + -t + "H" + 3 * t + "V" + t + "H" + t + "V" + 3 * t + "H" + -t + "V" + t + "H" + -3 * t + "Z" }, diamond: function (e) { var t = Math.sqrt(e / (2 * Zs)), n = t * Zs; return "M0," + -t + "L" + n + ",0" + " 0," + t + " " + -n + ",0" + "Z" }, square: function (e) { var t = Math.sqrt(e) / 2; return "M" + -t + "," + -t + "L" + t + "," + -t + " " + t + "," + t + " " + -t + "," + t + "Z" }, "triangle-down": function (e) { var t = Math.sqrt(e / Ys), n = t * Ys / 2; return "M0," + n + "L" + t + "," + -n + " " + -t + "," + -n + "Z" }, "triangle-up": function (e) { var t = Math.sqrt(e / Ys), n = t * Ys / 2; return "M0," + -n + "L" + t + "," + n + " " + -t + "," + n + "Z" } }); d3.svg.symbolTypes = Gs.keys(); var Ys = Math.sqrt(3), Zs = Math.tan(30 * Math.PI / 180); d3.svg.axis = function () { function e(e) { e.each(function () { var e = d3.select(this), c = a == null ? t.ticks ? t.ticks.apply(t, u) : t.domain() : a, h = f == null ? t.tickFormat ? t.tickFormat.apply(t, u) : String : f, p = qn(t, c, l), d = e.selectAll(".minor").data(p, String), v = d.enter().insert("line", "g").attr("class", "tick minor").style("opacity", 1e-6), m = d3.transition(d.exit()).style("opacity", 1e-6).remove(), g = d3.transition(d).style("opacity", 1), y = e.selectAll("g").data(c, String), b = y.enter().insert("g", "path").style("opacity", 1e-6), w = d3.transition(y.exit()).style("opacity", 1e-6).remove(), E = d3.transition(y).style("opacity", 1), S, x = _t(t), T = e.selectAll(".domain").data([0]), N = T.enter().append("path").attr("class", "domain"), C = d3.transition(T), k = t.copy(), L = this.__chart__ || k; this.__chart__ = k, b.append("line").attr("class", "tick"), b.append("text"); var A = b.select("line"), O = E.select("line"), M = y.select("text").text(h), _ = b.select("text"), D = E.select("text"); switch (n) { case "bottom": S = Fn, v.attr("y2", i), g.attr("x2", 0).attr("y2", i), A.attr("y2", r), _.attr("y", Math.max(r, 0) + o), O.attr("x2", 0).attr("y2", r), D.attr("x", 0).attr("y", Math.max(r, 0) + o), M.attr("dy", ".71em").attr("text-anchor", "middle"), C.attr("d", "M" + x[0] + "," + s + "V0H" + x[1] + "V" + s); break; case "top": S = Fn, v.attr("y2", -i), g.attr("x2", 0).attr("y2", -i), A.attr("y2", -r), _.attr("y", -(Math.max(r, 0) + o)), O.attr("x2", 0).attr("y2", -r), D.attr("x", 0).attr("y", -(Math.max(r, 0) + o)), M.attr("dy", "0em").attr("text-anchor", "middle"), C.attr("d", "M" + x[0] + "," + -s + "V0H" + x[1] + "V" + -s); break; case "left": S = In, v.attr("x2", -i), g.attr("x2", -i).attr("y2", 0), A.attr("x2", -r), _.attr("x", -(Math.max(r, 0) + o)), O.attr("x2", -r).attr("y2", 0), D.attr("x", -(Math.max(r, 0) + o)).attr("y", 0), M.attr("dy", ".32em").attr("text-anchor", "end"), C.attr("d", "M" + -s + "," + x[0] + "H0V" + x[1] + "H" + -s); break; case "right": S = In, v.attr("x2", i), g.attr("x2", i).attr("y2", 0), A.attr("x2", r), _.attr("x", Math.max(r, 0) + o), O.attr("x2", r).attr("y2", 0), D.attr("x", Math.max(r, 0) + o).attr("y", 0), M.attr("dy", ".32em").attr("text-anchor", "start"), C.attr("d", "M" + s + "," + x[0] + "H0V" + x[1] + "H" + s) } if (t.ticks) b.call(S, L), E.call(S, k), w.call(S, k), v.call(S, L), g.call(S, k), m.call(S, k); else { var P = k.rangeBand() / 2, H = function (e) { return k(e) + P }; b.call(S, H), E.call(S, H) } }) } var t = d3.scale.linear(), n = "bottom", r = 6, i = 6, s = 6, o = 3, u = [10], a = null, f, l = 0; return e.scale = function (n) { return arguments.length ? (t = n, e) : t }, e.orient = function (t) { return arguments.length ? (n = t, e) : n }, e.ticks = function () { return arguments.length ? (u = arguments, e) : u }, e.tickValues = function (t) { return arguments.length ? (a = t, e) : a }, e.tickFormat = function (t) { return arguments.length ? (f = t, e) : f }, e.tickSize = function (t, n, o) { if (!arguments.length) return r; var u = arguments.length - 1; return r = +t, i = u > 1 ? +n : r, s = u > 0 ? +arguments[u] : r, e }, e.tickPadding = function (t) { return arguments.length ? (o = +t, e) : o }, e.tickSubdivide = function (t) { return arguments.length ? (l = +t, e) : l }, e }, d3.svg.brush = function () { function e(s) { s.each(function () { var s = d3.select(this), f = s.selectAll(".background").data([0]), l = s.selectAll(".extent").data([0]), c = s.selectAll(".resize").data(a, String), h; s.style("pointer-events", "all").on("mousedown.brush", i).on("touchstart.brush", i), f.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair"), l.enter().append("rect").attr("class", "extent").style("cursor", "move"), c.enter().append("g").attr("class", function (e) { return "resize " + e }).style("cursor", function (e) { return eo[e] }).append("rect").attr("x", function (e) { return /[ew]$/.test(e) ? -3 : null }).attr("y", function (e) { return /^[ns]/.test(e) ? -3 : null }).attr("width", 6).attr("height", 6).style("visibility", "hidden"), c.style("display", e.empty() ? "none" : null), c.exit().remove(), o && (h = _t(o), f.attr("x", h[0]).attr("width", h[1] - h[0]), n(s)), u && (h = _t(u), f.attr("y", h[0]).attr("height", h[1] - h[0]), r(s)), t(s) }) } function t(e) { e.selectAll(".resize").attr("transform", function (e) { return "translate(" + f[+/e$/.test(e)][0] + "," + f[+/^s/.test(e)][1] + ")" }) } function n(e) { e.select(".extent").attr("x", f[0][0]), e.selectAll(".extent,.n>rect,.s>rect").attr("width", f[1][0] - f[0][0]) } function r(e) { e.select(".extent").attr("y", f[0][1]), e.selectAll(".extent,.e>rect,.w>rect").attr("height", f[1][1] - f[0][1]) } function i() { function i() { var e = d3.event.changedTouches; return e ? d3.touches(v, e)[0] : d3.mouse(v) } function a() { d3.event.keyCode == 32 && (S || (x = null, T[0] -= f[1][0], T[1] -= f[1][1], S = 2), M()) } function c() { d3.event.keyCode == 32 && S == 2 && (T[0] += f[1][0], T[1] += f[1][1], S = 0, M()) } function h() { var e = i(), s = !1; N && (e[0] += N[0], e[1] += N[1]), S || (d3.event.altKey ? (x || (x = [(f[0][0] + f[1][0]) / 2, (f[0][1] + f[1][1]) / 2]), T[0] = f[+(e[0] < x[0])][0], T[1] = f[+(e[1] < x[1])][1]) : x = null), w && p(e, o, 0) && (n(y), s = !0), E && p(e, u, 1) && (r(y), s = !0), s && (t(y), g({ type: "brush", mode: S ? "move" : "resize" })) } function p(e, t, n) { var r = _t(t), i = r[0], s = r[1], o = T[n], u = f[1][n] - f[0][n], a, c; S && (i -= o, s -= u + o), a = Math.max(i, Math.min(s, e[n])), S ? c = (a += o) + u : (x && (o = Math.max(i, Math.min(s, 2 * x[n] - a))), o < a ? (c = a, a = o) : c = o); if (f[0][n] !== a || f[1][n] !== c) return l = null, f[0][n] = a, f[1][n] = c, !0 } function d() { h(), y.style("pointer-events", "all").selectAll(".resize").style("display", e.empty() ? "none" : null), d3.select("body").style("cursor", null), C.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null), g({ type: "brushend" }), M() } var v = this, m = d3.select(d3.event.target), g = s.of(v, arguments), y = d3.select(v), b = m.datum(), w = !/^(n|s)$/.test(b) && o, E = !/^(e|w)$/.test(b) && u, S = m.classed("extent"), x, T = i(), N, C = d3.select(window).on("mousemove.brush", h).on("mouseup.brush", d).on("touchmove.brush", h).on("touchend.brush", d).on("keydown.brush", a).on("keyup.brush", c); if (S) T[0] = f[0][0] - T[0], T[1] = f[0][1] - T[1]; else if (b) { var k = +/w$/.test(b), L = +/^n/.test(b); N = [f[1 - k][0] - T[0], f[1 - L][1] - T[1]], T[0] = f[k][0], T[1] = f[L][1] } else d3.event.altKey && (x = T.slice()); y.style("pointer-events", "none").selectAll(".resize").style("display", null), d3.select("body").style("cursor", m.style("cursor")), g({ type: "brushstart" }), h(), M() } var s = D(e, "brushstart", "brush", "brushend"), o = null, u = null, a = to[0], f = [[0, 0], [0, 0]], l; return e.x = function (t) { return arguments.length ? (o = t, a = to[!o << 1 | !u], e) : o }, e.y = function (t) { return arguments.length ? (u = t, a = to[!o << 1 | !u], e) : u }, e.extent = function (t) { var n, r, i, s, a; return arguments.length ? (l = [[0, 0], [0, 0]], o && (n = t[0], r = t[1], u && (n = n[0], r = r[0]), l[0][0] = n, l[1][0] = r, o.invert && (n = o(n), r = o(r)), r < n && (a = n, n = r, r = a), f[0][0] = n | 0, f[1][0] = r | 0), u && (i = t[0], s = t[1], o && (i = i[1], s = s[1]), l[0][1] = i, l[1][1] = s, u.invert && (i = u(i), s = u(s)), s < i && (a = i, i = s, s = a), f[0][1] = i | 0, f[1][1] = s | 0), e) : (t = l || f, o && (n = t[0][0], r = t[1][0], l || (n = f[0][0], r = f[1][0], o.invert && (n = o.invert(n), r = o.invert(r)), r < n && (a = n, n = r, r = a))), u && (i = t[0][1], s = t[1][1], l || (i = f[0][1], s = f[1][1], u.invert && (i = u.invert(i), s = u.invert(s)), s < i && (a = i, i = s, s = a))), o && u ? [[n, i], [r, s]] : o ? [n, r] : u && [i, s]) }, e.clear = function () { return l = null, f[0][0] = f[0][1] = f[1][0] = f[1][1] = 0, e }, e.empty = function () { return o && f[0][0] === f[1][0] || u && f[0][1] === f[1][1] }, d3.rebind(e, s, "on") }; var eo = { n: "ns-resize", e: "ew-resize", s: "ns-resize", w: "ew-resize", nw: "nwse-resize", ne: "nesw-resize", se: "nwse-resize", sw: "nesw-resize" }, to = [["n", "e", "s", "w", "nw", "ne", "se", "sw"], ["e", "w"], ["n", "s"], []]; d3.behavior = {}, d3.behavior.drag = function () { function e() { this.on("mousedown.drag", t).on("touchstart.drag", t) } function t() { function e() { var e = o.parentNode; return f ? d3.touches(e).filter(function (e) { return e.identifier === f })[0] : d3.mouse(e) } function t() { if (!o.parentNode) return i(); var t = e(), n = t[0] - c[0], r = t[1] - c[1]; h |= n | r, c = t, M(), u({ type: "drag", x: t[0] + l[0], y: t[1] + l[1], dx: n, dy: r }) } function i() { u({ type: "dragend" }), h && (M(), d3.event.target === a && p.on("click.drag", s, !0)), p.on(f ? "touchmove.drag-" + f : "mousemove.drag", null).on(f ? "touchend.drag-" + f : "mouseup.drag", null) } function s() { M(), p.on("click.drag", null) } var o = this, u = n.of(o, arguments), a = d3.event.target, f = d3.event.touches && d3.event.changedTouches[0].identifier, l, c = e(), h = 0, p = d3.select(window).on(f ? "touchmove.drag-" + f : "mousemove.drag", t).on(f ? "touchend.drag-" + f : "mouseup.drag", i, !0); r ? (l = r.apply(o, arguments), l = [l.x - c[0], l.y - c[1]]) : l = [0, 0], f || M(), u({ type: "dragstart" }) } var n = D(e, "drag", "dragstart", "dragend"), r = null; return e.origin = function (t) { return arguments.length ? (r = t, e) : r }, d3.rebind(e, n, "on") }, d3.behavior.zoom = function () { function e() { this.on("mousedown.zoom", o).on("mousewheel.zoom", u).on("mousemove.zoom", a).on("DOMMouseScroll.zoom", u).on("dblclick.zoom", f).on("touchstart.zoom", l).on("touchmove.zoom", c).on("touchend.zoom", l) } function t(e) { return [(e[0] - h[0]) / d, (e[1] - h[1]) / d] } function n(e) { return [e[0] * d + h[0], e[1] * d + h[1]] } function r(e) { d = Math.max(m[0], Math.min(m[1], e)) } function i(e, t) { t = n(t), h[0] += e[0] - t[0], h[1] += e[1] - t[1] } function s(e) { b && b.domain(y.range().map(function (e) { return (e - h[0]) / d }).map(y.invert)), E && E.domain(w.range().map(function (e) { return (e - h[1]) / d }).map(w.invert)), d3.event.preventDefault(), e({ type: "zoom", scale: d, translate: h }) } function o() { function e() { f = 1, i(d3.mouse(o), c), s(u) } function n() { f && M(), l.on("mousemove.zoom", null).on("mouseup.zoom", null), f && d3.event.target === a && l.on("click.zoom", r, !0) } function r() { M(), l.on("click.zoom", null) } var o = this, u = g.of(o, arguments), a = d3.event.target, f = 0, l = d3.select(window).on("mousemove.zoom", e).on("mouseup.zoom", n), c = t(d3.mouse(o)); window.focus(), M() } function u() { p || (p = t(d3.mouse(this))), r(Math.pow(2, Rn() * .002) * d), i(d3.mouse(this), p), s(g.of(this, arguments)) } function a() { p = null } function f() { var e = d3.mouse(this), n = t(e); r(d3.event.shiftKey ? d / 2 : d * 2), i(e, n), s(g.of(this, arguments)) } function l() { var e = d3.touches(this), n = Date.now(); v = d, p = {}, e.forEach(function (e) { p[e.identifier] = t(e) }), M(); if (e.length === 1) { if (n - S < 500) { var o = e[0], u = t(e[0]); r(d * 2), i(o, u), s(g.of(this, arguments)) } S = n } } function c() { var e = d3.touches(this), t = e[0], n = p[t.identifier]; if (o = e[1]) { var o, u = p[o.identifier]; t = [(t[0] + o[0]) / 2, (t[1] + o[1]) / 2], n = [(n[0] + u[0]) / 2, (n[1] + u[1]) / 2], r(d3.event.scale * v) } i(t, n), S = null, s(g.of(this, arguments)) } var h = [0, 0], p, d = 1, v, m = ro, g = D(e, "zoom"), y, b, w, E, S; return e.translate = function (t) { return arguments.length ? (h = t.map(Number), e) : h }, e.scale = function (t) { return arguments.length ? (d = +t, e) : d }, e.scaleExtent = function (t) { return arguments.length ? (m = t == null ? ro : t.map(Number), e) : m }, e.x = function (t) { return arguments.length ? (b = t, y = t.copy(), e) : b }, e.y = function (t) { return arguments.length ? (E = t, w = t.copy(), e) : E }, d3.rebind(e, g, "on") }; var no, ro = [0, Infinity]; d3.layout = {}, d3.layout.bundle = function () { return function (e) { var t = [], n = -1, r = e.length; while (++n < r) t.push(Un(e[n])); return t } }, d3.layout.chord = function () { function e() { var e = {}, n = [], c = d3.range(o), h = [], p, d, v, m, g; r = [], i = [], p = 0, m = -1; while (++m < o) { d = 0, g = -1; while (++g < o) d += s[m][g]; n.push(d), h.push(d3.range(o)), p += d } a && c.sort(function (e, t) { return a(n[e], n[t]) }), f && h.forEach(function (e, t) { e.sort(function (e, n) { return f(s[t][e], s[t][n]) }) }), p = (2 * Math.PI - u * o) / p, d = 0, m = -1; while (++m < o) { v = d, g = -1; while (++g < o) { var y = c[m], b = h[y][g], w = s[y][b], E = d, S = d += w * p; e[y + "-" + b] = { index: y, subindex: b, startAngle: E, endAngle: S, value: w } } i[y] = { index: y, startAngle: v, endAngle: d, value: (d - v) / p }, d += u } m = -1; while (++m < o) { g = m - 1; while (++g < o) { var x = e[m + "-" + g], T = e[g + "-" + m]; (x.value || T.value) && r.push(x.value < T.value ? { source: T, target: x } : { source: x, target: T }) } } l && t() } function t() { r.sort(function (e, t) { return l((e.source.value + e.target.value) / 2, (t.source.value + t.target.value) / 2) }) } var n = {}, r, i, s, o, u = 0, a, f, l; return n.matrix = function (e) { return arguments.length ? (o = (s = e) && s.length, r = i = null, n) : s }, n.padding = function (e) { return arguments.length ? (u = e, r = i = null, n) : u }, n.sortGroups = function (e) { return arguments.length ? (a = e, r = i = null, n) : a }, n.sortSubgroups = function (e) { return arguments.length ? (f = e, r = null, n) : f }, n.sortChords = function (e) { return arguments.length ? (l = e, r && t(), n) : l }, n.chords = function () { return r || e(), r }, n.groups = function () { return i || e(), i }, n }, d3.layout.force = function () { function e(e) { return function (t, n, r, i, s) { if (t.point !== e) { var o = t.cx - e.x, u = t.cy - e.y, a = 1 / Math.sqrt(o * o + u * u); if ((i - n) * a < d) { var f = t.charge * a * a; return e.px -= o * f, e.py -= u * f, !0 } if (t.point && isFinite(a)) { var f = t.pointCharge * a * a; e.px -= o * f, e.py -= u * f } } return !t.charge } } function t(e) { e.px = d3.event.x, e.py = d3.event.y, n.resume() } var n = {}, r = d3.dispatch("start", "tick", "end"), s = [1, 1], o, a, f = .9, l = Qn, c = Gn, h = -30, p = .1, d = .8, v, m = [], g = [], y, b, w; return n.tick = function () { if ((a *= .99) < .005) return r.end({ type: "end", alpha: a = 0 }), !0; var t = m.length, n = g.length, i, o, u, l, c, d, v, E, S; for (o = 0; o < n; ++o) { u = g[o], l = u.source, c = u.target, E = c.x - l.x, S = c.y - l.y; if (d = E * E + S * S) d = a * b[o] * ((d = Math.sqrt(d)) - y[o]) / d, E *= d, S *= d, c.x -= E * (v = l.weight / (c.weight + l.weight)), c.y -= S * v, l.x += E * (v = 1 - v), l.y += S * v } if (v = a * p) { E = s[0] / 2, S = s[1] / 2, o = -1; if (v) while (++o < t) u = m[o], u.x += (E - u.x) * v, u.y += (S - u.y) * v } if (h) { Kn(i = d3.geom.quadtree(m), a, w), o = -1; while (++o < t) (u = m[o]).fixed || i.visit(e(u)) } o = -1; while (++o < t) u = m[o], u.fixed ? (u.x = u.px, u.y = u.py) : (u.x -= (u.px - (u.px = u.x)) * f, u.y -= (u.py - (u.py = u.y)) * f); r.tick({ type: "tick", alpha: a }) }, n.nodes = function (e) { return arguments.length ? (m = e, n) : m }, n.links = function (e) { return arguments.length ? (g = e, n) : g }, n.size = function (e) { return arguments.length ? (s = e, n) : s }, n.linkDistance = function (e) { return arguments.length ? (l = u(e), n) : l }, n.distance = n.linkDistance, n.linkStrength = function (e) { return arguments.length ? (c = u(e), n) : c }, n.friction = function (e) { return arguments.length ? (f = e, n) : f }, n.charge = function (e) { return arguments.length ? (h = typeof e == "function" ? e : +e, n) : h }, n.gravity = function (e) { return arguments.length ? (p = e, n) : p }, n.theta = function (e) { return arguments.length ? (d = e, n) : d }, n.alpha = function (e) { return arguments.length ? (a ? e > 0 ? a = e : a = 0 : e > 0 && (r.start({ type: "start", alpha: a = e }), d3.timer(n.tick)), n) : a }, n.start = function () { function e(e, n) { var i = t(r), s = -1, o = i.length, u; while (++s < o) if (!isNaN(u = i[s][e])) return u; return Math.random() * n } function t() { if (!p) { p = []; for (i = 0; i < o; ++i) p[i] = []; for (i = 0; i < u; ++i) { var e = g[i]; p[e.source.index].push(e.target), p[e.target.index].push(e.source) } } return p[r] } var r, i, o = m.length, u = g.length, a = s[0], f = s[1], p, d; for (r = 0; r < o; ++r) (d = m[r]).index = r, d.weight = 0; y = [], b = []; for (r = 0; r < u; ++r) d = g[r], typeof d.source == "number" && (d.source = m[d.source]), typeof d.target == "number" && (d.target = m[d.target]), y[r] = l.call(this, d, r), b[r] = c.call(this, d, r), ++d.source.weight, ++d.target.weight; for (r = 0; r < o; ++r) d = m[r], isNaN(d.x) && (d.x = e("x", a)), isNaN(d.y) && (d.y = e("y", f)), isNaN(d.px) && (d.px = d.x), isNaN(d.py) && (d.py = d.y); w = []; if (typeof h == "function") for (r = 0; r < o; ++r) w[r] = +h.call(this, m[r], r); else for (r = 0; r < o; ++r) w[r] = h; return n.resume() }, n.resume = function () { return n.alpha(.1) }, n.stop = function () { return n.alpha(0) }, n.drag = function () { o || (o = d3.behavior.drag().origin(i).on("dragstart", Xn).on("drag", t).on("dragend", Vn)), this.on("mouseover.force", $n).on("mouseout.force", Jn).call(o) }, d3.rebind(n, r, "on") }, d3.layout.partition = function () { function e(t, n, r, i) { var s = t.children; t.x = n, t.y = t.depth * i, t.dx = r, t.dy = i; if (s && (u = s.length)) { var o = -1, u, a, f; r = t.value ? r / t.value : 0; while (++o < u) e(a = s[o], n, f = a.value * r, i), n += f } } function t(e) { var n = e.children, r = 0; if (n && (s = n.length)) { var i = -1, s; while (++i < s) r = Math.max(r, t(n[i])) } return 1 + r } function n(n, s) { var o = r.call(this, n, s); return e(o[0], 0, i[0], i[1] / t(o[0])), o } var r = d3.layout.hierarchy(), i = [1, 1]; return n.size = function (e) { return arguments.length ? (i = e, n) : i }, fr(n, r) }, d3.layout.pie = function () { function e(s, o) { var u = s.map(function (n, r) { return +t.call(e, n, r) }), a = +(typeof r == "function" ? r.apply(this, arguments) : r), f = ((typeof i == "function" ? i.apply(this, arguments) : i) - r) / d3.sum(u), l = d3.range(s.length); n != null && l.sort(n === io ? function (e, t) { return u[t] - u[e] } : function (e, t) { return n(s[e], s[t]) }); var c = []; return l.forEach(function (e) { var t; c[e] = { data: s[e], value: t = u[e], startAngle: a, endAngle: a += t * f } }), c } var t = Number, n = io, r = 0, i = 2 * Math.PI; return e.value = function (n) { return arguments.length ? (t = n, e) : t }, e.sort = function (t) { return arguments.length ? (n = t, e) : n }, e.startAngle = function (t) { return arguments.length ? (r = t, e) : r }, e.endAngle = function (t) { return arguments.length ? (i = t, e) : i }, e }; var io = {}; d3.layout.stack = function () { function e(i, a) { var f = i.map(function (n, r) { return t.call(e, n, r) }), l = f.map(function (t, n) { return t.map(function (t, n) { return [o.call(e, t, n), u.call(e, t, n)] }) }), c = n.call(e, l, a); f = d3.permute(f, c), l = d3.permute(l, c); var h = r.call(e, l, a), p = f.length, d = f[0].length, v, m, g; for (m = 0; m < d; ++m) { s.call(e, f[0][m], g = h[m], l[0][m][1]); for (v = 1; v < p; ++v) s.call(e, f[v][m], g += l[v - 1][m][1], l[v][m][1]) } return i } var t = i, n = tr, r = nr, s = er, o = Yn, u = Zn; return e.values = function (n) { return arguments.length ? (t = n, e) : t }, e.order = function (t) { return arguments.length ? (n = typeof t == "function" ? t : so.get(t) || tr, e) : n }, e.offset = function (t) { return arguments.length ? (r = typeof t == "function" ? t : oo.get(t) || nr, e) : r }, e.x = function (t) { return arguments.length ? (o = t, e) : o }, e.y = function (t) { return arguments.length ? (u = t, e) : u }, e.out = function (t) { return arguments.length ? (s = t, e) : s }, e }; var so = d3.map({ "inside-out": function (e) { var t = e.length, n, r, i = e.map(rr), s = e.map(ir), o = d3.range(t).sort(function (e, t) { return i[e] - i[t] }), u = 0, a = 0, f = [], l = []; for (n = 0; n < t; ++n) r = o[n], u < a ? (u += s[r], f.push(r)) : (a += s[r], l.push(r)); return l.reverse().concat(f) }, reverse: function (e) { return d3.range(e.length).reverse() }, "default": tr }), oo = d3.map({ silhouette: function (e) { var t = e.length, n = e[0].length, r = [], i = 0, s, o, u, a = []; for (o = 0; o < n; ++o) { for (s = 0, u = 0; s < t; s++) u += e[s][o][1]; u > i && (i = u), r.push(u) } for (o = 0; o < n; ++o) a[o] = (i - r[o]) / 2; return a }, wiggle: function (e) { var t = e.length, n = e[0], r = n.length, i = 0, s, o, u, a, f, l, c, h, p, d = []; d[0] = h = p = 0; for (o = 1; o < r; ++o) { for (s = 0, a = 0; s < t; ++s) a += e[s][o][1]; for (s = 0, f = 0, c = n[o][0] - n[o - 1][0]; s < t; ++s) { for (u = 0, l = (e[s][o][1] - e[s][o - 1][1]) / (2 * c) ; u < s; ++u) l += (e[u][o][1] - e[u][o - 1][1]) / c; f += l * e[s][o][1] } d[o] = h -= a ? f / a * c : 0, h < p && (p = h) } for (o = 0; o < r; ++o) d[o] -= p; return d }, expand: function (e) { var t = e.length, n = e[0].length, r = 1 / t, i, s, o, u = []; for (s = 0; s < n; ++s) { for (i = 0, o = 0; i < t; i++) o += e[i][s][1]; if (o) for (i = 0; i < t; i++) e[i][s][1] /= o; else for (i = 0; i < t; i++) e[i][s][1] = r } for (s = 0; s < n; ++s) u[s] = 0; return u }, zero: nr }); d3.layout.histogram = function () { function e(e, s) { var o = [], u = e.map(n, this), a = r.call(this, u, s), f = i.call(this, a, u, s), l, s = -1, c = u.length, h = f.length - 1, p = t ? 1 : 1 / c, d; while (++s < h) l = o[s] = [], l.dx = f[s + 1] - (l.x = f[s]), l.y = 0; if (h > 0) { s = -1; while (++s < c) d = u[s], d >= a[0] && d <= a[1] && (l = o[d3.bisect(f, d, 1, h) - 1], l.y += p, l.push(e[s])) } return o } var t = !0, n = Number, r = ar, i = or; return e.value = function (t) { return arguments.length ? (n = t, e) : n }, e.range = function (t) { return arguments.length ? (r = u(t), e) : r }, e.bins = function (t) { return arguments.length ? (i = typeof t == "number" ? function (e) { return ur(e, t) } : u(t), e) : i }, e.frequency = function (n) { return arguments.length ? (t = !!n, e) : t }, e }, d3.layout.hierarchy = function () { function e(t, o, u) { var a = i.call(n, t, o), f = uo ? t : { data: t }; f.depth = o, u.push(f); if (a && (c = a.length)) { var l = -1, c, h = f.children = [], p = 0, d = o + 1, v; while (++l < c) v = e(a[l], d, u), v.parent = f, h.push(v), p += v.value; r && h.sort(r), s && (f.value = p) } else s && (f.value = +s.call(n, t, o) || 0); return f } function t(e, r) { var i = e.children, o = 0; if (i && (a = i.length)) { var u = -1, a, f = r + 1; while (++u < a) o += t(i[u], f) } else s && (o = +s.call(n, uo ? e : e.data, r) || 0); return s && (e.value = o), o } function n(t) { var n = []; return e(t, 0, n), n } var r = hr, i = lr, s = cr; return n.sort = function (e) { return arguments.length ? (r = e, n) : r }, n.children = function (e) { return arguments.length ? (i = e, n) : i }, n.value = function (e) { return arguments.length ? (s = e, n) : s }, n.revalue = function (e) { return t(e, 0), e }, n }; var uo = !1; d3.layout.pack = function () { function e(e, i) { var s = t.call(this, e, i), o = s[0]; o.x = 0, o.y = 0, Pr(o, function (e) { e.r = Math.sqrt(e.value) }), Pr(o, yr); var u = r[0], a = r[1], f = Math.max(2 * o.r / u, 2 * o.r / a); if (n > 0) { var l = n * f / 2; Pr(o, function (e) { e.r += l }), Pr(o, yr), Pr(o, function (e) { e.r -= l }), f = Math.max(2 * o.r / u, 2 * o.r / a) } return Er(o, u / 2, a / 2, 1 / f), s } var t = d3.layout.hierarchy().sort(dr), n = 0, r = [1, 1]; return e.size = function (t) { return arguments.length ? (r = t, e) : r }, e.padding = function (t) { return arguments.length ? (n = +t, e) : n }, fr(e, t) }, d3.layout.cluster = function () { function e(e, i) { var s = t.call(this, e, i), o = s[0], u, a = 0, f, l; Pr(o, function (e) { var t = e.children; t && t.length ? (e.x = Tr(t), e.y = xr(t)) : (e.x = u ? a += n(e, u) : 0, e.y = 0, u = e) }); var c = Nr(o), h = Cr(o), p = c.x - n(c, h) / 2, d = h.x + n(h, c) / 2; return Pr(o, function (e) { e.x = (e.x - p) / (d - p) * r[0], e.y = (1 - (o.y ? e.y / o.y : 1)) * r[1] }), s } var t = d3.layout.hierarchy().sort(null).value(null), n = kr, r = [1, 1]; return e.separation = function (t) { return arguments.length ? (n = t, e) : n }, e.size = function (t) { return arguments.length ? (r = t, e) : r }, fr(e, t) }, d3.layout.tree = function () { function e(e, i) { function s(e, t) { var r = e.children, i = e._tree; if (r && (o = r.length)) { var o, a = r[0], f, l = a, c, h = -1; while (++h < o) c = r[h], s(c, f), l = u(c, f, l), f = c; Hr(e); var p = .5 * (a._tree.prelim + c._tree.prelim); t ? (i.prelim = t._tree.prelim + n(e, t), i.mod = i.prelim - p) : i.prelim = p } else t && (i.prelim = t._tree.prelim + n(e, t)) } function o(e, t) { e.x = e._tree.prelim + t; var n = e.children; if (n && (i = n.length)) { var r = -1, i; t += e._tree.mod; while (++r < i) o(n[r], t) } } function u(e, t, r) { if (t) { var i = e, s = e, o = t, u = e.parent.children[0], a = i._tree.mod, f = s._tree.mod, l = o._tree.mod, c = u._tree.mod, h; while (o = Ar(o), i = Lr(i), o && i) u = Lr(u), s = Ar(s), s._tree.ancestor = e, h = o._tree.prelim + l - i._tree.prelim - a + n(o, i), h > 0 && (Br(jr(o, e, r), e, h), a += h, f += h), l += o._tree.mod, a += i._tree.mod, c += u._tree.mod, f += s._tree.mod; o && !Ar(s) && (s._tree.thread = o, s._tree.mod += l - f), i && !Lr(u) && (u._tree.thread = i, u._tree.mod += a - c, r = e) } return r } var a = t.call(this, e, i), f = a[0]; Pr(f, function (e, t) { e._tree = { ancestor: e, prelim: 0, mod: 0, change: 0, shift: 0, number: t ? t._tree.number + 1 : 0 } }), s(f), o(f, -f._tree.prelim); var l = Or(f, _r), c = Or(f, Mr), h = Or(f, Dr), p = l.x - n(l, c) / 2, d = c.x + n(c, l) / 2, v = h.depth || 1; return Pr(f, function (e) { e.x = (e.x - p) / (d - p) * r[0], e.y = e.depth / v * r[1], delete e._tree }), a } var t = d3.layout.hierarchy().sort(null).value(null), n = kr, r = [1, 1]; return e.separation = function (t) { return arguments.length ? (n = t, e) : n }, e.size = function (t) { return arguments.length ? (r = t, e) : r }, fr(e, t) }, d3.layout.treemap = function () { function e(e, t) { var n = -1, r = e.length, i, s; while (++n < r) s = (i = e[n]).value * (t < 0 ? 0 : t), i.area = isNaN(s) || s <= 0 ? 0 : s } function t(n) { var s = n.children; if (s && s.length) { var o = l(n), u = [], a = s.slice(), f, c = Infinity, h, p = Math.min(o.dx, o.dy), d; e(a, o.dx * o.dy / n.value), u.area = 0; while ((d = a.length) > 0) u.push(f = a[d - 1]), u.area += f.area, (h = r(u, p)) <= c ? (a.pop(), c = h) : (u.area -= u.pop().area, i(u, p, o, !1), p = Math.min(o.dx, o.dy), u.length = u.area = 0, c = Infinity); u.length && (i(u, p, o, !0), u.length = u.area = 0), s.forEach(t) } } function n(t) { var r = t.children; if (r && r.length) { var s = l(t), o = r.slice(), u, a = []; e(o, s.dx * s.dy / t.value), a.area = 0; while (u = o.pop()) a.push(u), a.area += u.area, u.z != null && (i(a, u.z ? s.dx : s.dy, s, !o.length), a.length = a.area = 0); r.forEach(n) } } function r(e, t) { var n = e.area, r, i = 0, s = Infinity, o = -1, u = e.length; while (++o < u) { if (!(r = e[o].area)) continue; r < s && (s = r), r > i && (i = r) } return n *= n, t *= t, n ? Math.max(t * i * p / n, n / (t * s * p)) : Infinity } function i(e, t, n, r) { var i = -1, s = e.length, o = n.x, a = n.y, f = t ? u(e.area / t) : 0, l; if (t == n.dx) { if (r || f > n.dy) f = n.dy; while (++i < s) l = e[i], l.x = o, l.y = a, l.dy = f, o += l.dx = Math.min(n.x + n.dx - o, f ? u(l.area / f) : 0); l.z = !0, l.dx += n.x + n.dx - o, n.y += f, n.dy -= f } else { if (r || f > n.dx) f = n.dx; while (++i < s) l = e[i], l.x = o, l.y = a, l.dx = f, a += l.dy = Math.min(n.y + n.dy - a, f ? u(l.area / f) : 0); l.z = !1, l.dy += n.y + n.dy - a, n.x += f, n.dx -= f } } function s(r) { var i = h || o(r), s = i[0]; return s.x = 0, s.y = 0, s.dx = a[0], s.dy = a[1], h && o.revalue(s), e([s], s.dx * s.dy / s.value), (h ? n : t)(s), c && (h = i), i } var o = d3.layout.hierarchy(), u = Math.round, a = [1, 1], f = null, l = Fr, c = !1, h, p = .5 * (1 + Math.sqrt(5)); return s.size = function (e) { return arguments.length ? (a = e, s) : a }, s.padding = function (e) { function t(t) { var n = e.call(s, t, t.depth); return n == null ? Fr(t) : Ir(t, typeof n == "number" ? [n, n, n, n] : n) } function n(t) { return Ir(t, e) } if (!arguments.length) return f; var r; return l = (f = e) == null ? Fr : (r = typeof e) === "function" ? t : r === "number" ? (e = [e, e, e, e], n) : n, s }, s.round = function (e) { return arguments.length ? (u = e ? Math.round : Number, s) : u != Number }, s.sticky = function (e) { return arguments.length ? (c = e, h = null, s) : c }, s.ratio = function (e) { return arguments.length ? (p = e, s) : p }, fr(s, o) }, d3.csv = qr(",", "text/csv"), d3.tsv = qr("	", "text/tab-separated-values"), d3.geo = {}; var ao = Math.PI / 180; d3.geo.azimuthal = function () { function e(e) { var n = e[0] * ao - s, o = e[1] * ao, f = Math.cos(n), l = Math.sin(n), c = Math.cos(o), h = Math.sin(o), p = t !== "orthographic" ? a * h + u * c * f : null, d, v = t === "stereographic" ? 1 / (1 + p) : t === "gnomonic" ? 1 / p : t === "equidistant" ? (d = Math.acos(p), d ? d / Math.sin(d) : 0) : t === "equalarea" ? Math.sqrt(2 / (1 + p)) : 1, m = v * c * l, g = v * (a * c * f - u * h); return [r * m + i[0], r * g + i[1]] } var t = "orthographic", n, r = 200, i = [480, 250], s, o, u, a; return e.invert = function (e) { var n = (e[0] - i[0]) / r, o = (e[1] - i[1]) / r, f = Math.sqrt(n * n + o * o), l = t === "stereographic" ? 2 * Math.atan(f) : t === "gnomonic" ? Math.atan(f) : t === "equidistant" ? f : t === "equalarea" ? 2 * Math.asin(.5 * f) : Math.asin(f), c = Math.sin(l), h = Math.cos(l); return [(s + Math.atan2(n * c, f * u * h + o * a * c)) / ao, Math.asin(h * a - (f ? o * c * u / f : 0)) / ao] }, e.mode = function (n) { return arguments.length ? (t = n + "", e) : t }, e.origin = function (t) { return arguments.length ? (n = t, s = n[0] * ao, o = n[1] * ao, u = Math.cos(o), a = Math.sin(o), e) : n }, e.scale = function (t) { return arguments.length ? (r = +t, e) : r }, e.translate = function (t) { return arguments.length ? (i = [+t[0], +t[1]], e) : i }, e.origin([0, 0]) }, d3.geo.albers = function () { function e(e) { var t = u * (ao * e[0] - o), n = Math.sqrt(a - 2 * u * Math.sin(ao * e[1])) / u; return [i * n * Math.sin(t) + s[0], i * (n * Math.cos(t) - f) + s[1]] } function t() { var t = ao * r[0], i = ao * r[1], s = ao * n[1], l = Math.sin(t), c = Math.cos(t); return o = ao * n[0], u = .5 * (l + Math.sin(i)), a = c * c + 2 * u * l, f = Math.sqrt(a - 2 * u * Math.sin(s)) / u, e } var n = [-98, 38], r = [29.5, 45.5], i = 1e3, s = [480, 250], o, u, a, f; return e.invert = function (e) { var t = (e[0] - s[0]) / i, n = (e[1] - s[1]) / i, r = f + n, l = Math.atan2(t, r), c = Math.sqrt(t * t + r * r); return [(o + l / u) / ao, Math.asin((a - c * c * u * u) / (2 * u)) / ao] }, e.origin = function (e) { return arguments.length ? (n = [+e[0], +e[1]], t()) : n }, e.parallels = function (e) { return arguments.length ? (r = [+e[0], +e[1]], t()) : r }, e.scale = function (t) { return arguments.length ? (i = +t, e) : i }, e.translate = function (t) { return arguments.length ? (s = [+t[0], +t[1]], e) : s }, t() }, d3.geo.albersUsa = function () { function e(e) { var s = e[0], o = e[1]; return (o > 50 ? n : s < -140 ? r : o < 21 ? i : t)(e) } var t = d3.geo.albers(), n = d3.geo.albers().origin([-160, 60]).parallels([55, 65]), r = d3.geo.albers().origin([-160, 20]).parallels([8, 18]), i = d3.geo.albers().origin([-60, 10]).parallels([8, 18]); return e.scale = function (s) { return arguments.length ? (t.scale(s), n.scale(s * .6), r.scale(s), i.scale(s * 1.5), e.translate(t.translate())) : t.scale() }, e.translate = function (s) { if (!arguments.length) return t.translate(); var o = t.scale() / 1e3, u = s[0], a = s[1]; return t.translate(s), n.translate([u - 400 * o, a + 170 * o]), r.translate([u - 190 * o, a + 200 * o]), i.translate([u + 580 * o, a + 430 * o]), e }, e.scale(t.scale()) }, d3.geo.bonne = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        function e(e) { var u = e[0] * ao - r, a = e[1] * ao - i; if (s) { var f = o + s - a, l = u * Math.cos(a) / f; u = f * Math.sin(l), a = f * Math.cos(l) - o } else u *= Math.cos(a), a *= -1; return [t * u + n[0], t * a + n[1]] } var t = 200, n = [480, 250], r, i, s, o; return e.invert = function (e) { var i = (e[0] - n[0]) / t, u = (e[1] - n[1]) / t; if (s) { var a = o + u, f = Math.sqrt(i * i + a * a); u = o + s - f, i = r + f * Math.atan2(i, a) / Math.cos(u) } else u *= -1, i /= Math.cos(u); return [i / ao, u / ao] }, e.parallel = function (t) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            return arguments.length ? (o = 1 / Math.tan]]></c>
                </r>
                <r>
                  <c><![CDATA[            (s = t * ao), e) : s / ao]]></c>
                </r>
                <r>
                  <c><![CDATA[        }, e.origin = function (t) { return arguments.length ? (r = t[0] * ao, i = t[1] * ao, e) : [r / ao, i / ao] }, e.scale = function (n) { return arguments.length ? (t = +n, e) : t }, e.translate = function (t) { return arguments.length ? (n = [+t[0], +t[1]], e) : n }, e.origin([0, 0]).parallel(45)]]></c>
                </r>
                <r>
                  <c><![CDATA[    }, d3.geo.equirectangular = function () { function e(e) { var r = e[0] / 360, i = -e[1] / 360; return [t * r + n[0], t * i + n[1]] } var t = 500, n = [480, 250]; return e.invert = function (e) { var r = (e[0] - n[0]) / t, i = (e[1] - n[1]) / t; return [360 * r, -360 * i] }, e.scale = function (n) { return arguments.length ? (t = +n, e) : t }, e.translate = function (t) { return arguments.length ? (n = [+t[0], +t[1]], e) : n }, e }, d3.geo.mercator = function () { function e(e) { var r = e[0] / 360, i = -(Math.log(Math.tan(Math.PI / 4 + e[1] * ao / 2)) / ao) / 360; return [t * r + n[0], t * Math.max(-0.5, Math.min(.5, i)) + n[1]] } var t = 500, n = [480, 250]; return e.invert = function (e) { var r = (e[0] - n[0]) / t, i = (e[1] - n[1]) / t; return [360 * r, 2 * Math.atan(Math.exp(-360 * i * ao)) / ao - 90] }, e.scale = function (n) { return arguments.length ? (t = +n, e) : t }, e.translate = function (t) { return arguments.length ? (n = [+t[0], +t[1]], e) : n }, e }, d3.geo.path = function () { function e(e, t) { typeof s == "function" && (o = Ur(s.apply(this, arguments))), f(e); var n = a.length ? a.join("") : null; return a = [], n } function t(e) { return u(e).join(",") } function n(e) { var t = i(e[0]), n = 0, r = e.length; while (++n < r) t -= i(e[n]); return t } function r(e) { var t = d3.geom.polygon(e[0].map(u)), n = t.area(), r = t.centroid(n < 0 ? (n *= -1, 1) : -1), i = r[0], s = r[1], o = n, a = 0, f = e.length; while (++a < f) t = d3.geom.polygon(e[a].map(u)), n = t.area(), r = t.centroid(n < 0 ? (n *= -1, 1) : -1), i -= r[0], s -= r[1], o -= n; return [i, s, 6 * o] } function i(e) { return Math.abs(d3.geom.polygon(e.map(u)).area()) } var s = 4.5, o = Ur(s), u = d3.geo.albersUsa(), a = [], f = Rr({ FeatureCollection: function (e) { var t = e.features, n = -1, r = t.length; while (++n < r) a.push(f(t[n].geometry)) }, Feature: function (e) { f(e.geometry) }, Point: function (e) { a.push("M", t(e.coordinates), o) }, MultiPoint: function (e) { var n = e.coordinates, r = -1, i = n.length; while (++r < i) a.push("M", t(n[r]), o) }, LineString: function (e) { var n = e.coordinates, r = -1, i = n.length; a.push("M"); while (++r < i) a.push(t(n[r]), "L"); a.pop() }, MultiLineString: function (e) { var n = e.coordinates, r = -1, i = n.length, s, o, u; while (++r < i) { s = n[r], o = -1, u = s.length, a.push("M"); while (++o < u) a.push(t(s[o]), "L"); a.pop() } }, Polygon: function (e) { var n = e.coordinates, r = -1, i = n.length, s, o, u; while (++r < i) { s = n[r], o = -1; if ((u = s.length - 1) > 0) { a.push("M"); while (++o < u) a.push(t(s[o]), "L"); a[a.length - 1] = "Z" } } }, MultiPolygon: function (e) { var n = e.coordinates, r = -1, i = n.length, s, o, u, f, l, c; while (++r < i) { s = n[r], o = -1, u = s.length; while (++o < u) { f = s[o], l = -1; if ((c = f.length - 1) > 0) { a.push("M"); while (++l < c) a.push(t(f[l]), "L"); a[a.length - 1] = "Z" } } } }, GeometryCollection: function (e) { var t = e.geometries, n = -1, r = t.length; while (++n < r) a.push(f(t[n])) } }), l = e.area = Rr({ FeatureCollection: function (e) { var t = 0, n = e.features, r = -1, i = n.length; while (++r < i) t += l(n[r]); return t }, Feature: function (e) { return l(e.geometry) }, Polygon: function (e) { return n(e.coordinates) }, MultiPolygon: function (e) { var t = 0, r = e.coordinates, i = -1, s = r.length; while (++i < s) t += n(r[i]); return t }, GeometryCollection: function (e) { var t = 0, n = e.geometries, r = -1, i = n.length; while (++r < i) t += l(n[r]); return t } }, 0), c = e.centroid = Rr({ Feature: function (e) { return c(e.geometry) }, Polygon: function (e) { var t = r(e.coordinates); return [t[0] / t[2], t[1] / t[2]] }, MultiPolygon: function (e) { var t = 0, n = e.coordinates, i, s = 0, o = 0, u = 0, a = -1, f = n.length; while (++a < f) i = r(n[a]), s += i[0], o += i[1], u += i[2]; return [s / u, o / u] } }); return e.projection = function (t) { return u = t, e }, e.pointRadius = function (t) { return typeof t == "function" ? s = t : (s = +t, o = Ur(s)), e }, e }, d3.geo.bounds = function (e) { var t = Infinity, n = Infinity, r = -Infinity, i = -Infinity; return zr(e, function (e, s) { e < t && (t = e), e > r && (r = e), s < n && (n = s), s > i && (i = s) }), [[t, n], [r, i]] }; var fo = { Feature: Wr, FeatureCollection: Xr, GeometryCollection: Vr, LineString: $r, MultiLineString: Jr, MultiPoint: $r, MultiPolygon: Kr, Point: Qr, Polygon: Gr }; d3.geo.circle = function () { function e() { } function t(e) { return a.distance(e) < u } function n(e) { var t = -1, n = e.length, i = [], s, o, f, l, c; while (++t < n) c = a.distance(f = e[t]), c < u ? (o && i.push(ti(o, f)((l - u) / (l - c))), i.push(f), s = o = null) : (o = f, !s && i.length && (i.push(ti(i[i.length - 1], o)((u - l) / (c - l))), s = o)), l = c; return s = e[0], o = i[0], o && f[0] === s[0] && f[1] === s[1] && (f[0] !== o[0] || f[1] !== o[1]) && i.push(o), r(i) } function r(e) { var t = 0, n = e.length, r, i, s = n ? [e[0]] : e, o, u = a.source(); while (++t < n) { o = a.source(e[t - 1])(e[t]).coordinates; for (r = 0, i = o.length; ++r < i;) s.push(o[r]) } return a.source(u), s } var s = [0, 0], o = 89.99, u = o * ao, a = d3.geo.greatArc().source(s).target(i); e.clip = function (e) { return typeof s == "function" && a.source(s.apply(this, arguments)), f(e) || null }; var f = Rr({ FeatureCollection: function (e) { var t = e.features.map(f).filter(i); return t && (e = Object.create(e), e.features = t, e) }, Feature: function (e) { var t = f(e.geometry); return t && (e = Object.create(e), e.geometry = t, e) }, Point: function (e) { return t(e.coordinates) && e }, MultiPoint: function (e) { var n = e.coordinates.filter(t); return n.length && { type: e.type, coordinates: n } }, LineString: function (e) { var t = n(e.coordinates); return t.length && (e = Object.create(e), e.coordinates = t, e) }, MultiLineString: function (e) { var t = e.coordinates.map(n).filter(function (e) { return e.length }); return t.length && (e = Object.create(e), e.coordinates = t, e) }, Polygon: function (e) { var t = e.coordinates.map(n); return t[0].length && (e = Object.create(e), e.coordinates = t, e) }, MultiPolygon: function (e) { var t = e.coordinates.map(function (e) { return e.map(n) }).filter(function (e) { return e[0].length }); return t.length && (e = Object.create(e), e.coordinates = t, e) }, GeometryCollection: function (e) { var t = e.geometries.map(f).filter(i); return t.length && (e = Object.create(e), e.geometries = t, e) } }); return e.origin = function (t) { return arguments.length ? (s = t, typeof s != "function" && a.source(s), e) : s }, e.angle = function (t) { return arguments.length ? (u = (o = +t) * ao, e) : o }, d3.rebind(e, a, "precision") }, d3.geo.greatArc = function () { function e() { var t = e.distance.apply(this, arguments), r = 0, u = s / t, a = [n]; while ((r += u) < 1) a.push(o(r)); return a.push(i), { type: "LineString", coordinates: a } } var t = Yr, n, r = Zr, i, s = 6 * ao, o = ei(); return e.distance = function () { return typeof t == "function" && o.source(n = t.apply(this, arguments)), typeof r == "function" && o.target(i = r.apply(this, arguments)), o.distance() }, e.source = function (r) { return arguments.length ? (t = r, typeof t != "function" && o.source(n = t), e) : t }, e.target = function (t) { return arguments.length ? (r = t, typeof r != "function" && o.target(i = r), e) : r }, e.precision = function (t) { return arguments.length ? (s = t * ao, e) : s / ao }, e }, d3.geo.greatCircle = d3.geo.circle, d3.geom = {}, d3.geom.contour = function (e, t) { var n = t || ni(e), r = [], i = n[0], s = n[1], o = 0, u = 0, a = NaN, f = NaN, l = 0; do l = 0, e(i - 1, s - 1) && (l += 1), e(i, s - 1) && (l += 2), e(i - 1, s) && (l += 4), e(i, s) && (l += 8), l === 6 ? (o = f === -1 ? -1 : 1, u = 0) : l === 9 ? (o = 0, u = a === 1 ? -1 : 1) : (o = lo[l], u = co[l]), o != a && u != f && (r.push([i, s]), a = o, f = u), i += o, s += u; while (n[0] != i || n[1] != s); return r }; var lo = [1, 0, 1, 1, -1, 0, -1, 1, 0, 0, 0, 0, -1, 0, -1, NaN], co = [0, -1, 0, 0, 0, -1, 0, 0, 1, -1, 1, 1, 0, -1, 0, NaN]; d3.geom.hull = function (e) { if (e.length < 3) return []; var t = e.length, n = t - 1, r = [], i = [], s, o, u = 0, a, f, l, c, h, p, d, v; for (s = 1; s < t; ++s) e[s][1] < e[u][1] ? u = s : e[s][1] == e[u][1] && (u = e[s][0] < e[u][0] ? s : u); for (s = 0; s < t; ++s) { if (s === u) continue; f = e[s][1] - e[u][1], a = e[s][0] - e[u][0], r.push({ angle: Math.atan2(f, a), index: s }) } r.sort(function (e, t) { return e.angle - t.angle }), d = r[0].angle, p = r[0].index, h = 0; for (s = 1; s < n; ++s) o = r[s].index, d == r[s].angle ? (a = e[p][0] - e[u][0], f = e[p][1] - e[u][1], l = e[o][0] - e[u][0], c = e[o][1] - e[u][1], a * a + f * f >= l * l + c * c ? r[s].index = -1 : (r[h].index = -1, d = r[s].angle, h = s, p = o)) : (d = r[s].angle, h = s, p = o); i.push(u); for (s = 0, o = 0; s < 2; ++o) r[o].index !== -1 && (i.push(r[o].index), s++); v = i.length; for (; o < n; ++o) { if (r[o].index === -1) continue; while (!ri(i[v - 2], i[v - 1], r[o].index, e))--v; i[v++] = r[o].index } var m = []; for (s = 0; s < v; ++s) m.push(e[i[s]]); return m }, d3.geom.polygon = function (e) { return e.area = function () { var t = 0, n = e.length, r = e[n - 1][0] * e[0][1], i = e[n - 1][1] * e[0][0]; while (++t < n) r += e[t - 1][0] * e[t][1], i += e[t - 1][1] * e[t][0]; return (i - r) * .5 }, e.centroid = function (t) { var n = -1, r = e.length, i = 0, s = 0, o, u = e[r - 1], a; arguments.length || (t = -1 / (6 * e.area())); while (++n < r) o = u, u = e[n], a = o[0] * u[1] - u[0] * o[1], i += (o[0] + u[0]) * a, s += (o[1] + u[1]) * a; return [i * t, s * t] }, e.clip = function (t) { var n, r = -1, i = e.length, s, o, u = e[i - 1], a, f, l; while (++r < i) { n = t.slice(), t.length = 0, a = e[r], f = n[(o = n.length) - 1], s = -1; while (++s < o) l = n[s], ii(l, u, a) ? (ii(f, u, a) || t.push(si(f, l, u, a)), t.push(l)) : ii(f, u, a) && t.push(si(f, l, u, a)), f = l; u = a } return t }, e }, d3.geom.voronoi = function (e) { var t = e.map(function () { return [] }); return oi(e, function (e) { var n, r, i, s, o, u; e.a === 1 && e.b >= 0 ? (n = e.ep.r, r = e.ep.l) : (n = e.ep.l, r = e.ep.r), e.a === 1 ? (o = n ? n.y : -1e6, i = e.c - e.b * o, u = r ? r.y : 1e6, s = e.c - e.b * u) : (i = n ? n.x : -1e6, o = e.c - e.a * i, s = r ? r.x : 1e6, u = e.c - e.a * s); var a = [i, o], f = [s, u]; t[e.region.l.index].push(a, f), t[e.region.r.index].push(a, f) }), t.map(function (t, n) { var r = e[n][0], i = e[n][1]; return t.forEach(function (e) { e.angle = Math.atan2(e[0] - r, e[1] - i) }), t.sort(function (e, t) { return e.angle - t.angle }).filter(function (e, n) { return !n || e.angle - t[n - 1].angle > 1e-10 }) }) }; var ho = { l: "r", r: "l" }; d3.geom.delaunay = function (e) { var t = e.map(function () { return [] }), n = []; return oi(e, function (n) { t[n.region.l.index].push(e[n.region.r.index]) }), t.forEach(function (t, r) { var i = e[r], s = i[0], o = i[1]; t.forEach(function (e) { e.angle = Math.atan2(e[0] - s, e[1] - o) }), t.sort(function (e, t) { return e.angle - t.angle }); for (var u = 0, a = t.length - 1; u < a; u++) n.push([i, t[u], t[u + 1]]) }), n }, d3.geom.quadtree = function (e, t, n, r, i) { function s(e, t, n, r, i, s) { if (isNaN(t.x) || isNaN(t.y)) return; if (e.leaf) { var u = e.point; u ? Math.abs(u.x - t.x) + Math.abs(u.y - t.y) < .01 ? o(e, t, n, r, i, s) : (e.point = null, o(e, u, n, r, i, s), o(e, t, n, r, i, s)) : e.point = t } else o(e, t, n, r, i, s) } function o(e, t, n, r, i, o) { var u = (n + i) * .5, a = (r + o) * .5, f = t.x >= u, l = t.y >= a, c = (l << 1) + f; e.leaf = !1, e = e.nodes[c] || (e.nodes[c] = ui()), f ? n = u : i = u, l ? r = a : o = a, s(e, t, n, r, i, o) } var u, a = -1, f = e.length; f && isNaN(e[0].x) && (e = e.map(fi)); if (arguments.length < 5) if (arguments.length === 3) i = r = n, n = t; else { t = n = Infinity, r = i = -Infinity; while (++a < f) u = e[a], u.x < t && (t = u.x), u.y < n && (n = u.y), u.x > r && (r = u.x), u.y > i && (i = u.y); var l = r - t, c = i - n; l > c ? i = n + l : r = t + c } var h = ui(); return h.add = function (e) { s(h, e, t, n, r, i) }, h.visit = function (e) { ai(e, h, t, n, r, i) }, e.forEach(h.add), h }, d3.time = {}; var po = Date, vo = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]; li.prototype = { getDate: function () { return this._.getUTCDate() }, getDay: function () { return this._.getUTCDay() }, getFullYear: function () { return this._.getUTCFullYear() }, getHours: function () { return this._.getUTCHours() }, getMilliseconds: function () { return this._.getUTCMilliseconds() }, getMinutes: function () { return this._.getUTCMinutes() }, getMonth: function () { return this._.getUTCMonth() }, getSeconds: function () { return this._.getUTCSeconds() }, getTime: function () { return this._.getTime() }, getTimezoneOffset: function () { return 0 }, valueOf: function () { return this._.valueOf() }, setDate: function () { mo.setUTCDate.apply(this._, arguments) }, setDay: function () { mo.setUTCDay.apply(this._, arguments) }, setFullYear: function () { mo.setUTCFullYear.apply(this._, arguments) }, setHours: function () { mo.setUTCHours.apply(this._, arguments) }, setMilliseconds: function () { mo.setUTCMilliseconds.apply(this._, arguments) }, setMinutes: function () { mo.setUTCMinutes.apply(this._, arguments) }, setMonth: function () { mo.setUTCMonth.apply(this._, arguments) }, setSeconds: function () { mo.setUTCSeconds.apply(this._, arguments) }, setTime: function () { mo.setTime.apply(this._, arguments) } }; var mo = Date.prototype, go = "%a %b %e %H:%M:%S %Y", yo = "%m/%d/%y", bo = "%H:%M:%S", wo = vo, Eo = wo.map(ci), So = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], xo = So.map(ci); d3.time.format = function (e) { function t(t) { var r = [], i = -1, s = 0, o, u; while (++i < n) e.charCodeAt(i) == 37 && (r.push(e.substring(s, i), (u = Po[o = e.charAt(++i)]) ? u(t) : o), s = i + 1); return r.push(e.substring(s, i)), r.join("") } var n = e.length; return t.parse = function (t) { var n = { y: 1900, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0 }, r = hi(n, e, t, 0); if (r != t.length) return null; "p" in n && (n.H = n.H % 12 + n.p * 12); var i = new po; return i.setFullYear(n.y, n.m, n.d), i.setHours(n.H, n.M, n.S, n.L), i }, t.toString = function () { return e }, t }; var To = d3.format("02d"), No = d3.format("03d"), Co = d3.format("04d"), ko = d3.format("2d"), Lo = pi(wo), Ao = pi(Eo), Oo = pi(So), Mo = di(So), _o = pi(xo), Do = di(xo), Po = { a: function (e) { return Eo[e.getDay()] }, A: function (e) { return wo[e.getDay()] }, b: function (e) { return xo[e.getMonth()] }, B: function (e) { return So[e.getMonth()] }, c: d3.time.format(go), d: function (e) { return To(e.getDate()) }, e: function (e) { return ko(e.getDate()) }, H: function (e) { return To(e.getHours()) }, I: function (e) { return To(e.getHours() % 12 || 12) }, j: function (e) { return No(1 + d3.time.dayOfYear(e)) }, L: function (e) { return No(e.getMilliseconds()) }, m: function (e) { return To(e.getMonth() + 1) }, M: function (e) { return To(e.getMinutes()) }, p: function (e) { return e.getHours() >= 12 ? "PM" : "AM" }, S: function (e) { return To(e.getSeconds()) }, U: function (e) { return To(d3.time.sundayOfYear(e)) }, w: function (e) { return e.getDay() }, W: function (e) { return To(d3.time.mondayOfYear(e)) }, x: d3.time.format(yo), X: d3.time.format(bo), y: function (e) { return To(e.getFullYear() % 100) }, Y: function (e) { return Co(e.getFullYear() % 1e4) }, Z: _i, "%": function (e) { return "%" } }, Ho = { a: vi, A: mi, b: gi, B: yi, c: bi, d: Ci, e: Ci, H: ki, I: ki, L: Oi, m: Ni, M: Li, p: Mi, S: Ai, x: wi, X: Ei, y: xi, Y: Si }, Bo = /^\s*\d+/, jo = d3.map({ am: 0, pm: 1 }); d3.time.format.utc = function (e) { function t(e) { try { po = li; var t = new po; return t._ = e, n(t) } finally { po = Date } } var n = d3.time.format(e); return t.parse = function (e) { try { po = li; var t = n.parse(e); return t && t._ } finally { po = Date } }, t.toString = n.toString, t }; var Fo = d3.time.format.utc("%Y-%m-%dT%H:%M:%S.%LZ"); d3.time.format.iso = Date.prototype.toISOString ? Di : Fo, Di.parse = function (e) { var t = new Date(e); return isNaN(t) ? null : t }, Di.toString = Fo.toString, d3.time.second = Pi(function (e) { return new po(Math.floor(e / 1e3) * 1e3) }, function (e, t) { e.setTime(e.getTime() + Math.floor(t) * 1e3) }, function (e) { return e.getSeconds() }), d3.time.seconds = d3.time.second.range, d3.time.seconds.utc = d3.time.second.utc.range, d3.time.minute = Pi(function (e) { return new po(Math.floor(e / 6e4) * 6e4) }, function (e, t) { e.setTime(e.getTime() + Math.floor(t) * 6e4) }, function (e) { return e.getMinutes() }), d3.time.minutes = d3.time.minute.range, d3.time.minutes.utc = d3.time.minute.utc.range, d3.time.hour = Pi(function (e) { var t = e.getTimezoneOffset() / 60; return new po((Math.floor(e / 36e5 - t) + t) * 36e5) }, function (e, t) { e.setTime(e.getTime() + Math.floor(t) * 36e5) }, function (e) { return e.getHours() }), d3.time.hours = d3.time.hour.range, d3.time.hours.utc = d3.time.hour.utc.range, d3.time.day = Pi(function (e) { var t = new po(1970, 0); return t.setFullYear(e.getFullYear(), e.getMonth(), e.getDate()), t }, function (e, t) { e.setDate(e.getDate() + t) }, function (e) { return e.getDate() - 1 }), d3.time.days = d3.time.day.range, d3.time.days.utc = d3.time.day.utc.range, d3.time.dayOfYear = function (e) { var t = d3.time.year(e); return Math.floor((e - t - (e.getTimezoneOffset() - t.getTimezoneOffset()) * 6e4) / 864e5) }, vo.forEach(function (e, t) { e = e.toLowerCase(), t = 7 - t; var n = d3.time[e] = Pi(function (e) { return (e = d3.time.day(e)).setDate(e.getDate() - (e.getDay() + t) % 7), e }, function (e, t) { e.setDate(e.getDate() + Math.floor(t) * 7) }, function (e) { var n = d3.time.year(e).getDay(); return Math.floor((d3.time.dayOfYear(e) + (n + t) % 7) / 7) - (n !== t) }); d3.time[e + "s"] = n.range, d3.time[e + "s"].utc = n.utc.range, d3.time[e + "OfYear"] = function (e) { var n = d3.time.year(e).getDay(); return Math.floor((d3.time.dayOfYear(e) + (n + t) % 7) / 7) } }), d3.time.week = d3.time.sunday, d3.time.weeks = d3.time.sunday.range, d3.time.weeks.utc = d3.time.sunday.utc.range, d3.time.weekOfYear = d3.time.sundayOfYear, d3.time.month = Pi(function (e) { return e = d3.time.day(e), e.setDate(1), e }, function (e, t) { e.setMonth(e.getMonth() + t) }, function (e) { return e.getMonth() }), d3.time.months = d3.time.month.range, d3.time.months.utc = d3.time.month.utc.range, d3.time.year = Pi(function (e) { return e = d3.time.day(e), e.setMonth(0, 1), e }, function (e, t) { e.setFullYear(e.getFullYear() + t) }, function (e) { return e.getFullYear() }), d3.time.years = d3.time.year.range, d3.time.years.utc = d3.time.year.utc.range; var Io = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6], qo = [[d3.time.second, 1], [d3.time.second, 5], [d3.time.second, 15], [d3.time.second, 30], [d3.time.minute, 1], [d3.time.minute, 5], [d3.time.minute, 15], [d3.time.minute, 30], [d3.time.hour, 1], [d3.time.hour, 3], [d3.time.hour, 6], [d3.time.hour, 12], [d3.time.day, 1], [d3.time.day, 2], [d3.time.week, 1], [d3.time.month, 1], [d3.time.month, 3], [d3.time.year, 1]], Ro = [[d3.time.format("%Y"), function (e) { return !0 }], [d3.time.format("%B"), function (e) { return e.getMonth() }], [d3.time.format("%b %d"), function (e) { return e.getDate() != 1 }], [d3.time.format("%a %d"), function (e) { return e.getDay() && e.getDate() != 1 }], [d3.time.format("%I %p"), function (e) { return e.getHours() }], [d3.time.format("%I:%M"), function (e) { return e.getMinutes() }], [d3.time.format(":%S"), function (e) { return e.getSeconds() }], [d3.time.format(".%L"), function (e) { return e.getMilliseconds() }]], Uo = d3.scale.linear(), zo = Ii(Ro); qo.year = function (e, t) { return Uo.domain(e.map(Ri)).ticks(t).map(qi) }, d3.time.scale = function () { return Bi(d3.scale.linear(), qo, zo) }; var Wo = qo.map(function (e) { return [e[0].utc, e[1]] }), Xo = [[d3.time.format.utc("%Y"), function (e) { return !0 }], [d3.time.format.utc("%B"), function (e) { return e.getUTCMonth() }], [d3.time.format.utc("%b %d"), function (e) { return e.getUTCDate() != 1 }], [d3.time.format.utc("%a %d"), function (e) { return e.getUTCDay() && e.getUTCDate() != 1 }], [d3.time.format.utc("%I %p"), function (e) { return e.getUTCHours() }], [d3.time.format.utc("%I:%M"), function (e) { return e.getUTCMinutes() }], [d3.time.format.utc(":%S"), function (e) { return e.getUTCSeconds() }], [d3.time.format.utc(".%L"), function (e) { return e.getUTCMilliseconds() }]], Vo = Ii(Xo); Wo.year = function (e, t) { return Uo.domain(e.map(zi)).ticks(t).map(Ui) }, d3.time.scale.utc = function () { return Bi(d3.scale.linear(), Wo, Vo) }]]></c>
                </r>
                <r>
                  <c>})();&lt;/script&gt;</c>
                </r>
                <r>
                  <c><![CDATA[    <script>(function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[    var nv = window.nv || {}; nv.version = "1.1.13b"; nv.dev = true; window.nv = nv; nv.tooltip = {}; nv.utils = nv.utils || {}; nv.models = {}; nv.charts = {}; nv.graphs = []; nv.logs = {}; nv.dispatch = d3.dispatch("render_start", "render_end"); if (nv.dev) { nv.dispatch.on("render_start", function (e) { nv.logs.startTime = +new Date }); nv.dispatch.on("render_end", function (e) { nv.logs.endTime = +new Date; nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime; nv.log("total", nv.logs.totalTime) }) } nv.log = function () { if (nv.dev && console.log && console.log.apply) console.log.apply(console, arguments); else if (nv.dev && typeof console.log == "function" && Function.prototype.bind) { var log = Function.prototype.bind.call(console.log, console); log.apply(console, arguments) } return arguments[arguments.length - 1] }; nv.render = function render(step) { step = step || 1; nv.render.active = true; nv.dispatch.render_start(); setTimeout(function () { var chart, graph; for (var i = 0; i < step && (graph = nv.render.queue[i]) ; i++) { chart = graph.generate(); if (typeof graph.callback == typeof Function) graph.callback(chart); nv.graphs.push(chart) } nv.render.queue.splice(0, i); if (nv.render.queue.length) setTimeout(arguments.callee, 0); else { nv.render.active = false; nv.dispatch.render_end() } }, 0) }; nv.render.active = false; nv.render.queue = []; nv.addGraph = function (obj) { if (typeof arguments[0] === typeof Function) obj = { generate: arguments[0], callback: arguments[1] }; nv.render.queue.push(obj); if (!nv.render.active) nv.render() }; nv.identity = function (d) { return d }; nv.strip = function (s) { return s.replace(/(\s|&)/g, "") }; function daysInMonth(month, year) { return new Date(year, month + 1, 0).getDate() } function d3_time_range(floor, step, number) { return function (t0, t1, dt) { var time = floor(t0), times = []; if (time < t0) step(time); if (dt > 1) { while (time < t1) { var date = new Date(+time); if (number(date) % dt === 0) times.push(date); step(time) } } else { while (time < t1) { times.push(new Date(+time)); step(time) } } return times } } d3.time.monthEnd = function (date) { return new Date(date.getFullYear(), date.getMonth(), 0) }; d3.time.monthEnds = d3_time_range(d3.time.monthEnd, function (date) { date.setUTCDate(date.getUTCDate() + 1); date.setDate(daysInMonth(date.getMonth() + 1, date.getFullYear())) }, function (date) { return date.getMonth() }); nv.interactiveGuideline = function () { "use strict"; var tooltip = nv.models.tooltip(); var width = null, height = null, margin = { left: 0, top: 0 }, xScale = d3.scale.linear(), yScale = d3.scale.linear(), dispatch = d3.dispatch("elementMousemove", "elementMouseout", "elementDblclick"), showGuideLine = true, svgContainer = null; var isMSIE = navigator.userAgent.indexOf("MSIE") !== -1; function layer(selection) { selection.each(function (data) { var container = d3.select(this); var availableWidth = width || 960, availableHeight = height || 400; var wrap = container.selectAll("g.nv-wrap.nv-interactiveLineLayer").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", " nv-wrap nv-interactiveLineLayer"); wrapEnter.append("g").attr("class", "nv-interactiveGuideLine"); if (!svgContainer) { return } function mouseHandler() { var d3mouse = d3.mouse(this); var mouseX = d3mouse[0]; var mouseY = d3mouse[1]; var subtractMargin = true; var mouseOutAnyReason = false; if (isMSIE) { mouseX = d3.event.offsetX; mouseY = d3.event.offsetY; if (d3.event.target.tagName !== "svg") subtractMargin = false; if (d3.event.target.className.baseVal.match("nv-legend")) mouseOutAnyReason = true } if (subtractMargin) { mouseX -= margin.left; mouseY -= margin.top } if (mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) { if (isMSIE) { if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass)) { return } } dispatch.elementMouseout({ mouseX: mouseX, mouseY: mouseY }); layer.renderGuideLine(null); return } var pointXValue = xScale.invert(mouseX); dispatch.elementMousemove({ mouseX: mouseX, mouseY: mouseY, pointXValue: pointXValue }); if (d3.event.type === "dblclick") { dispatch.elementDblclick({ mouseX: mouseX, mouseY: mouseY, pointXValue: pointXValue }) } } svgContainer.on("mousemove", mouseHandler, true).on("mouseout", mouseHandler, true).on("dblclick", mouseHandler); layer.renderGuideLine = function (x) { if (!showGuideLine) return; var line = wrap.select(".nv-interactiveGuideLine").selectAll("line").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String); line.enter().append("line").attr("class", "nv-guideline").attr("x1", function (d) { return d }).attr("x2", function (d) { return d }).attr("y1", availableHeight).attr("y2", 0); line.exit().remove() } }) } layer.dispatch = dispatch; layer.tooltip = tooltip; layer.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return layer }; layer.width = function (_) { if (!arguments.length) return width; width = _; return layer }; layer.height = function (_) { if (!arguments.length) return height; height = _; return layer }; layer.xScale = function (_) { if (!arguments.length) return xScale; xScale = _; return layer }; layer.showGuideLine = function (_) { if (!arguments.length) return showGuideLine; showGuideLine = _; return layer }; layer.svgContainer = function (_) { if (!arguments.length) return svgContainer; svgContainer = _; return layer }; return layer }; nv.interactiveBisect = function (values, searchVal, xAccessor) { "use strict"; if (!values instanceof Array) return null; if (typeof xAccessor !== "function") xAccessor = function (d, i) { return d.x }; var bisect = d3.bisector(xAccessor).left; var index = d3.max([0, bisect(values, searchVal) - 1]); var currentValue = xAccessor(values[index], index); if (typeof currentValue === "undefined") currentValue = index; if (currentValue === searchVal) return index; var nextIndex = d3.min([index + 1, values.length - 1]); var nextValue = xAccessor(values[nextIndex], nextIndex); if (typeof nextValue === "undefined") nextValue = nextIndex; if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) return index; else return nextIndex }; nv.nearestValueIndex = function (values, searchVal, threshold) { "use strict"; var yDistMax = Infinity, indexToHighlight = null; values.forEach(function (d, i) { var delta = Math.abs(searchVal - d); if (delta <= yDistMax && delta < threshold) { yDistMax = delta; indexToHighlight = i } }); return indexToHighlight }; (function () { "use strict"; window.nv.tooltip = {}; window.nv.models.tooltip = function () { var content = null, data = null, gravity = "w", distance = 50, snapDistance = 25, fixedTop = null, classes = null, chartContainer = null, tooltipElem = null, position = { left: null, top: null }, enabled = true, id = "nvtooltip-" + Math.floor(Math.random() * 1e5); var nvPointerEventsClass = "nv-pointer-events-none"; var valueFormatter = function (d, i) { return d }; var headerFormatter = function (d) { return d }; var contentGenerator = function (d) { if (content != null) return content; if (d == null) return ""; var table = d3.select(document.createElement("table")); var theadEnter = table.selectAll("thead").data([d]).enter().append("thead"); theadEnter.append("tr").append("td").attr("colspan", 3).append("strong").classed("x-value", true).html(headerFormatter(d.value)); var tbodyEnter = table.selectAll("tbody").data([d]).enter().append("tbody"); var trowEnter = tbodyEnter.selectAll("tr").data(function (p) { return p.series }).enter().append("tr").classed("highlight", function (p) { return p.highlight }); trowEnter.append("td").classed("legend-color-guide", true).append("div").style("background-color", function (p) { return p.color }); trowEnter.append("td").classed("key", true).html(function (p) { return p.key }); trowEnter.append("td").classed("value", true).html(function (p, i) { return valueFormatter(p.value, i) }); trowEnter.selectAll("td").each(function (p) { if (p.highlight) { var opacityScale = d3.scale.linear().domain([0, 1]).range(["#fff", p.color]); var opacity = .6; d3.select(this).style("border-bottom-color", opacityScale(opacity)).style("border-top-color", opacityScale(opacity)) } }); var html = table.node().outerHTML; if (d.footer !== undefined) html += "<div class='footer'>" + d.footer + "</div>"; return html }; var dataSeriesExists = function (d) { if (d && d.series && d.series.length > 0) return true; return false }; function convertViewBoxRatio() { if (chartContainer) { var svg = d3.select(chartContainer); if (svg.node().tagName !== "svg") { svg = svg.select("svg") } var viewBox = svg.node() ? svg.attr("viewBox") : null; if (viewBox) { viewBox = viewBox.split(" "); var ratio = parseInt(svg.style("width")) / viewBox[2]; position.left = position.left * ratio; position.top = position.top * ratio } } } function getTooltipContainer(newContent) { var body; if (chartContainer) body = d3.select(chartContainer); else body = d3.select("body"); var container = body.select(".nvtooltip"); if (container.node() === null) { container = body.append("div").attr("class", "nvtooltip " + (classes ? classes : "xy-tooltip")).attr("id", id) } container.node().innerHTML = newContent; container.style("top", 0).style("left", 0).style("opacity", 0); container.selectAll("div, table, td, tr").classed(nvPointerEventsClass, true); container.classed(nvPointerEventsClass, true); return container.node() } function nvtooltip() { if (!enabled) return; if (!dataSeriesExists(data)) return; convertViewBoxRatio(); var left = position.left; var top = fixedTop != null ? fixedTop : position.top; var container = getTooltipContainer(contentGenerator(data)); tooltipElem = container; if (chartContainer) { var svgComp = chartContainer.getElementsByTagName("svg")[0]; var boundRect = svgComp ? svgComp.getBoundingClientRect() : chartContainer.getBoundingClientRect(); var svgOffset = { left: 0, top: 0 }; if (svgComp) { var svgBound = svgComp.getBoundingClientRect(); var chartBound = chartContainer.getBoundingClientRect(); var svgBoundTop = svgBound.top; if (svgBoundTop < 0) { var containerBound = chartContainer.getBoundingClientRect(); svgBoundTop = Math.abs(svgBoundTop) > containerBound.height ? 0 : svgBoundTop } svgOffset.top = Math.abs(svgBoundTop - chartBound.top); svgOffset.left = Math.abs(svgBound.left - chartBound.left) } left += chartContainer.offsetLeft + svgOffset.left - 2 * chartContainer.scrollLeft; top += chartContainer.offsetTop + svgOffset.top - 2 * chartContainer.scrollTop } if (snapDistance && snapDistance > 0) { top = Math.floor(top / snapDistance) * snapDistance } nv.tooltip.calcTooltipPosition([left, top], gravity, distance, container); return nvtooltip } nvtooltip.nvPointerEventsClass = nvPointerEventsClass; nvtooltip.content = function (_) { if (!arguments.length) return content; content = _; return nvtooltip }; nvtooltip.tooltipElem = function () { return tooltipElem }; nvtooltip.contentGenerator = function (_) { if (!arguments.length) return contentGenerator; if (typeof _ === "function") { contentGenerator = _ } return nvtooltip }; nvtooltip.data = function (_) { if (!arguments.length) return data; data = _; return nvtooltip }; nvtooltip.gravity = function (_) { if (!arguments.length) return gravity; gravity = _; return nvtooltip }; nvtooltip.distance = function (_) { if (!arguments.length) return distance; distance = _; return nvtooltip }; nvtooltip.snapDistance = function (_) { if (!arguments.length) return snapDistance; snapDistance = _; return nvtooltip }; nvtooltip.classes = function (_) { if (!arguments.length) return classes; classes = _; return nvtooltip }; nvtooltip.chartContainer = function (_) { if (!arguments.length) return chartContainer; chartContainer = _; return nvtooltip }; nvtooltip.position = function (_) { if (!arguments.length) return position; position.left = typeof _.left !== "undefined" ? _.left : position.left; position.top = typeof _.top !== "undefined" ? _.top : position.top; return nvtooltip }; nvtooltip.fixedTop = function (_) { if (!arguments.length) return fixedTop; fixedTop = _; return nvtooltip }; nvtooltip.enabled = function (_) { if (!arguments.length) return enabled; enabled = _; return nvtooltip }; nvtooltip.valueFormatter = function (_) { if (!arguments.length) return valueFormatter; if (typeof _ === "function") { valueFormatter = _ } return nvtooltip }; nvtooltip.headerFormatter = function (_) { if (!arguments.length) return headerFormatter; if (typeof _ === "function") { headerFormatter = _ } return nvtooltip }; nvtooltip.id = function () { return id }; return nvtooltip }; nv.tooltip.show = function (pos, content, gravity, dist, parentContainer, classes) { var container = document.createElement("div"); container.className = "nvtooltip " + (classes ? classes : "xy-tooltip"); var body = parentContainer; if (!parentContainer || parentContainer.tagName.match(/g|svg/i)) { body = document.getElementsByTagName("body")[0] } container.style.left = 0; container.style.top = 0; container.style.opacity = 0; container.innerHTML = content; body.appendChild(container); if (parentContainer) { pos[0] = pos[0] - parentContainer.scrollLeft; pos[1] = pos[1] - parentContainer.scrollTop } nv.tooltip.calcTooltipPosition(pos, gravity, dist, container) }; nv.tooltip.findFirstNonSVGParent = function (Elem) { while (Elem.tagName.match(/^g|svg$/i) !== null) { Elem = Elem.parentNode } return Elem }; nv.tooltip.findTotalOffsetTop = function (Elem, initialTop) { var offsetTop = initialTop; do { if (!isNaN(Elem.offsetTop)) { offsetTop += Elem.offsetTop } } while (Elem = Elem.offsetParent); return offsetTop }; nv.tooltip.findTotalOffsetLeft = function (Elem, initialLeft) { var offsetLeft = initialLeft; do { if (!isNaN(Elem.offsetLeft)) { offsetLeft += Elem.offsetLeft } } while (Elem = Elem.offsetParent); return offsetLeft }; nv.tooltip.calcTooltipPosition = function (pos, gravity, dist, container) { var height = parseInt(container.offsetHeight), width = parseInt(container.offsetWidth), windowWidth = nv.utils.windowSize().width, windowHeight = nv.utils.windowSize().height, scrollTop = window.pageYOffset, scrollLeft = window.pageXOffset, left, top; windowHeight = window.innerWidth >= document.body.scrollWidth ? windowHeight : windowHeight - 16; windowWidth = window.innerHeight >= document.body.scrollHeight ? windowWidth : windowWidth - 16; gravity = gravity || "s"; dist = dist || 20; var tooltipTop = function (Elem) { return nv.tooltip.findTotalOffsetTop(Elem, top) }; var tooltipLeft = function (Elem) { return nv.tooltip.findTotalOffsetLeft(Elem, left) }; switch (gravity) { case "e": left = pos[0] - width - dist; top = pos[1] - height / 2; var tLeft = tooltipLeft(container); var tTop = tooltipTop(container); if (tLeft < scrollLeft) left = pos[0] + dist > scrollLeft ? pos[0] + dist : scrollLeft - tLeft + left; if (tTop < scrollTop) top = scrollTop - tTop + top; if (tTop + height > scrollTop + windowHeight) top = scrollTop + windowHeight - tTop + top - height; break; case "w": left = pos[0] + dist; top = pos[1] - height / 2; var tLeft = tooltipLeft(container); var tTop = tooltipTop(container); if (tLeft + width > windowWidth) left = pos[0] - width - dist; if (tTop < scrollTop) top = scrollTop + 5; if (tTop + height > scrollTop + windowHeight) top = scrollTop + windowHeight - tTop + top - height; break; case "n": left = pos[0] - width / 2 - 5; top = pos[1] + dist; var tLeft = tooltipLeft(container); var tTop = tooltipTop(container); if (tLeft < scrollLeft) left = scrollLeft + 5; if (tLeft + width > windowWidth) left = left - width / 2 + 5; if (tTop + height > scrollTop + windowHeight) top = scrollTop + windowHeight - tTop + top - height; break; case "s": left = pos[0] - width / 2; top = pos[1] - height - dist; var tLeft = tooltipLeft(container); var tTop = tooltipTop(container); if (tLeft < scrollLeft) left = scrollLeft + 5; if (tLeft + width > windowWidth) left = left - width / 2 + 5; if (scrollTop > tTop) top = scrollTop; break; case "none": left = pos[0]; top = pos[1] - dist; var tLeft = tooltipLeft(container); var tTop = tooltipTop(container); break } container.style.left = left + "px"; container.style.top = top + "px"; container.style.opacity = 1; container.style.position = "absolute"; return container }; nv.tooltip.cleanup = function () { var tooltips = document.getElementsByClassName("nvtooltip"); var purging = []; while (tooltips.length) { purging.push(tooltips[0]); tooltips[0].style.transitionDelay = "0 !important"; tooltips[0].style.opacity = 0; tooltips[0].className = "nvtooltip-pending-removal" } setTimeout(function () { while (purging.length) { var removeMe = purging.pop(); removeMe.parentNode.removeChild(removeMe) } }, 500) } })(); nv.utils.windowSize = function () { var size = { width: 640, height: 480 }; if (document.body && document.body.offsetWidth) { size.width = document.body.offsetWidth; size.height = document.body.offsetHeight } if (document.compatMode == "CSS1Compat" && document.documentElement && document.documentElement.offsetWidth) { size.width = document.documentElement.offsetWidth; size.height = document.documentElement.offsetHeight } if (window.innerWidth && window.innerHeight) { size.width = window.innerWidth; size.height = window.innerHeight } return size }; nv.utils.windowResize = function (fun) { if (fun === undefined) return; var oldresize = window.onresize; window.onresize = function (e) { if (typeof oldresize == "function") oldresize(e); fun(e) } }; nv.utils.getColor = function (color) { if (!arguments.length) return nv.utils.defaultColor(); if (Object.prototype.toString.call(color) === "[object Array]") return function (d, i) { return d.color || color[i % color.length] }; else return color }; nv.utils.defaultColor = function () { var colors = d3.scale.category20().range(); return function (d, i) { return d.color || colors[i % colors.length] } }; nv.utils.customTheme = function (dictionary, getKey, defaultColors) { getKey = getKey || function (series) { return series.key }; defaultColors = defaultColors || d3.scale.category20().range(); var defIndex = defaultColors.length; return function (series, index) { var key = getKey(series); if (!defIndex) defIndex = defaultColors.length; if (typeof dictionary[key] !== "undefined") return typeof dictionary[key] === "function" ? dictionary[key]() : dictionary[key]; else return defaultColors[--defIndex] } }; nv.utils.pjax = function (links, content) { d3.selectAll(links).on("click", function () { history.pushState(this.href, this.textContent, this.href); load(this.href); d3.event.preventDefault() }); function load(href) { d3.html(href, function (fragment) { var target = d3.select(content).node(); target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target); nv.utils.pjax(links, content) }) } d3.select(window).on("popstate", function () { if (d3.event.state) load(d3.event.state) }) }; nv.utils.calcApproxTextWidth = function (svgTextElem) { if (svgTextElem instanceof d3.selection) { var fontSize = parseInt(svgTextElem.style("font-size").replace("px", "")); var textLength = svgTextElem.text().length; return textLength * fontSize * .5 } return 0 }; nv.utils.NaNtoZero = function (n) { if (typeof n !== "number" || isNaN(n) || n === null || n === Infinity) return 0; return n }; nv.utils.optionsFunc = function (args) { if (args) { d3.map(args).forEach(function (key, value) { if (typeof this[key] === "function") { this[key](value) } }.bind(this)) } return this }; nv.models.axis = function () { "use strict"; var axis = d3.svg.axis(); var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 75, height = 60, scale = d3.scale.linear(), axisLabelText = null, showMaxMin = true, highlightZero = true, rotateLabels = 0, rotateYLabel = true, staggerLabels = false, isOrdinal = false, ticks = null, axisLabelDistance = 12; axis.scale(scale).orient("bottom").tickFormat(function (d) { return d }); var scale0; function chart(selection) { selection.each(function (data) { var container = d3.select(this); var wrap = container.selectAll("g.nv-wrap.nv-axis").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-axis"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); if (ticks !== null) axis.ticks(ticks); else if (axis.orient() == "top" || axis.orient() == "bottom") axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); g.transition().call(axis); scale0 = scale0 || axis.scale(); var fmt = axis.tickFormat(); if (fmt == null) { fmt = scale0.tickFormat() } var axisLabel = g.selectAll("text.nv-axislabel").data([axisLabelText || null]); axisLabel.exit().remove(); switch (axis.orient()) { case "top": axisLabel.enter().append("text").attr("class", "nv-axislabel"); var w = scale.range().length == 2 ? scale.range()[1] : scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]); axisLabel.attr("text-anchor", "middle").attr("y", 0).attr("x", w / 2); if (showMaxMin) { var axisMaxMin = wrap.selectAll("g.nv-axisMaxMin").data(scale.domain()); axisMaxMin.enter().append("g").attr("class", "nv-axisMaxMin").append("text"); axisMaxMin.exit().remove(); axisMaxMin.attr("transform", function (d, i) { return "translate(" + scale(d) + ",0)" }).select("text").attr("dy", "0em").attr("y", -axis.tickPadding()).attr("text-anchor", "middle").text(function (d, i) { var v = fmt(d); return ("" + v).match("NaN") ? "" : v }); axisMaxMin.transition().attr("transform", function (d, i) { return "translate(" + scale.range()[i] + ",0)" }) } break; case "bottom": var xLabelMargin = 36; var maxTextWidth = 30; var xTicks = g.selectAll("g").select("text"); if (rotateLabels % 360) { xTicks.each(function (d, i) { var width = this.getBBox().width; if (width > maxTextWidth) maxTextWidth = width }); var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180)); var xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; xTicks.attr("transform", function (d, i, j) { return "rotate(" + rotateLabels + " 0,0)" }).style("text-anchor", rotateLabels % 360 > 0 ? "start" : "end") } axisLabel.enter().append("text").attr("class", "nv-axislabel"); var w = scale.range().length == 2 ? scale.range()[1] : scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]); axisLabel.attr("text-anchor", "middle").attr("y", xLabelMargin).attr("x", w / 2); if (showMaxMin) { var axisMaxMin = wrap.selectAll("g.nv-axisMaxMin").data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]); axisMaxMin.enter().append("g").attr("class", "nv-axisMaxMin").append("text"); axisMaxMin.exit().remove(); axisMaxMin.attr("transform", function (d, i) { return "translate(" + (scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ",0)" }).select("text").attr("dy", ".71em").attr("y", axis.tickPadding()).attr("transform", function (d, i, j) { return "rotate(" + rotateLabels + " 0,0)" }).style("text-anchor", rotateLabels ? rotateLabels % 360 > 0 ? "start" : "end" : "middle").text(function (d, i) { var v = fmt(d); return ("" + v).match("NaN") ? "" : v }); axisMaxMin.transition().attr("transform", function (d, i) { return "translate(" + (scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ",0)" }) } if (staggerLabels) xTicks.attr("transform", function (d, i) { return "translate(0," + (i % 2 == 0 ? "0" : "12") + ")" }); break; case "right": axisLabel.enter().append("text").attr("class", "nv-axislabel"); axisLabel.style("text-anchor", rotateYLabel ? "middle" : "begin").attr("transform", rotateYLabel ? "rotate(90)" : "").attr("y", rotateYLabel ? -Math.max(margin.right, width) + 12 : -10).attr("x", rotateYLabel ? scale.range()[0] / 2 : axis.tickPadding()); if (showMaxMin) { var axisMaxMin = wrap.selectAll("g.nv-axisMaxMin").data(scale.domain()); axisMaxMin.enter().append("g").attr("class", "nv-axisMaxMin").append("text").style("opacity", 0); axisMaxMin.exit().remove(); axisMaxMin.attr("transform", function (d, i) { return "translate(0," + scale(d) + ")" }).select("text").attr("dy", ".32em").attr("y", 0).attr("x", axis.tickPadding()).style("text-anchor", "start").text(function (d, i) { var v = fmt(d); return ("" + v).match("NaN") ? "" : v }); axisMaxMin.transition().attr("transform", function (d, i) { return "translate(0," + scale.range()[i] + ")" }).select("text").style("opacity", 1) } break; case "left": axisLabel.enter().append("text").attr("class", "nv-axislabel"); axisLabel.style("text-anchor", rotateYLabel ? "middle" : "end").attr("transform", rotateYLabel ? "rotate(-90)" : "").attr("y", rotateYLabel ? -Math.max(margin.left, width) + axisLabelDistance : -10).attr("x", rotateYLabel ? -scale.range()[0] / 2 : -axis.tickPadding()); if (showMaxMin) { var axisMaxMin = wrap.selectAll("g.nv-axisMaxMin").data(scale.domain()); axisMaxMin.enter().append("g").attr("class", "nv-axisMaxMin").append("text").style("opacity", 0); axisMaxMin.exit().remove(); axisMaxMin.attr("transform", function (d, i) { return "translate(0," + scale0(d) + ")" }).select("text").attr("dy", ".32em").attr("y", 0).attr("x", -axis.tickPadding()).attr("text-anchor", "end").text(function (d, i) { var v = fmt(d); return ("" + v).match("NaN") ? "" : v }); axisMaxMin.transition().attr("transform", function (d, i) { return "translate(0," + scale.range()[i] + ")" }).select("text").style("opacity", 1) } break } axisLabel.text(function (d) { return d }); if (showMaxMin && (axis.orient() === "left" || axis.orient() === "right")) { g.selectAll("g").each(function (d, i) { d3.select(this).select("text").attr("opacity", 1); if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { if (d > 1e-10 || d < -1e-10) d3.select(this).attr("opacity", 0); d3.select(this).select("text").attr("opacity", 0) } }); if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) wrap.selectAll("g.nv-axisMaxMin").style("opacity", function (d, i) { return !i ? 1 : 0 }) } if (showMaxMin && (axis.orient() === "top" || axis.orient() === "bottom")) { var maxMinRange = []; wrap.selectAll("g.nv-axisMaxMin").each(function (d, i) { try { if (i) maxMinRange.push(scale(d) - this.getBBox().width - 4); else maxMinRange.push(scale(d) + this.getBBox().width + 4) } catch (err) { if (i) maxMinRange.push(scale(d) - 4); else maxMinRange.push(scale(d) + 4) } }); g.selectAll("g").each(function (d, i) { if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) { if (d > 1e-10 || d < -1e-10) d3.select(this).remove(); else d3.select(this).select("text").remove() } }) } if (highlightZero) g.selectAll(".tick").filter(function (d) { return !parseFloat(Math.round(d.__data__ * 1e5) / 1e6) && d.__data__ !== undefined }).classed("zero", true); scale0 = scale.copy() }); return chart } chart.axis = axis; d3.rebind(chart, axis, "orient", "tickValues", "tickSubdivide", "tickSize", "tickPadding", "tickFormat"); d3.rebind(chart, scale, "domain", "range", "rangeBand", "rangeBands"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.ticks = function (_) { if (!arguments.length) return ticks; ticks = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.axisLabel = function (_) { if (!arguments.length) return axisLabelText; axisLabelText = _; return chart }; chart.showMaxMin = function (_) { if (!arguments.length) return showMaxMin; showMaxMin = _; return chart }; chart.highlightZero = function (_) { if (!arguments.length) return highlightZero; highlightZero = _; return chart }; chart.scale = function (_) { if (!arguments.length) return scale; scale = _; axis.scale(scale); isOrdinal = typeof scale.rangeBands === "function"; d3.rebind(chart, scale, "domain", "range", "rangeBand", "rangeBands"); return chart }; chart.rotateYLabel = function (_) { if (!arguments.length) return rotateYLabel; rotateYLabel = _; return chart }; chart.rotateLabels = function (_) { if (!arguments.length) return rotateLabels; rotateLabels = _; return chart }; chart.staggerLabels = function (_) { if (!arguments.length) return staggerLabels; staggerLabels = _; return chart }; chart.axisLabelDistance = function (_) { if (!arguments.length) return axisLabelDistance; axisLabelDistance = _; return chart }; return chart }; nv.models.bullet = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, orient = "left", reverse = false, ranges = function (d) { return d.ranges }, markers = function (d) { return d.markers }, measures = function (d) { return d.measures }, rangeLabels = function (d) { return d.rangeLabels ? d.rangeLabels : [] }, markerLabels = function (d) { return d.markerLabels ? d.markerLabels : [] }, measureLabels = function (d) { return d.measureLabels ? d.measureLabels : [] }, forceX = [0], width = 380, height = 30, tickFormat = null, color = nv.utils.getColor(["#1f77b4"]), dispatch = d3.dispatch("elementMouseover", "elementMouseout"); function chart(selection) { selection.each(function (d, i) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); var rangez = ranges.call(this, d, i).slice().sort(d3.descending), markerz = markers.call(this, d, i).slice().sort(d3.descending), measurez = measures.call(this, d, i).slice().sort(d3.descending), rangeLabelz = rangeLabels.call(this, d, i).slice(), markerLabelz = markerLabels.call(this, d, i).slice(), measureLabelz = measureLabels.call(this, d, i).slice(); var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); this.__chart__ = x1; var rangeMin = d3.min(rangez), rangeMax = d3.max(rangez), rangeAvg = rangez[1]; var wrap = container.selectAll("g.nv-wrap.nv-bullet").data([d]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-bullet"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("rect").attr("class", "nv-range nv-rangeMax"); gEnter.append("rect").attr("class", "nv-range nv-rangeAvg"); gEnter.append("rect").attr("class", "nv-range nv-rangeMin"); gEnter.append("rect").attr("class", "nv-measure"); gEnter.append("path").attr("class", "nv-markerTriangle"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var w0 = function (d) { return Math.abs(x0(d) - x0(0)) }, w1 = function (d) { return Math.abs(x1(d) - x1(0)) }; var xp0 = function (d) { return d < 0 ? x0(d) : x0(0) }, xp1 = function (d) { return d < 0 ? x1(d) : x1(0) }; g.select("rect.nv-rangeMax").attr("height", availableHeight).attr("width", w1(rangeMax > 0 ? rangeMax : rangeMin)).attr("x", xp1(rangeMax > 0 ? rangeMax : rangeMin)).datum(rangeMax > 0 ? rangeMax : rangeMin); g.select("rect.nv-rangeAvg").attr("height", availableHeight).attr("width", w1(rangeAvg)).attr("x", xp1(rangeAvg)).datum(rangeAvg); g.select("rect.nv-rangeMin").attr("height", availableHeight).attr("width", w1(rangeMax)).attr("x", xp1(rangeMax)).attr("width", w1(rangeMax > 0 ? rangeMin : rangeMax)).attr("x", xp1(rangeMax > 0 ? rangeMin : rangeMax)).datum(rangeMax > 0 ? rangeMin : rangeMax); g.select("rect.nv-measure").style("fill", color).attr("height", availableHeight / 3).attr("y", availableHeight / 3).attr("width", measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr("x", xp1(measurez)).on("mouseover", function () { dispatch.elementMouseover({ value: measurez[0], label: measureLabelz[0] || "Current", pos: [x1(measurez[0]), availableHeight / 2] }) }).on("mouseout", function () { dispatch.elementMouseout({ value: measurez[0], label: measureLabelz[0] || "Current" }) }); var h3 = availableHeight / 6; if (markerz[0]) { g.selectAll("path.nv-markerTriangle").attr("transform", function (d) { return "translate(" + x1(markerz[0]) + "," + availableHeight / 2 + ")" }).attr("d", "M0," + h3 + "L" + h3 + "," + -h3 + " " + -h3 + "," + -h3 + "Z").on("mouseover", function () { dispatch.elementMouseover({ value: markerz[0], label: markerLabelz[0] || "Previous", pos: [x1(markerz[0]), availableHeight / 2] }) }).on("mouseout", function () { dispatch.elementMouseout({ value: markerz[0], label: markerLabelz[0] || "Previous" }) }) } else { g.selectAll("path.nv-markerTriangle").remove() } wrap.selectAll(".nv-range").on("mouseover", function (d, i) { var label = rangeLabelz[i] || (!i ? "Maximum" : i == 1 ? "Mean" : "Minimum"); dispatch.elementMouseover({ value: d, label: label, pos: [x1(d), availableHeight / 2] }) }).on("mouseout", function (d, i) { var label = rangeLabelz[i] || (!i ? "Maximum" : i == 1 ? "Mean" : "Minimum"); dispatch.elementMouseout({ value: d, label: label }) }) }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.orient = function (_) { if (!arguments.length) return orient; orient = _; reverse = orient == "right" || orient == "bottom"; return chart }; chart.ranges = function (_) { if (!arguments.length) return ranges; ranges = _; return chart }; chart.markers = function (_) { if (!arguments.length) return markers; markers = _; return chart }; chart.measures = function (_) { if (!arguments.length) return measures; measures = _; return chart }; chart.forceX = function (_) { if (!arguments.length) return forceX; forceX = _; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.tickFormat = function (_) { if (!arguments.length) return tickFormat; tickFormat = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; return chart }; nv.models.bulletChart = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var bullet = nv.models.bullet(); var orient = "left", reverse = false, margin = { top: 5, right: 40, bottom: 20, left: 120 }, ranges = function (d) { return d.ranges }, markers = function (d) { return d.markers }, measures = function (d) { return d.measures }, width = null, height = 55, tickFormat = null, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + x + "</h3>" + "<p>" + y + "</p>" }, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide"); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0) + margin.left, top = e.pos[1] + (offsetElement.offsetTop || 0) + margin.top, content = tooltip(e.key, e.label, e.value, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "e" : "w", null, offsetElement) }; function chart(selection) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            selection.each(function (d, i) {]]></c>
                </r>
                <r>
                  <c><![CDATA[                var container = d3.select(this); var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, that = this; chart.update = function () { chart(selection) }; chart.container = this; if (!d || !ranges.call(this, d, i)) {]]></c>
                </r>
                <r>
                  <c><![CDATA[                    var noDataText = container.selectAll(".nv-noData").data([noData]);]]></c>
                </r>
                <r>
                  <c><![CDATA[                    noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", 18 + margin.top + availableHeight / 2).text(function (d) { return d }); return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[                } else { container.selectAll(".nv-noData").remove() } var rangez = ranges.call(this, d, i).slice().sort(d3.descending), markerz = markers.call(this, d, i).slice().sort(d3.descending), measurez = measures.call(this, d, i).slice().sort(d3.descending); var wrap = container.selectAll("g.nv-wrap.nv-bulletChart").data([d]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-bulletChart"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-bulletWrap"); gEnter.append("g").attr("class", "nv-titles"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0], measurez[0])]).range(reverse ? [availableWidth, 0] : [0, availableWidth]); var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); this.__chart__ = x1; var w0 = function (d) { return Math.abs(x0(d) - x0(0)) }, w1 = function (d) { return Math.abs(x1(d) - x1(0)) }; var title = gEnter.select(".nv-titles").append("g").attr("text-anchor", "end").attr("transform", "translate(-6," + (height - margin.top - margin.bottom) / 2 + ")"); title.append("text").attr("class", "nv-title").text(function (d) { return d.title }); title.append("text").attr("class", "nv-subtitle").attr("dy", "1em").text(function (d) { return d.subtitle }); bullet.width(availableWidth).height(availableHeight); var bulletWrap = g.select(".nv-bulletWrap"); d3.transition(bulletWrap).call(bullet); var format = tickFormat || x1.tickFormat(availableWidth / 100); var tick = g.selectAll("g.nv-tick").data(x1.ticks(availableWidth / 50), function (d) { return this.textContent || format(d) }); var tickEnter = tick.enter().append("g").attr("class", "nv-tick").attr("transform", function (d) { return "translate(" + x0(d) + ",0)" }).style("opacity", 1e-6); tickEnter.append("line").attr("y1", availableHeight).attr("y2", availableHeight * 7 / 6); tickEnter.append("text").attr("text-anchor", "middle").attr("dy", "1em").attr("y", availableHeight * 7 / 6).text(format); var tickUpdate = d3.transition(tick).attr("transform", function (d) { return "translate(" + x1(d) + ",0)" }).style("opacity", 1); tickUpdate.select("line").attr("y1", availableHeight).attr("y2", availableHeight * 7 / 6); tickUpdate.select("text").attr("y", availableHeight * 7 / 6); d3.transition(tick.exit()).attr("transform", function (d) { return "translate(" + x1(d) + ",0)" }).style("opacity", 1e-6).remove(); dispatch.on("tooltipShow", function (e) { e.key = d.title; if (tooltips) showTooltip(e, that.parentNode) })]]></c>
                </r>
                <r>
                  <c><![CDATA[            }); d3.timer.flush(); return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[        } bullet.dispatch.on("elementMouseover.tooltip", function (e) { dispatch.tooltipShow(e) }); bullet.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.bullet = bullet; d3.rebind(chart, bullet, "color"); chart.options = nv.utils.optionsFunc.bind(chart); chart.orient = function (x) { if (!arguments.length) return orient; orient = x; reverse = orient == "right" || orient == "bottom"; return chart }; chart.ranges = function (x) { if (!arguments.length) return ranges; ranges = x; return chart }; chart.markers = function (x) { if (!arguments.length) return markers; markers = x; return chart }; chart.measures = function (x) { if (!arguments.length) return measures; measures = x; return chart }; chart.width = function (x) { if (!arguments.length) return width; width = x; return chart }; chart.height = function (x) { if (!arguments.length) return height; height = x; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.tickFormat = function (x) { if (!arguments.length) return tickFormat; tickFormat = x; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.cumulativeLineChart = function () { "use strict"; var lines = nv.models.line(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(), controls = nv.models.legend(), interactiveLayer = nv.interactiveGuideline(); var margin = { top: 30, right: 30, bottom: 50, left: 60 }, color = nv.utils.defaultColor(), width = null, height = null, showLegend = true, showXAxis = true, showYAxis = true, rightAlignYAxis = false, tooltips = true, showControls = true, useInteractiveGuideline = false, rescaleY = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, x, y, id = lines.id(), state = { index: 0, rescaleY: rescaleY }, defaultState = null, noData = "No Data Available.", average = function (d) { return d.average }, dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), transitionDuration = 250; xAxis.orient("bottom").tickPadding(7); yAxis.orient(rightAlignYAxis ? "right" : "left"); controls.updateState(false); var dx = d3.scale.linear(), index = { i: 0, x: 0 }; var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(lines.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(lines.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, null, null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this).classed("nv-chart-" + id, true), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } var indexDrag = d3.behavior.drag().on("dragstart", dragStart).on("drag", dragMove).on("dragend", dragEnd); function dragStart(d, i) { d3.select(chart.container).style("cursor", "ew-resize") } function dragMove(d, i) { index.x = d3.event.x; index.i = Math.round(dx.invert(index.x)); updateZero() } function dragEnd(d, i) { d3.select(chart.container).style("cursor", "auto"); state.index = index.i; dispatch.stateChange(state) } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = lines.xScale(); y = lines.yScale(); if (!rescaleY) { var seriesDomains = data.filter(function (series) { return !series.disabled }).map(function (series, i) { var initialDomain = d3.extent(series.values, lines.y()); if (initialDomain[0] < -.95) initialDomain[0] = -.95; return [(initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]), (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])] }); var completeDomain = [d3.min(seriesDomains, function (d) { return d[0] }), d3.max(seriesDomains, function (d) { return d[1] })]; lines.yDomain(completeDomain) } else { lines.yDomain(null) } dx.domain([0, data[0].values.length - 1]).range([0, availableWidth]).clamp(true); var data = indexify(index.i, data); var interactivePointerEvents = useInteractiveGuideline ? "none" : "all"; var wrap = container.selectAll("g.nv-wrap.nv-cumulativeLine").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-cumulativeLine").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-interactive"); gEnter.append("g").attr("class", "nv-x nv-axis").style("pointer-events", "none"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-background"); gEnter.append("g").attr("class", "nv-linesWrap").style("pointer-events", interactivePointerEvents); gEnter.append("g").attr("class", "nv-avgLinesWrap").style("pointer-events", "none"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-controlsWrap"); if (showLegend) { legend.width(availableWidth); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".nv-legendWrap").attr("transform", "translate(0," + -margin.top + ")") } if (showControls) { var controlsData = [{ key: "Re-scale y-axis", disabled: !rescaleY }]; controls.width(140).color(["#444", "#444", "#444"]); g.select(".nv-controlsWrap").datum(controlsData).attr("transform", "translate(0," + -margin.top + ")").call(controls) } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } var tempDisabled = data.filter(function (d) { return d.tempDisabled }); wrap.select(".tempDisabled").remove(); if (tempDisabled.length) { wrap.append("text").attr("class", "tempDisabled").attr("x", availableWidth / 2).attr("y", "-.71em").style("text-anchor", "end").text(tempDisabled.map(function (d) { return d.key }).join(", ") + " values cannot be calculated for this time period.") } if (useInteractiveGuideline) { interactiveLayer.width(availableWidth).height(availableHeight).margin({ left: margin.left, top: margin.top }).svgContainer(container).xScale(x); wrap.select(".nv-interactive").call(interactiveLayer) } gEnter.select(".nv-background").append("rect"); g.select(".nv-background rect").attr("width", availableWidth).attr("height", availableHeight); lines.y(function (d) { return d.display.y }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && !data[i].tempDisabled })); var linesWrap = g.select(".nv-linesWrap").datum(data.filter(function (d) { return !d.disabled && !d.tempDisabled })); linesWrap.call(lines); data.forEach(function (d, i) { d.seriesIndex = i }); var avgLineData = data.filter(function (d) { return !d.disabled && !!average(d) }); var avgLines = g.select(".nv-avgLinesWrap").selectAll("line").data(avgLineData, function (d) { return d.key }); var getAvgLineY = function (d) { var yVal = y(average(d)); if (yVal < 0) return 0; if (yVal > availableHeight) return availableHeight; return yVal }; avgLines.enter().append("line").style("stroke-width", 2).style("stroke-dasharray", "10,10").style("stroke", function (d, i) { return lines.color()(d, d.seriesIndex) }).attr("x1", 0).attr("x2", availableWidth).attr("y1", getAvgLineY).attr("y2", getAvgLineY); avgLines.style("stroke-opacity", function (d) { var yVal = y(average(d)); if (yVal < 0 || yVal > availableHeight) return 0; return 1 }).attr("x1", 0).attr("x2", availableWidth).attr("y1", getAvgLineY).attr("y2", getAvgLineY); avgLines.exit().remove(); var indexLine = linesWrap.selectAll(".nv-indexLine").data([index]); indexLine.enter().append("rect").attr("class", "nv-indexLine").attr("width", 3).attr("x", -2).attr("fill", "red").attr("fill-opacity", .5).style("pointer-events", "all").call(indexDrag); indexLine.attr("transform", function (d) { return "translate(" + dx(d.i) + ",0)" }).attr("height", availableHeight); if (showXAxis) { xAxis.scale(x).ticks(Math.min(data[0].values.length, availableWidth / 70)).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"); d3.transition(g.select(".nv-x.nv-axis")).call(xAxis) } if (showYAxis) { yAxis.scale(y).ticks(availableHeight / 36).tickSize(-availableWidth, 0); d3.transition(g.select(".nv-y.nv-axis")).call(yAxis) } function updateZero() { indexLine.data([index]); var oldDuration = chart.transitionDuration(); chart.transitionDuration(0); chart.update(); chart.transitionDuration(oldDuration) } g.select(".nv-background rect").on("click", function () { index.x = d3.mouse(this)[0]; index.i = Math.round(dx.invert(index.x)); state.index = index.i; dispatch.stateChange(state); updateZero() }); lines.dispatch.on("elementClick", function (e) { index.i = e.pointIndex; index.x = dx(index.i); state.index = index.i; dispatch.stateChange(state); updateZero() }); controls.dispatch.on("legendClick", function (d, i) { d.disabled = !d.disabled; rescaleY = !d.disabled; state.rescaleY = rescaleY; dispatch.stateChange(state); chart.update() }); legend.dispatch.on("stateChange", function (newState) { state.disabled = newState.disabled; dispatch.stateChange(state); chart.update() }); interactiveLayer.dispatch.on("elementMousemove", function (e) { lines.clearHighlights(); var singlePoint, pointIndex, pointXLocation, allData = []; data.filter(function (series, i) { series.seriesIndex = i; return !series.disabled }).forEach(function (series, i) { pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x()); lines.highlightPoint(i, pointIndex, true); var point = series.values[pointIndex]; if (typeof point === "undefined") return; if (typeof singlePoint === "undefined") singlePoint = point; if (typeof pointXLocation === "undefined") pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); allData.push({ key: series.key, value: chart.y()(point, pointIndex), color: color(series, series.seriesIndex) }) }); if (allData.length > 2) { var yValue = chart.yScale().invert(e.mouseY); var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]); var threshold = .03 * domainExtent; var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) { return d.value }), yValue, threshold); if (indexToHighlight !== null) allData[indexToHighlight].highlight = true } var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex); interactiveLayer.tooltip.position({ left: pointXLocation + margin.left, top: e.mouseY + margin.top }).chartContainer(that.parentNode).enabled(tooltips).valueFormatter(function (d, i) { return yAxis.tickFormat()(d) }).data({ value: xValue, series: allData })(); interactiveLayer.renderGuideLine(pointXLocation) }); interactiveLayer.dispatch.on("elementMouseout", function (e) { dispatch.tooltipHide(); lines.clearHighlights() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } if (typeof e.index !== "undefined") { index.i = e.index; index.x = dx(index.i); state.index = e.index; indexLine.data([index]) } if (typeof e.rescaleY !== "undefined") { rescaleY = e.rescaleY } chart.update() }) }); return chart } lines.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.lines = lines; chart.legend = legend; chart.xAxis = xAxis; chart.yAxis = yAxis; chart.interactiveLayer = interactiveLayer; d3.rebind(chart, lines, "defined", "isArea", "x", "y", "xScale", "yScale", "size", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "useVoronoi", "id"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.rescaleY = function (_) { if (!arguments.length) return rescaleY; rescaleY = _; return chart }; chart.showControls = function (_) { if (!arguments.length) return showControls; showControls = _; return chart }; chart.useInteractiveGuideline = function (_) { if (!arguments.length) return useInteractiveGuideline; useInteractiveGuideline = _; if (_ === true) { chart.interactive(false); chart.useVoronoi(false) } return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.average = function (_) { if (!arguments.length) return average; average = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; function indexify(idx, data) { return data.map(function (line, i) { if (!line.values) { return line } var v = lines.y()(line.values[idx], idx); if (v < -.95) { line.tempDisabled = true; return line } line.tempDisabled = false; line.values = line.values.map(function (point, pointIndex) { point.display = { y: (lines.y()(point, pointIndex) - v) / (1 + v) }; return point }); return line }) } return chart }; nv.models.discreteBar = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, id = Math.floor(Math.random() * 1e4), x = d3.scale.ordinal(), y = d3.scale.linear(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, forceY = [0], color = nv.utils.defaultColor(), showValues = false, valueFormat = d3.format(",.2f"), xDomain, yDomain, xRange, yRange, dispatch = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"), rectClass = "discreteBar"; var x0, y0; function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); data.forEach(function (series, i) { series.values.forEach(function (point) { point.series = i }) }); var seriesData = xDomain && yDomain ? [] : data.map(function (d) { return d.values.map(function (d, i) { return { x: getX(d, i), y: getY(d, i), y0: d.y0 } }) }); x.domain(xDomain || d3.merge(seriesData).map(function (d) { return d.x })).rangeBands(xRange || [0, availableWidth], .1); y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) { return d.y }).concat(forceY))); if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]); else y.range(yRange || [availableHeight, 0]); x0 = x0 || x; y0 = y0 || y.copy().range([y(0), y(0)]); var wrap = container.selectAll("g.nv-wrap.nv-discretebar").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-discretebar"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-groups"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var groups = wrap.select(".nv-groups").selectAll(".nv-group").data(function (d) { return d }, function (d) { return d.key }); groups.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); groups.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(); groups.attr("class", function (d, i) { return "nv-group nv-series-" + i }).classed("hover", function (d) { return d.hover }); groups.transition().style("stroke-opacity", 1).style("fill-opacity", .75); var bars = groups.selectAll("g.nv-bar").data(function (d) { return d.values }); bars.exit().remove(); var barsEnter = bars.enter().append("g").attr("transform", function (d, i, j) { return "translate(" + (x(getX(d, i)) + x.rangeBand() * .05) + ", " + y(0) + ")" }).on("mouseover", function (d, i) { d3.select(this).classed("hover", true); dispatch.elementMouseover({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (d.series + .5) / data.length, y(getY(d, i))], pointIndex: i, seriesIndex: d.series, e: d3.event }) }).on("mouseout", function (d, i) { d3.select(this).classed("hover", false); dispatch.elementMouseout({ value: getY(d, i), point: d, series: data[d.series], pointIndex: i, seriesIndex: d.series, e: d3.event }) }).on("click", function (d, i) { dispatch.elementClick({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (d.series + .5) / data.length, y(getY(d, i))], pointIndex: i, seriesIndex: d.series, e: d3.event }); d3.event.stopPropagation() }).on("dblclick", function (d, i) { dispatch.elementDblClick({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (d.series + .5) / data.length, y(getY(d, i))], pointIndex: i, seriesIndex: d.series, e: d3.event }); d3.event.stopPropagation() }); barsEnter.append("rect").attr("height", 0).attr("width", x.rangeBand() * .9 / data.length); if (showValues) { barsEnter.append("text").attr("text-anchor", "middle"); bars.select("text").text(function (d, i) { return valueFormat(getY(d, i)) }).transition().attr("x", x.rangeBand() * .9 / 2).attr("y", function (d, i) { return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4 }) } else { bars.selectAll("text").remove() } bars.attr("class", function (d, i) { return getY(d, i) < 0 ? "nv-bar negative" : "nv-bar positive" }).style("fill", function (d, i) { return d.color || color(d, i) }).style("stroke", function (d, i) { return d.color || color(d, i) }).select("rect").attr("class", rectClass).transition().attr("width", x.rangeBand() * .9 / data.length); bars.transition().attr("transform", function (d, i) { var left = x(getX(d, i)) + x.rangeBand() * .05, top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)); return "translate(" + left + ", " + top + ")" }).select("rect").attr("height", function (d, i) { return Math.max(Math.abs(y(getY(d, i)) - y(yDomain && yDomain[0] || 0)) || 1) }); x0 = x.copy(); y0 = y.copy() }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.forceY = function (_) { if (!arguments.length) return forceY; forceY = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.showValues = function (_) { if (!arguments.length) return showValues; showValues = _; return chart }; chart.valueFormat = function (_) { if (!arguments.length) return valueFormat; valueFormat = _; return chart }; chart.rectClass = function (_) { if (!arguments.length) return rectClass; rectClass = _; return chart }; return chart }; nv.models.discreteBarChart = function () { "use strict"; var discretebar = nv.models.discreteBar(), xAxis = nv.models.axis(), yAxis = nv.models.axis(); var margin = { top: 15, right: 10, bottom: 50, left: 60 }, width = null, height = null, color = nv.utils.getColor(), showXAxis = true, showYAxis = true, rightAlignYAxis = false, staggerLabels = false, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + x + "</h3>" + "<p>" + y + "</p>" }, x, y, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "beforeUpdate"), transitionDuration = 250; xAxis.orient("bottom").highlightZero(false).showMaxMin(false).tickFormat(function (d) { return d }); yAxis.orient(rightAlignYAxis ? "right" : "left").tickFormat(d3.format(",.1f")); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(discretebar.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(discretebar.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "n" : "s", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { dispatch.beforeUpdate(); container.transition().duration(transitionDuration).call(chart) }; chart.container = this; if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = discretebar.xScale(); y = discretebar.yScale().clamp(true); var wrap = container.selectAll("g.nv-wrap.nv-discreteBarWithAxes").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-discreteBarWithAxes").append("g"); var defsEnter = gEnter.append("defs"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-barsWrap"); g.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } discretebar.width(availableWidth).height(availableHeight); var barsWrap = g.select(".nv-barsWrap").datum(data.filter(function (d) { return !d.disabled })); barsWrap.transition().call(discretebar); defsEnter.append("clipPath").attr("id", "nv-x-label-clip-" + discretebar.id()).append("rect"); g.select("#nv-x-label-clip-" + discretebar.id() + " rect").attr("width", x.rangeBand() * (staggerLabels ? 2 : 1)).attr("height", 16).attr("x", -x.rangeBand() / (staggerLabels ? 1 : 2)); if (showXAxis) { xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ")"); g.select(".nv-x.nv-axis").transition().call(xAxis); var xTicks = g.select(".nv-x.nv-axis").selectAll("g"); if (staggerLabels) { xTicks.selectAll("text").attr("transform", function (d, i, j) { return "translate(0," + (j % 2 == 0 ? "5" : "17") + ")" }) } } if (showYAxis) { yAxis.scale(y).ticks(availableHeight / 36).tickSize(-availableWidth, 0); g.select(".nv-y.nv-axis").transition().call(yAxis) } dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }) }); return chart } discretebar.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); discretebar.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.discretebar = discretebar; chart.xAxis = xAxis; chart.yAxis = yAxis; d3.rebind(chart, discretebar, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "id", "showValues", "valueFormat"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); discretebar.color(color); return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.staggerLabels = function (_) { if (!arguments.length) return staggerLabels; staggerLabels = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart }; nv.models.distribution = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 400, size = 8, axis = "x", getData = function (d) { return d[axis] }, color = nv.utils.defaultColor(), scale = d3.scale.linear(), domain; var scale0; function chart(selection) { selection.each(function (data) { var availableLength = width - (axis === "x" ? margin.left + margin.right : margin.top + margin.bottom), naxis = axis == "x" ? "y" : "x", container = d3.select(this); scale0 = scale0 || scale; var wrap = container.selectAll("g.nv-distribution").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-distribution"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var distWrap = g.selectAll("g.nv-dist").data(function (d) { return d }, function (d) { return d.key }); distWrap.enter().append("g"); distWrap.attr("class", function (d, i) { return "nv-dist nv-series-" + i }).style("stroke", function (d, i) { return color(d, i) }); var dist = distWrap.selectAll("line.nv-dist" + axis).data(function (d) { return d.values }); dist.enter().append("line").attr(axis + "1", function (d, i) { return scale0(getData(d, i)) }).attr(axis + "2", function (d, i) { return scale0(getData(d, i)) }); distWrap.exit().selectAll("line.nv-dist" + axis).transition().attr(axis + "1", function (d, i) { return scale(getData(d, i)) }).attr(axis + "2", function (d, i) { return scale(getData(d, i)) }).style("stroke-opacity", 0).remove(); dist.attr("class", function (d, i) { return "nv-dist" + axis + " nv-dist" + axis + "-" + i }).attr(naxis + "1", 0).attr(naxis + "2", size); dist.transition().attr(axis + "1", function (d, i) { return scale(getData(d, i)) }).attr(axis + "2", function (d, i) { return scale(getData(d, i)) }); scale0 = scale.copy() }); return chart } chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.axis = function (_) { if (!arguments.length) return axis; axis = _; return chart }; chart.size = function (_) { if (!arguments.length) return size; size = _; return chart }; chart.getData = function (_) { if (!arguments.length) return getData; getData = d3.functor(_); return chart }; chart.scale = function (_) { if (!arguments.length) return scale; scale = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; return chart }; nv.models.historicalBar = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, id = Math.floor(Math.random() * 1e4), x = d3.scale.linear(), y = d3.scale.linear(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, forceX = [], forceY = [0], padData = false, clipEdge = true, color = nv.utils.defaultColor(), xDomain, yDomain, xRange, yRange, dispatch = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"), interactive = true;]]></c>
                </r>
                <r>
                  <c><![CDATA[        function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX))); if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]); else x.range(xRange || [0, availableWidth]); y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * .01, x.domain()[1] + x.domain()[1] * .01]) : x.domain([-1, 1]); if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * .01, y.domain()[1] - y.domain()[1] * .01]) : y.domain([-1, 1]); var wrap = container.selectAll("g.nv-wrap.nv-historicalBar-" + id).data([data[0].values]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-historicalBar-" + id); var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-bars"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); container.on("click", function (d, i) { dispatch.chartClick({ data: d, index: i, pos: d3.event, id: id }) }); defsEnter.append("clipPath").attr("id", "nv-chart-clip-path-" + id).append("rect"); wrap.select("#nv-chart-clip-path-" + id + " rect").attr("width", availableWidth).attr("height", availableHeight); g.attr("clip-path", clipEdge ? "url(#nv-chart-clip-path-" + id + ")" : ""); var bars = wrap.select(".nv-bars").selectAll(".nv-bar").data(function (d) { return d }, function (d, i) { return getX(d, i) }); bars.exit().remove(); var barsEnter = bars.enter().append("rect").attr("x", 0).attr("y", function (d, i) { return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i)))) }).attr("height", function (d, i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0))) }).attr("transform", function (d, i) { return "translate(" + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ",0)" }).on("mouseover", function (d, i) { if (!interactive) return; d3.select(this).classed("hover", true); dispatch.elementMouseover({ point: d, series: data[0], pos: [x(getX(d, i)), y(getY(d, i))], pointIndex: i, seriesIndex: 0, e: d3.event }) }).on("mouseout", function (d, i) { if (!interactive) return; d3.select(this).classed("hover", false); dispatch.elementMouseout({ point: d, series: data[0], pointIndex: i, seriesIndex: 0, e: d3.event }) }).on("click", function (d, i) { if (!interactive) return; dispatch.elementClick({ value: getY(d, i), data: d, index: i, pos: [x(getX(d, i)), y(getY(d, i))], e: d3.event, id: id }); d3.event.stopPropagation() }).on("dblclick", function (d, i) { if (!interactive) return; dispatch.elementDblClick({ value: getY(d, i), data: d, index: i, pos: [x(getX(d, i)), y(getY(d, i))], e: d3.event, id: id }); d3.event.stopPropagation() }); bars.attr("fill", function (d, i) { return color(d, i) }).attr("class", function (d, i, j) { return (getY(d, i) < 0 ? "nv-bar negative" : "nv-bar positive") + " nv-bar-" + j + "-" + i }).transition().attr("transform", function (d, i) { return "translate(" + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ",0)" }).attr("width", availableWidth / data[0].values.length * .9); bars.transition().attr("y", function (d, i) { var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)); return nv.utils.NaNtoZero(rval) }).attr("height", function (d, i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1)) }) }); return chart } chart.highlightPoint = function (pointIndex, isHoverOver) { d3.select(".nv-historicalBar-" + id).select(".nv-bars .nv-bar-0-" + pointIndex).classed("hover", isHoverOver) }; chart.clearHighlights = function () { d3.select(".nv-historicalBar-" + id).select(".nv-bars .nv-bar.hover").classed("hover", false) }; chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.forceX = function (_) { if (!arguments.length) return forceX; forceX = _; return chart }; chart.forceY = function (_) { if (!arguments.length) return forceY; forceY = _; return chart }; chart.padData = function (_) { if (!arguments.length) return padData; padData = _; return chart }; chart.clipEdge = function (_) { if (!arguments.length) return clipEdge; clipEdge = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.interactive = function (_) { if (!arguments.length) return interactive; interactive = false; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.historicalBarChart = function () { "use strict"; var bars = nv.models.historicalBar(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(); var margin = { top: 30, right: 90, bottom: 50, left: 90 }, color = nv.utils.defaultColor(), width = null, height = null, showLegend = false, showXAxis = true, showYAxis = true, rightAlignYAxis = false, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, x, y, state = {}, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), transitionDuration = 250; xAxis.orient("bottom").tickPadding(7); yAxis.orient(rightAlignYAxis ? "right" : "left"); var showTooltip = function (e, offsetElement) { if (offsetElement) { var svg = d3.select(offsetElement).select("svg"); var viewBox = svg.node() ? svg.attr("viewBox") : null; if (viewBox) { viewBox = viewBox.split(" "); var ratio = parseInt(svg.style("width")) / viewBox[2]; e.pos[0] = e.pos[0] * ratio; e.pos[1] = e.pos[1] * ratio } } var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(bars.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(bars.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, null, null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = bars.xScale(); y = bars.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-historicalBarChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-historicalBarChart").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-barsWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); if (showLegend) { legend.width(availableWidth); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } wrap.select(".nv-legendWrap").attr("transform", "translate(0," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); var barsWrap = g.select(".nv-barsWrap").datum(data.filter(function (d) { return !d.disabled })); barsWrap.transition().call(bars); if (showXAxis) { xAxis.scale(x).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"); g.select(".nv-x.nv-axis").transition().call(xAxis) } if (showYAxis) { yAxis.scale(y).ticks(availableHeight / 36).tickSize(-availableWidth, 0); g.select(".nv-y.nv-axis").transition().call(yAxis) } legend.dispatch.on("legendClick", function (d, i) { d.disabled = !d.disabled; if (!data.filter(function (d) { return !d.disabled }).length) { data.map(function (d) { d.disabled = false; wrap.selectAll(".nv-series").classed("disabled", false); return d }) } state.disabled = data.map(function (d) { return !!d.disabled }); dispatch.stateChange(state); selection.transition().call(chart) }); legend.dispatch.on("legendDblclick", function (d) { data.forEach(function (d) { d.disabled = true }); d.disabled = false; state.disabled = data.map(function (d) { return !!d.disabled }); dispatch.stateChange(state); chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } selection.call(chart) }) }); return chart } bars.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); bars.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.bars = bars; chart.legend = legend; chart.xAxis = xAxis; chart.yAxis = yAxis; d3.rebind(chart, bars, "defined", "isArea", "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "id", "interpolate", "highlightPoint", "clearHighlights", "interactive"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart }; nv.models.indentedTree = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, color = nv.utils.defaultColor(), id = Math.floor(Math.random() * 1e4), header = true, filterZero = false, noData = "No Data Available.", childIndent = 20, columns = [{ key: "key", label: "Name", type: "text" }], tableClass = null, iconOpen = "images/grey-plus.png", iconClose = "images/grey-minus.png", dispatch = d3.dispatch("elementClick", "elementDblclick", "elementMouseover", "elementMouseout"), getUrl = function (d) { return d.url }; var idx = 0; function chart(selection) { selection.each(function (data) { var depth = 1, container = d3.select(this); var tree = d3.layout.tree().children(function (d) { return d.values }).size([height, childIndent]); chart.update = function () { container.transition().duration(600).call(chart) }; if (!data[0]) data[0] = { key: noData }; var nodes = tree.nodes(data[0]); var wrap = d3.select(this).selectAll("div").data([[nodes]]); var wrapEnter = wrap.enter().append("div").attr("class", "nvd3 nv-wrap nv-indentedtree"); var tableEnter = wrapEnter.append("table"); var table = wrap.select("table").attr("width", "100%").attr("class", tableClass); if (header) { var thead = tableEnter.append("thead"); var theadRow1 = thead.append("tr"); columns.forEach(function (column) { theadRow1.append("th").attr("width", column.width ? column.width : "10%").style("text-align", column.type == "numeric" ? "right" : "left").append("span").text(column.label) }) } var tbody = table.selectAll("tbody").data(function (d) { return d }); tbody.enter().append("tbody"); depth = d3.max(nodes, function (node) { return node.depth }); tree.size([height, depth * childIndent]); var node = tbody.selectAll("tr").data(function (d) { return d.filter(function (d) { return filterZero && !d.children ? filterZero(d) : true }) }, function (d, i) { return d.id || d.id || ++idx }); node.exit().remove(); node.select("img.nv-treeicon").attr("src", icon).classed("folded", folded); var nodeEnter = node.enter().append("tr"); columns.forEach(function (column, index) { var nodeName = nodeEnter.append("td").style("padding-left", function (d) { return (index ? 0 : d.depth * childIndent + 12 + (icon(d) ? 0 : 16)) + "px" }, "important").style("text-align", column.type == "numeric" ? "right" : "left"); if (index == 0) { nodeName.append("img").classed("nv-treeicon", true).classed("nv-folded", folded).attr("src", icon).style("width", "14px").style("height", "14px").style("padding", "0 1px").style("display", function (d) { return icon(d) ? "inline-block" : "none" }).on("click", click) } nodeName.each(function (d) { if (!index && getUrl(d)) d3.select(this).append("a").attr("href", getUrl).attr("class", d3.functor(column.classes)).append("span"); else d3.select(this).append("span"); d3.select(this).select("span").attr("class", d3.functor(column.classes)).text(function (d) { return column.format ? column.format(d) : d[column.key] || "-" }) }); if (column.showCount) { nodeName.append("span").attr("class", "nv-childrenCount"); node.selectAll("span.nv-childrenCount").text(function (d) { return d.values && d.values.length || d._values && d._values.length ? "(" + (d.values && d.values.filter(function (d) { return filterZero ? filterZero(d) : true }).length || d._values && d._values.filter(function (d) { return filterZero ? filterZero(d) : true }).length || 0) + ")" : "" }) } }); node.order().on("click", function (d) { dispatch.elementClick({ row: this, data: d, pos: [d.x, d.y] }) }).on("dblclick", function (d) { dispatch.elementDblclick({ row: this, data: d, pos: [d.x, d.y] }) }).on("mouseover", function (d) { dispatch.elementMouseover({ row: this, data: d, pos: [d.x, d.y] }) }).on("mouseout", function (d) { dispatch.elementMouseout({ row: this, data: d, pos: [d.x, d.y] }) }); function click(d, _, unshift) { d3.event.stopPropagation(); if (d3.event.shiftKey && !unshift) { d3.event.shiftKey = false; d.values && d.values.forEach(function (node) { if (node.values || node._values) { click(node, 0, true) } }); return true } if (!hasChildren(d)) { return true } if (d.values) { d._values = d.values; d.values = null } else { d.values = d._values; d._values = null } chart.update() } function icon(d) { return d._values && d._values.length ? iconOpen : d.values && d.values.length ? iconClose : "" } function folded(d) { return d._values && d._values.length } function hasChildren(d) { var values = d.values || d._values; return values && values.length } }); return chart } chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); scatter.color(color); return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.header = function (_) { if (!arguments.length) return header; header = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.filterZero = function (_) { if (!arguments.length) return filterZero; filterZero = _; return chart }; chart.columns = function (_) { if (!arguments.length) return columns; columns = _; return chart }; chart.tableClass = function (_) { if (!arguments.length) return tableClass; tableClass = _; return chart }; chart.iconOpen = function (_) { if (!arguments.length) return iconOpen; iconOpen = _; return chart }; chart.iconClose = function (_) { if (!arguments.length) return iconClose; iconClose = _; return chart }; chart.getUrl = function (_) { if (!arguments.length) return getUrl; getUrl = _; return chart }; return chart }; nv.models.legend = function () { "use strict"; var margin = { top: 5, right: 0, bottom: 5, left: 0 }, width = 400, height = 20, getKey = function (d) { return d.key }, color = nv.utils.defaultColor(), align = true, rightAlign = true, updateState = true, radioButtonMode = false, dispatch = d3.dispatch("legendClick", "legendDblclick", "legendMouseover", "legendMouseout", "stateChange"); function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, container = d3.select(this); var wrap = container.selectAll("g.nv-legend").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-legend").append("g"); var g = wrap.select("g"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var series = g.selectAll(".nv-series").data(function (d) { return d }); var seriesEnter = series.enter().append("g").attr("class", "nv-series").on("mouseover", function (d, i) { dispatch.legendMouseover(d, i) }).on("mouseout", function (d, i) { dispatch.legendMouseout(d, i) }).on("click", function (d, i) { dispatch.legendClick(d, i); if (updateState) { if (radioButtonMode) { data.forEach(function (series) { series.disabled = true }); d.disabled = false } else { d.disabled = !d.disabled; if (data.every(function (series) { return series.disabled })) { data.forEach(function (series) { series.disabled = false }) } } dispatch.stateChange({ disabled: data.map(function (d) { return !!d.disabled }) }) } }).on("dblclick", function (d, i) { dispatch.legendDblclick(d, i); if (updateState) { data.forEach(function (series) { series.disabled = true }); d.disabled = false; dispatch.stateChange({ disabled: data.map(function (d) { return !!d.disabled }) }) } }); seriesEnter.append("circle").style("stroke-width", 2).attr("class", "nv-legend-symbol").attr("r", 5); seriesEnter.append("text").attr("text-anchor", "start").attr("class", "nv-legend-text").attr("dy", ".32em").attr("dx", "8"); series.classed("disabled", function (d) { return d.disabled }); series.exit().remove(); series.select("circle").style("fill", function (d, i) { return d.color || color(d, i) }).style("stroke", function (d, i) { return d.color || color(d, i) }); series.select("text").text(getKey); if (align) { var seriesWidths = []; series.each(function (d, i) { var legendText = d3.select(this).select("text"); var nodeTextLength; try { nodeTextLength = legendText.node().getComputedTextLength() } catch (e) { nodeTextLength = nv.utils.calcApproxTextWidth(legendText) } seriesWidths.push(nodeTextLength + 28) }); var seriesPerRow = 0; var legendWidth = 0; var columnWidths = []; while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) { columnWidths[seriesPerRow] = seriesWidths[seriesPerRow]; legendWidth += seriesWidths[seriesPerRow++] } if (seriesPerRow === 0) seriesPerRow = 1; while (legendWidth > availableWidth && seriesPerRow > 1) { columnWidths = []; seriesPerRow--; for (var k = 0; k < seriesWidths.length; k++) { if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k] } legendWidth = columnWidths.reduce(function (prev, cur, index, array) { return prev + cur }) } var xPositions = []; for (var i = 0, curX = 0; i < seriesPerRow; i++) { xPositions[i] = curX; curX += columnWidths[i] } series.attr("transform", function (d, i) { return "translate(" + xPositions[i % seriesPerRow] + "," + (5 + Math.floor(i / seriesPerRow) * 20) + ")" }); if (rightAlign) { g.attr("transform", "translate(" + (width - margin.right - legendWidth) + "," + margin.top + ")") } else { g.attr("transform", "translate(0" + "," + margin.top + ")") } height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * 20 } else { var ypos = 5, newxpos = 5, maxwidth = 0, xpos; series.attr("transform", function (d, i) { var length = d3.select(this).select("text").node().getComputedTextLength() + 28; xpos = newxpos; if (width < margin.left + margin.right + xpos + length) { newxpos = xpos = 5; ypos += 20 } newxpos += length; if (newxpos > maxwidth) maxwidth = newxpos; return "translate(" + xpos + "," + ypos + ")" }); g.attr("transform", "translate(" + (width - margin.right - maxwidth) + "," + margin.top + ")"); height = margin.top + margin.bottom + ypos + 15 } }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.key = function (_) { if (!arguments.length) return getKey; getKey = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.align = function (_) { if (!arguments.length) return align; align = _; return chart }; chart.rightAlign = function (_) { if (!arguments.length) return rightAlign; rightAlign = _; return chart }; chart.updateState = function (_) { if (!arguments.length) return updateState; updateState = _; return chart }; chart.radioButtonMode = function (_) { if (!arguments.length) return radioButtonMode; radioButtonMode = _; return chart }; return chart }; nv.models.line = function () { "use strict"; var scatter = nv.models.scatter(); var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, color = nv.utils.defaultColor(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, defined = function (d, i) { return !isNaN(getY(d, i)) && getY(d, i) !== null }, isArea = function (d) { return d.area }, clipEdge = false, x, y, interpolate = "linear"; scatter.size(16).sizeDomain([16, 256]); var x0, y0; function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); x = scatter.xScale(); y = scatter.yScale(); x0 = x0 || x; y0 = y0 || y; var wrap = container.selectAll("g.nv-wrap.nv-line").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-line"); var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-groups"); gEnter.append("g").attr("class", "nv-scatterWrap"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); scatter.width(availableWidth).height(availableHeight); var scatterWrap = wrap.select(".nv-scatterWrap"); scatterWrap.transition().call(scatter); defsEnter.append("clipPath").attr("id", "nv-edge-clip-" + scatter.id()).append("rect"); wrap.select("#nv-edge-clip-" + scatter.id() + " rect").attr("width", availableWidth).attr("height", availableHeight); g.attr("clip-path", clipEdge ? "url(#nv-edge-clip-" + scatter.id() + ")" : ""); scatterWrap.attr("clip-path", clipEdge ? "url(#nv-edge-clip-" + scatter.id() + ")" : ""); var groups = wrap.select(".nv-groups").selectAll(".nv-group").data(function (d) { return d }, function (d) { return d.key }); groups.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); groups.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(); groups.attr("class", function (d, i) { return "nv-group nv-series-" + i }).classed("hover", function (d) { return d.hover }).style("fill", function (d, i) { return color(d, i) }).style("stroke", function (d, i) { return color(d, i) }); groups.transition().style("stroke-opacity", 1).style("fill-opacity", .5); var areaPaths = groups.selectAll("path.nv-area").data(function (d) { return isArea(d) ? [d] : [] }); areaPaths.enter().append("path").attr("class", "nv-area").attr("d", function (d) { return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) { return nv.utils.NaNtoZero(x0(getX(d, i))) }).y0(function (d, i) { return nv.utils.NaNtoZero(y0(getY(d, i))) }).y1(function (d, i) { return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]) }).apply(this, [d.values]) }); groups.exit().selectAll("path.nv-area").remove(); areaPaths.transition().attr("d", function (d) { return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) { return nv.utils.NaNtoZero(x(getX(d, i))) }).y0(function (d, i) { return nv.utils.NaNtoZero(y(getY(d, i))) }).y1(function (d, i) { return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]) }).apply(this, [d.values]) }); var linePaths = groups.selectAll("path.nv-line").data(function (d) { return [d.values] }); linePaths.enter().append("path").attr("class", "nv-line").attr("d", d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) { return nv.utils.NaNtoZero(x0(getX(d, i))) }).y(function (d, i) { return nv.utils.NaNtoZero(y0(getY(d, i))) })); groups.exit().selectAll("path.nv-line").transition().attr("d", d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) { return nv.utils.NaNtoZero(x(getX(d, i))) }).y(function (d, i) { return nv.utils.NaNtoZero(y(getY(d, i))) })); linePaths.transition().attr("d", d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) { return nv.utils.NaNtoZero(x(getX(d, i))) }).y(function (d, i) { return nv.utils.NaNtoZero(y(getY(d, i))) })); x0 = x.copy(); y0 = y.copy() }); return chart } chart.dispatch = scatter.dispatch; chart.scatter = scatter; d3.rebind(chart, scatter, "id", "interactive", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "forceX", "forceY", "forceSize", "clipVoronoi", "useVoronoi", "clipRadius", "padData", "highlightPoint", "clearHighlights"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.x = function (_) { if (!arguments.length) return getX; getX = _; scatter.x(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; scatter.y(_); return chart }; chart.clipEdge = function (_) { if (!arguments.length) return clipEdge; clipEdge = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); scatter.color(color); return chart }; chart.interpolate = function (_) { if (!arguments.length) return interpolate; interpolate = _; return chart }; chart.defined = function (_) { if (!arguments.length) return defined; defined = _; return chart }; chart.isArea = function (_) { if (!arguments.length) return isArea; isArea = d3.functor(_); return chart }; return chart }; nv.models.lineChart = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var lines = nv.models.line(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(), interactiveLayer = nv.interactiveGuideline(); var margin = { top: 30, right: 20, bottom: 50, left: 60 }, color = nv.utils.defaultColor(), width = null, height = null, showLegend = true, showXAxis = true, showYAxis = true, rightAlignYAxis = false, useInteractiveGuideline = false, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, x, y, state = {}, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), transitionDuration = 250; xAxis.orient("bottom").tickPadding(7); yAxis.orient(rightAlignYAxis ? "right" : "left"); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(lines.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(lines.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, null, null, offsetElement) }; function chart(selection) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            selection.each(function (data) {]]></c>
                </r>
                <r>
                  <c><![CDATA[                var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = lines.xScale(); y = lines.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-lineChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-lineChart").append("g"); var g = wrap.select("g"); gEnter.append("rect").style("opacity", 0); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-linesWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-interactive"); g.select("rect").attr("width", availableWidth).attr("height", availableHeight); if (showLegend) { legend.width(availableWidth); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } wrap.select(".nv-legendWrap").attr("transform", "translate(0," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } if (useInteractiveGuideline) { interactiveLayer.width(availableWidth).height(availableHeight).margin({ left: margin.left, top: margin.top }).svgContainer(container).xScale(x); wrap.select(".nv-interactive").call(interactiveLayer) } lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); var linesWrap = g.select(".nv-linesWrap").datum(data.filter(function (d) { return !d.disabled })); linesWrap.transition().call(lines); if (showXAxis) { xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"); g.select(".nv-x.nv-axis").transition().call(xAxis) } if (showYAxis) {]]></c>
                </r>
                <r>
                  <c><![CDATA[                    yAxis.scale(y).ticks(availableHeight / 36).tickSize(-availableWidth, 0);]]></c>
                </r>
                <r>
                  <c><![CDATA[                    g.select(".nv-y.nv-axis").transition().call(yAxis)]]></c>
                </r>
                <r>
                  <c><![CDATA[                } legend.dispatch.on("stateChange", function (newState) { state = newState; dispatch.stateChange(state); chart.update() }); interactiveLayer.dispatch.on("elementMousemove", function (e) { lines.clearHighlights(); var singlePoint, pointIndex, pointXLocation, allData = []; data.filter(function (series, i) { series.seriesIndex = i; return !series.disabled }).forEach(function (series, i) { pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x()); lines.highlightPoint(i, pointIndex, true); var point = series.values[pointIndex]; if (typeof point === "undefined") return; if (typeof singlePoint === "undefined") singlePoint = point; if (typeof pointXLocation === "undefined") pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); allData.push({ key: series.key, value: chart.y()(point, pointIndex), color: color(series, series.seriesIndex) }) }); if (allData.length > 2) { var yValue = chart.yScale().invert(e.mouseY); var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]); var threshold = .03 * domainExtent; var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) { return d.value }), yValue, threshold); if (indexToHighlight !== null) allData[indexToHighlight].highlight = true } var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex)); interactiveLayer.tooltip.position({ left: pointXLocation + margin.left, top: e.mouseY + margin.top }).chartContainer(that.parentNode).enabled(tooltips).valueFormatter(function (d, i) { return yAxis.tickFormat()(d) }).data({ value: xValue, series: allData })(); interactiveLayer.renderGuideLine(pointXLocation) }); interactiveLayer.dispatch.on("elementMouseout", function (e) { dispatch.tooltipHide(); lines.clearHighlights() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } chart.update() })]]></c>
                </r>
                <r>
                  <c><![CDATA[            }); return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[        } lines.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.lines = lines; chart.legend = legend; chart.xAxis = xAxis; chart.yAxis = yAxis; chart.interactiveLayer = interactiveLayer; d3.rebind(chart, lines, "defined", "isArea", "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "useVoronoi", "id", "interpolate"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.useInteractiveGuideline = function (_) { if (!arguments.length) return useInteractiveGuideline; useInteractiveGuideline = _; if (_ === true) { chart.interactive(false); chart.useVoronoi(false) } return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.linePlusBarChart = function () { "use strict"; var lines = nv.models.line(), bars = nv.models.historicalBar(), xAxis = nv.models.axis(), y1Axis = nv.models.axis(), y2Axis = nv.models.axis(), legend = nv.models.legend(); var margin = { top: 30, right: 60, bottom: 50, left: 60 }, width = null, height = null, getX = function (d) { return d.x }, getY = function (d) { return d.y }, color = nv.utils.defaultColor(), showLegend = true, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, x, y1, y2, state = {}, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"); bars.padData(true); lines.clipEdge(false).padData(true); xAxis.orient("bottom").tickPadding(7).highlightZero(false); y1Axis.orient("left"); y2Axis.orient("right"); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(lines.x()(e.point, e.pointIndex)), y = (e.series.bar ? y1Axis : y2Axis).tickFormat()(lines.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "n" : "s", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().call(chart) }; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } var dataBars = data.filter(function (d) { return !d.disabled && d.bar }); var dataLines = data.filter(function (d) { return !d.bar }); x = dataLines.filter(function (d) { return !d.disabled }).length && dataLines.filter(function (d) { return !d.disabled })[0].values.length ? lines.xScale() : bars.xScale(); y1 = bars.yScale(); y2 = lines.yScale(); var wrap = d3.select(this).selectAll("g.nv-wrap.nv-linePlusBar").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-linePlusBar").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y1 nv-axis"); gEnter.append("g").attr("class", "nv-y2 nv-axis"); gEnter.append("g").attr("class", "nv-barsWrap"); gEnter.append("g").attr("class", "nv-linesWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); if (showLegend) { legend.width(availableWidth / 2); g.select(".nv-legendWrap").datum(data.map(function (series) { series.originalKey = series.originalKey === undefined ? series.key : series.originalKey; series.key = series.originalKey + (series.bar ? " (left axis)" : " (right axis)"); return series })).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".nv-legendWrap").attr("transform", "translate(" + availableWidth / 2 + "," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && !data[i].bar })); bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && data[i].bar })); var barsWrap = g.select(".nv-barsWrap").datum(dataBars.length ? dataBars : [{ values: [] }]); var linesWrap = g.select(".nv-linesWrap").datum(dataLines[0] && !dataLines[0].disabled ? dataLines : [{ values: [] }]); d3.transition(barsWrap).call(bars); d3.transition(linesWrap).call(lines); xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y1.range()[0] + ")"); d3.transition(g.select(".nv-x.nv-axis")).call(xAxis); y1Axis.scale(y1).ticks(availableHeight / 36).tickSize(-availableWidth, 0); d3.transition(g.select(".nv-y1.nv-axis")).style("opacity", dataBars.length ? 1 : 0).call(y1Axis); y2Axis.scale(y2).ticks(availableHeight / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); g.select(".nv-y2.nv-axis").style("opacity", dataLines.length ? 1 : 0).attr("transform", "translate(" + availableWidth + ",0)"); d3.transition(g.select(".nv-y2.nv-axis")).call(y2Axis); legend.dispatch.on("stateChange", function (newState) { state = newState; dispatch.stateChange(state); chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } chart.update() }) }); return chart } lines.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); bars.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); bars.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.legend = legend; chart.lines = lines; chart.bars = bars; chart.xAxis = xAxis; chart.y1Axis = y1Axis; chart.y2Axis = y2Axis; d3.rebind(chart, lines, "defined", "size", "clipVoronoi", "interpolate"); chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; lines.x(_); bars.x(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; lines.y(_); bars.y(_); return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; return chart }; nv.models.lineWithFocusChart = function () { "use strict"; var lines = nv.models.line(), lines2 = nv.models.line(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), x2Axis = nv.models.axis(), y2Axis = nv.models.axis(), legend = nv.models.legend(), brush = d3.svg.brush(); var margin = { top: 30, right: 30, bottom: 30, left: 60 }, margin2 = { top: 0, right: 30, bottom: 20, left: 60 }, color = nv.utils.defaultColor(), width = null, height = null, height2 = 100, x, y, x2, y2, showLegend = true, brushExtent = null, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "brush"), transitionDuration = 250; lines.clipEdge(true); lines2.interactive(false); xAxis.orient("bottom").tickPadding(5); yAxis.orient("left"); x2Axis.orient("bottom").tickPadding(5); y2Axis.orient("left"); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(lines.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(lines.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, null, null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight1 = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom - height2, availableHeight2 = height2 - margin2.top - margin2.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight1 / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = lines.xScale(); y = lines.yScale(); x2 = lines2.xScale(); y2 = lines2.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-lineWithFocusChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-lineWithFocusChart").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-legendWrap"); var focusEnter = gEnter.append("g").attr("class", "nv-focus"); focusEnter.append("g").attr("class", "nv-x nv-axis"); focusEnter.append("g").attr("class", "nv-y nv-axis"); focusEnter.append("g").attr("class", "nv-linesWrap"); var contextEnter = gEnter.append("g").attr("class", "nv-context"); contextEnter.append("g").attr("class", "nv-x nv-axis"); contextEnter.append("g").attr("class", "nv-y nv-axis"); contextEnter.append("g").attr("class", "nv-linesWrap"); contextEnter.append("g").attr("class", "nv-brushBackground"); contextEnter.append("g").attr("class", "nv-x nv-brush"); if (showLegend) { legend.width(availableWidth); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight1 = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom - height2 } g.select(".nv-legendWrap").attr("transform", "translate(0," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); lines2.defined(lines.defined()).width(availableWidth).height(availableHeight2).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); g.select(".nv-context").attr("transform", "translate(0," + (availableHeight1 + margin.bottom + margin2.top) + ")"); var contextLinesWrap = g.select(".nv-context .nv-linesWrap").datum(data.filter(function (d) { return !d.disabled })); d3.transition(contextLinesWrap).call(lines2); xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight1, 0); yAxis.scale(y).ticks(availableHeight1 / 36).tickSize(-availableWidth, 0); g.select(".nv-focus .nv-x.nv-axis").attr("transform", "translate(0," + availableHeight1 + ")"); brush.x(x2).on("brush", function () { var oldTransition = chart.transitionDuration(); chart.transitionDuration(0); onBrush(); chart.transitionDuration(oldTransition) }); if (brushExtent) brush.extent(brushExtent); var brushBG = g.select(".nv-brushBackground").selectAll("g").data([brushExtent || brush.extent()]); var brushBGenter = brushBG.enter().append("g"); brushBGenter.append("rect").attr("class", "left").attr("x", 0).attr("y", 0).attr("height", availableHeight2); brushBGenter.append("rect").attr("class", "right").attr("x", 0).attr("y", 0).attr("height", availableHeight2); var gBrush = g.select(".nv-x.nv-brush").call(brush); gBrush.selectAll("rect").attr("height", availableHeight2); gBrush.selectAll(".resize").append("path").attr("d", resizePath); onBrush(); x2Axis.scale(x2).ticks(availableWidth / 100).tickSize(-availableHeight2, 0); g.select(".nv-context .nv-x.nv-axis").attr("transform", "translate(0," + y2.range()[0] + ")"); d3.transition(g.select(".nv-context .nv-x.nv-axis")).call(x2Axis); y2Axis.scale(y2).ticks(availableHeight2 / 36).tickSize(-availableWidth, 0); d3.transition(g.select(".nv-context .nv-y.nv-axis")).call(y2Axis); g.select(".nv-context .nv-x.nv-axis").attr("transform", "translate(0," + y2.range()[0] + ")"); legend.dispatch.on("stateChange", function (newState) { chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); function resizePath(d) { var e = +(d == "e"), x = e ? 1 : -1, y = availableHeight2 / 3; return "M" + .5 * x + "," + y + "A6,6 0 0 " + e + " " + 6.5 * x + "," + (y + 6) + "V" + (2 * y - 6) + "A6,6 0 0 " + e + " " + .5 * x + "," + 2 * y + "Z" + "M" + 2.5 * x + "," + (y + 8) + "V" + (2 * y - 8) + "M" + 4.5 * x + "," + (y + 8) + "V" + (2 * y - 8) } function updateBrushBG() { if (!brush.empty()) brush.extent(brushExtent); brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) { var leftWidth = x2(d[0]) - x.range()[0], rightWidth = x.range()[1] - x2(d[1]); d3.select(this).select(".left").attr("width", leftWidth < 0 ? 0 : leftWidth); d3.select(this).select(".right").attr("x", x2(d[1])).attr("width", rightWidth < 0 ? 0 : rightWidth) }) } function onBrush() { brushExtent = brush.empty() ? null : brush.extent(); var extent = brush.empty() ? x2.domain() : brush.extent(); if (Math.abs(extent[0] - extent[1]) <= 1) { return } dispatch.brush({ extent: extent, brush: brush }); updateBrushBG(); var focusLinesWrap = g.select(".nv-focus .nv-linesWrap").datum(data.filter(function (d) { return !d.disabled }).map(function (d, i) { return { key: d.key, values: d.values.filter(function (d, i) { return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1] }) } })); focusLinesWrap.transition().duration(transitionDuration).call(lines); g.select(".nv-focus .nv-x.nv-axis").transition().duration(transitionDuration).call(xAxis); g.select(".nv-focus .nv-y.nv-axis").transition().duration(transitionDuration).call(yAxis) } }); return chart } lines.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.legend = legend; chart.lines = lines; chart.lines2 = lines2; chart.xAxis = xAxis; chart.yAxis = yAxis; chart.x2Axis = x2Axis; chart.y2Axis = y2Axis; d3.rebind(chart, lines, "defined", "isArea", "size", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "id"); chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return lines.x; lines.x(_); lines2.x(_); return chart }; chart.y = function (_) { if (!arguments.length) return lines.y; lines.y(_); lines2.y(_); return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.margin2 = function (_) { if (!arguments.length) return margin2; margin2 = _; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.height2 = function (_) { if (!arguments.length) return height2; height2 = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.interpolate = function (_) { if (!arguments.length) return lines.interpolate(); lines.interpolate(_); lines2.interpolate(_); return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.xTickFormat = function (_) { if (!arguments.length) return xAxis.tickFormat(); xAxis.tickFormat(_); x2Axis.tickFormat(_); return chart }; chart.yTickFormat = function (_) { if (!arguments.length) return yAxis.tickFormat(); yAxis.tickFormat(_); y2Axis.tickFormat(_); return chart }; chart.brushExtent = function (_) { if (!arguments.length) return brushExtent; brushExtent = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart }; nv.models.linePlusBarWithFocusChart = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var lines = nv.models.line(), lines2 = nv.models.line(), bars = nv.models.historicalBar(), bars2 = nv.models.historicalBar(), xAxis = nv.models.axis(), x2Axis = nv.models.axis(), y1Axis = nv.models.axis(), y2Axis = nv.models.axis(), y3Axis = nv.models.axis(), y4Axis = nv.models.axis(), legend = nv.models.legend(), brush = d3.svg.brush(); var margin = { top: 30, right: 30, bottom: 30, left: 60 }, margin2 = { top: 0, right: 30, bottom: 20, left: 60 }, width = null, height = null, height2 = 100, getX = function (d) { return d.x }, getY = function (d) { return d.y }, color = nv.utils.defaultColor(), showLegend = true, extent, brushExtent = null, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, x, x2, y1, y2, y3, y4, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "brush"), transitionDuration = 0; lines.clipEdge(true); lines2.interactive(false); xAxis.orient("bottom").tickPadding(5); y1Axis.orient("left"); y2Axis.orient("right"); x2Axis.orient("bottom").tickPadding(5); y3Axis.orient("left"); y4Axis.orient("right"); var showTooltip = function (e, offsetElement) { if (extent) { e.pointIndex += Math.ceil(extent[0]) } var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(lines.x()(e.point, e.pointIndex)), y = (e.series.bar ? y1Axis : y2Axis).tickFormat()(lines.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "n" : "s", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight1 = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom - height2, availableHeight2 = height2 - margin2.top - margin2.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight1 / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } var dataBars = data.filter(function (d) { return !d.disabled && d.bar }); var dataLines = data.filter(function (d) { return !d.bar }); x = bars.xScale(); x2 = x2Axis.scale(); y1 = bars.yScale(); y2 = lines.yScale(); y3 = bars2.yScale(); y4 = lines2.yScale(); var series1 = data.filter(function (d) { return !d.disabled && d.bar }).map(function (d) { return d.values.map(function (d, i) { return { x: getX(d, i), y: getY(d, i) } }) }); var series2 = data.filter(function (d) { return !d.disabled && !d.bar }).map(function (d) { return d.values.map(function (d, i) { return { x: getX(d, i), y: getY(d, i) } }) }); x.range([0, availableWidth]); x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) { return d.x })).range([0, availableWidth]); var wrap = container.selectAll("g.nv-wrap.nv-linePlusBar").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-linePlusBar").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-legendWrap"); var focusEnter = gEnter.append("g").attr("class", "nv-focus"); focusEnter.append("g").attr("class", "nv-x nv-axis"); focusEnter.append("g").attr("class", "nv-y1 nv-axis"); focusEnter.append("g").attr("class", "nv-y2 nv-axis"); focusEnter.append("g").attr("class", "nv-barsWrap"); focusEnter.append("g").attr("class", "nv-linesWrap"); var contextEnter = gEnter.append("g").attr("class", "nv-context"); contextEnter.append("g").attr("class", "nv-x nv-axis"); contextEnter.append("g").attr("class", "nv-y1 nv-axis"); contextEnter.append("g").attr("class", "nv-y2 nv-axis"); contextEnter.append("g").attr("class", "nv-barsWrap"); contextEnter.append("g").attr("class", "nv-linesWrap"); contextEnter.append("g").attr("class", "nv-brushBackground"); contextEnter.append("g").attr("class", "nv-x nv-brush"); if (showLegend) { legend.width(availableWidth / 2); g.select(".nv-legendWrap").datum(data.map(function (series) { series.originalKey = series.originalKey === undefined ? series.key : series.originalKey; series.key = series.originalKey + (series.bar ? " (left axis)" : " (right axis)"); return series })).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight1 = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom - height2 } g.select(".nv-legendWrap").attr("transform", "translate(" + availableWidth / 2 + "," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && data[i].bar })); lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && !data[i].bar })); var bars2Wrap = g.select(".nv-context .nv-barsWrap").datum(dataBars.length ? dataBars : [{ values: [] }]); var lines2Wrap = g.select(".nv-context .nv-linesWrap").datum(!dataLines[0].disabled ? dataLines : [{ values: [] }]); g.select(".nv-context").attr("transform", "translate(0," + (availableHeight1 + margin.bottom + margin2.top) + ")"); bars2Wrap.transition().call(bars2); lines2Wrap.transition().call(lines2); brush.x(x2).on("brush", onBrush); if (brushExtent) brush.extent(brushExtent); var brushBG = g.select(".nv-brushBackground").selectAll("g").data([brushExtent || brush.extent()]); var brushBGenter = brushBG.enter().append("g"); brushBGenter.append("rect").attr("class", "left").attr("x", 0).attr("y", 0).attr("height", availableHeight2); brushBGenter.append("rect").attr("class", "right").attr("x", 0).attr("y", 0).attr("height", availableHeight2); var gBrush = g.select(".nv-x.nv-brush").call(brush); gBrush.selectAll("rect").attr("height", availableHeight2); gBrush.selectAll(".resize").append("path").attr("d", resizePath); x2Axis.ticks(availableWidth / 100).tickSize(-availableHeight2, 0); g.select(".nv-context .nv-x.nv-axis").attr("transform", "translate(0," + y3.range()[0] + ")"); g.select(".nv-context .nv-x.nv-axis").transition().call(x2Axis); y3Axis.scale(y3).ticks(availableHeight2 / 36).tickSize(-availableWidth, 0); g.select(".nv-context .nv-y1.nv-axis").style("opacity", dataBars.length ? 1 : 0).attr("transform", "translate(0," + x2.range()[0] + ")"); g.select(".nv-context .nv-y1.nv-axis").transition().call(y3Axis); y4Axis.scale(y4).ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); g.select(".nv-context .nv-y2.nv-axis").style("opacity", dataLines.length ? 1 : 0).attr("transform", "translate(" + x2.range()[1] + ",0)"); g.select(".nv-context .nv-y2.nv-axis").transition().call(y4Axis); legend.dispatch.on("stateChange", function (newState) { chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); function resizePath(d) { var e = +(d == "e"), x = e ? 1 : -1, y = availableHeight2 / 3; return "M" + .5 * x + "," + y + "A6,6 0 0 " + e + " " + 6.5 * x + "," + (y + 6) + "V" + (2 * y - 6) + "A6,6 0 0 " + e + " " + .5 * x + "," + 2 * y + "Z" + "M" + 2.5 * x + "," + (y + 8) + "V" + (2 * y - 8) + "M" + 4.5 * x + "," + (y + 8) + "V" + (2 * y - 8) } function updateBrushBG() { if (!brush.empty()) brush.extent(brushExtent); brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) { var leftWidth = x2(d[0]) - x2.range()[0], rightWidth = x2.range()[1] - x2(d[1]); d3.select(this).select(".left").attr("width", leftWidth < 0 ? 0 : leftWidth); d3.select(this).select(".right").attr("x", x2(d[1])).attr("width", rightWidth < 0 ? 0 : rightWidth) }) } function onBrush() { brushExtent = brush.empty() ? null : brush.extent(); extent = brush.empty() ? x2.domain() : brush.extent(); dispatch.brush({ extent: extent, brush: brush }); updateBrushBG(); bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && data[i].bar })); lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled && !data[i].bar })); var focusBarsWrap = g.select(".nv-focus .nv-barsWrap").datum(!dataBars.length ? [{ values: [] }] : dataBars.map(function (d, i) { return { key: d.key, values: d.values.filter(function (d, i) { return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1] }) } })); var focusLinesWrap = g.select(".nv-focus .nv-linesWrap").datum(dataLines[0].disabled ? [{ values: [] }] : dataLines.map(function (d, i) { return { key: d.key, values: d.values.filter(function (d, i) { return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1] }) } })); if (dataBars.length) { x = bars.xScale() } else { x = lines.xScale() } xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight1, 0); xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]); g.select(".nv-x.nv-axis").transition().duration(transitionDuration).call(xAxis); focusBarsWrap.transition().duration(transitionDuration).call(bars); focusLinesWrap.transition().duration(transitionDuration).call(lines); g.select(".nv-focus .nv-x.nv-axis").attr("transform", "translate(0," + y1.range()[0] + ")"); y1Axis.scale(y1).ticks(availableHeight1 / 36).tickSize(-availableWidth, 0); g.select(".nv-focus .nv-y1.nv-axis").style("opacity", dataBars.length ? 1 : 0); y2Axis.scale(y2).ticks(availableHeight1 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); g.select(".nv-focus .nv-y2.nv-axis").style("opacity", dataLines.length ? 1 : 0).attr("transform", "translate(" + x.range()[1] + ",0)"); g.select(".nv-focus .nv-y1.nv-axis").transition().duration(transitionDuration).call(y1Axis); g.select(".nv-focus .nv-y2.nv-axis").transition().duration(transitionDuration).call(y2Axis) } onBrush() }); return chart } lines.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); bars.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); bars.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.legend = legend; chart.lines = lines; chart.lines2 = lines2; chart.bars = bars; chart.bars2 = bars2; chart.xAxis = xAxis; chart.x2Axis = x2Axis; chart.y1Axis = y1Axis; chart.y2Axis = y2Axis; chart.y3Axis = y3Axis; chart.y4Axis = y4Axis; d3.rebind(chart, lines, "defined", "size", "clipVoronoi", "interpolate"); chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; lines.x(_); bars.x(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; lines.y(_); bars.y(_); return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            if (!arguments.length) return width;]]></c>
                </r>
                <r>
                  <c><![CDATA[            width = _; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[        }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.brushExtent = function (_) { if (!arguments.length) return brushExtent; brushExtent = _; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.multiBar = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, x = d3.scale.ordinal(), y = d3.scale.linear(), id = Math.floor(Math.random() * 1e4), getX = function (d) { return d.x }, getY = function (d) { return d.y }, forceY = [0], clipEdge = true, stacked = false, stackOffset = "zero", color = nv.utils.defaultColor(), hideable = false, barColor = null, disabled, delay = 1200, xDomain, yDomain, xRange, yRange, groupSpacing = .1, dispatch = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"); var x0, y0; function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); if (hideable && data.length) hideable = [{ values: data[0].values.map(function (d) { return { x: d.x, y: 0, series: d.series, size: .01 } }) }]; if (stacked) data = d3.layout.stack().offset(stackOffset).values(function (d) { return d.values }).y(getY)(!data.length && hideable ? hideable : data); data.forEach(function (series, i) { series.values.forEach(function (point) { point.series = i }) }); if (stacked) data[0].values.map(function (d, i) { var posBase = 0, negBase = 0; data.map(function (d) { var f = d.values[i]; f.size = Math.abs(f.y); if (f.y < 0) { f.y1 = negBase; negBase = negBase - f.size } else { f.y1 = f.size + posBase; posBase = posBase + f.size } }) }); var seriesData = xDomain && yDomain ? [] : data.map(function (d) { return d.values.map(function (d, i) { return { x: getX(d, i), y: getY(d, i), y0: d.y0, y1: d.y1 } }) }); x.domain(xDomain || d3.merge(seriesData).map(function (d) { return d.x })).rangeBands(xRange || [0, availableWidth], groupSpacing); y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) { return stacked ? d.y > 0 ? d.y1 : d.y1 + d.y : d.y }).concat(forceY))).range(yRange || [availableHeight, 0]); if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * .01, x.domain()[1] + x.domain()[1] * .01]) : x.domain([-1, 1]); if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * .01, y.domain()[1] - y.domain()[1] * .01]) : y.domain([-1, 1]); x0 = x0 || x; y0 = y0 || y; var wrap = container.selectAll("g.nv-wrap.nv-multibar").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-multibar"); var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-groups"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); defsEnter.append("clipPath").attr("id", "nv-edge-clip-" + id).append("rect"); wrap.select("#nv-edge-clip-" + id + " rect").attr("width", availableWidth).attr("height", availableHeight); g.attr("clip-path", clipEdge ? "url(#nv-edge-clip-" + id + ")" : ""); var groups = wrap.select(".nv-groups").selectAll(".nv-group").data(function (d) { return d }, function (d, i) { return i }); groups.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); groups.exit().transition().selectAll("rect.nv-bar").delay(function (d, i) { return i * delay / data[0].values.length }).attr("y", function (d) { return stacked ? y0(d.y0) : y0(0) }).attr("height", 0).remove(); groups.attr("class", function (d, i) { return "nv-group nv-series-" + i }).classed("hover", function (d) { return d.hover }).style("fill", function (d, i) { return color(d, i) }).style("stroke", function (d, i) { return color(d, i) }); groups.transition().style("stroke-opacity", 1).style("fill-opacity", .75); var bars = groups.selectAll("rect.nv-bar").data(function (d) { return hideable && !data.length ? hideable.values : d.values }); bars.exit().remove(); var barsEnter = bars.enter().append("rect").attr("class", function (d, i) { return getY(d, i) < 0 ? "nv-bar negative" : "nv-bar positive" }).attr("x", function (d, i, j) { return stacked ? 0 : j * x.rangeBand() / data.length }).attr("y", function (d) { return y0(stacked ? d.y0 : 0) }).attr("height", 0).attr("width", x.rangeBand() / (stacked ? 1 : data.length)).attr("transform", function (d, i) { return "translate(" + x(getX(d, i)) + ",0)" }); bars.style("fill", function (d, i, j) { return color(d, j, i) }).style("stroke", function (d, i, j) { return color(d, j, i) }).on("mouseover", function (d, i) { d3.select(this).classed("hover", true); dispatch.elementMouseover({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length, y(getY(d, i) + (stacked ? d.y0 : 0))], pointIndex: i, seriesIndex: d.series, e: d3.event }) }).on("mouseout", function (d, i) { d3.select(this).classed("hover", false); dispatch.elementMouseout({ value: getY(d, i), point: d, series: data[d.series], pointIndex: i, seriesIndex: d.series, e: d3.event }) }).on("click", function (d, i) { dispatch.elementClick({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length, y(getY(d, i) + (stacked ? d.y0 : 0))], pointIndex: i, seriesIndex: d.series, e: d3.event }); d3.event.stopPropagation() }).on("dblclick", function (d, i) { dispatch.elementDblClick({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length, y(getY(d, i) + (stacked ? d.y0 : 0))], pointIndex: i, seriesIndex: d.series, e: d3.event }); d3.event.stopPropagation() }); bars.attr("class", function (d, i) { return getY(d, i) < 0 ? "nv-bar negative" : "nv-bar positive" }).transition().attr("transform", function (d, i) { return "translate(" + x(getX(d, i)) + ",0)" }); if (barColor) { if (!disabled) disabled = data.map(function () { return true }); bars.style("fill", function (d, i, j) { return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) { return i }).filter(function (d, i) { return !disabled[i] })[j]).toString() }).style("stroke", function (d, i, j) { return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) { return i }).filter(function (d, i) { return !disabled[i] })[j]).toString() }) } if (stacked) bars.transition().delay(function (d, i) { return i * delay / data[0].values.length }).attr("y", function (d, i) { return y(stacked ? d.y1 : 0) }).attr("height", function (d, i) { return Math.max(Math.abs(y(d.y + (stacked ? d.y0 : 0)) - y(stacked ? d.y0 : 0)), 1) }).attr("x", function (d, i) { return stacked ? 0 : d.series * x.rangeBand() / data.length }).attr("width", x.rangeBand() / (stacked ? 1 : data.length)); else bars.transition().delay(function (d, i) { return i * delay / data[0].values.length }).attr("x", function (d, i) { return d.series * x.rangeBand() / data.length }).attr("width", x.rangeBand() / data.length).attr("y", function (d, i) { return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0 }).attr("height", function (d, i) { return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0 }); x0 = x.copy(); y0 = y.copy() }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.forceY = function (_) { if (!arguments.length) return forceY; forceY = _; return chart }; chart.stacked = function (_) { if (!arguments.length) return stacked; stacked = _; return chart }; chart.stackOffset = function (_) { if (!arguments.length) return stackOffset; stackOffset = _; return chart }; chart.clipEdge = function (_) { if (!arguments.length) return clipEdge; clipEdge = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.barColor = function (_) { if (!arguments.length) return barColor; barColor = nv.utils.getColor(_); return chart }; chart.disabled = function (_) { if (!arguments.length) return disabled; disabled = _; return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.hideable = function (_) { if (!arguments.length) return hideable; hideable = _; return chart }; chart.delay = function (_) { if (!arguments.length) return delay; delay = _; return chart }; chart.groupSpacing = function (_) { if (!arguments.length) return groupSpacing; groupSpacing = _; return chart }; return chart }; nv.models.multiBarChart = function () { "use strict"; var multibar = nv.models.multiBar(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(), controls = nv.models.legend(); var margin = { top: 30, right: 20, bottom: 50, left: 60 }, width = null, height = null, color = nv.utils.defaultColor(), showControls = true, showLegend = true, showXAxis = true, showYAxis = true, rightAlignYAxis = false, reduceXTicks = true, staggerLabels = false, rotateLabels = 0, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " on " + x + "</p>" }, x, y, state = { stacked: false }, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), controlWidth = function () { return showControls ? 180 : 0 }, transitionDuration = 250; multibar.stacked(false); xAxis.orient("bottom").tickPadding(7).highlightZero(true).showMaxMin(false).tickFormat(function (d) { return d }); yAxis.orient(rightAlignYAxis ? "right" : "left").tickFormat(d3.format(",.1f")); controls.updateState(false); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(multibar.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(multibar.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "n" : "s", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = multibar.xScale(); y = multibar.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-multiBarWithLegend").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-multiBarWithLegend").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-barsWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-controlsWrap"); if (showLegend) { legend.width(availableWidth - controlWidth()); if (multibar.barColor()) data.forEach(function (series, i) { series.color = d3.rgb("#ccc").darker(i * 1.5).toString() }); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".nv-legendWrap").attr("transform", "translate(" + controlWidth() + "," + -margin.top + ")") } if (showControls) { var controlsData = [{ key: "Grouped", disabled: multibar.stacked() }, { key: "Stacked", disabled: !multibar.stacked() }]; controls.width(controlWidth()).color(["#444", "#444", "#444"]); g.select(".nv-controlsWrap").datum(controlsData).attr("transform", "translate(0," + -margin.top + ")").call(controls) } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } multibar.disabled(data.map(function (series) { return series.disabled })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); var barsWrap = g.select(".nv-barsWrap").datum(data.filter(function (d) { return !d.disabled })); barsWrap.transition().call(multibar); if (showXAxis) { xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"); g.select(".nv-x.nv-axis").transition().call(xAxis); var xTicks = g.select(".nv-x.nv-axis > g").selectAll("g"); xTicks.selectAll("line, text").style("opacity", 1); if (staggerLabels) { var getTranslate = function (x, y) { return "translate(" + x + "," + y + ")" }; var staggerUp = 5, staggerDown = 17; xTicks.selectAll("text").attr("transform", function (d, i, j) { return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown) }); var totalInBetweenTicks = d3.selectAll(".nv-x.nv-axis .nv-wrap g g text")[0].length; g.selectAll(".nv-x.nv-axis .nv-axisMaxMin text").attr("transform", function (d, i) { return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp) }) } if (reduceXTicks) xTicks.filter(function (d, i) { return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0 }).selectAll("text, line").style("opacity", 0); if (rotateLabels) xTicks.selectAll(".tick text").attr("transform", "rotate(" + rotateLabels + " 0,0)").style("text-anchor", rotateLabels > 0 ? "start" : "end"); g.select(".nv-x.nv-axis").selectAll("g.nv-axisMaxMin text").style("opacity", 1) } if (showYAxis) { yAxis.scale(y).ticks(availableHeight / 36).tickSize(-availableWidth, 0); g.select(".nv-y.nv-axis").transition().call(yAxis) } legend.dispatch.on("stateChange", function (newState) { state = newState; dispatch.stateChange(state); chart.update() }); controls.dispatch.on("legendClick", function (d, i) { if (!d.disabled) return; controlsData = controlsData.map(function (s) { s.disabled = true; return s }); d.disabled = false; switch (d.key) { case "Grouped": multibar.stacked(false); break; case "Stacked": multibar.stacked(true); break } state.stacked = multibar.stacked(); dispatch.stateChange(state); chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } if (typeof e.stacked !== "undefined") { multibar.stacked(e.stacked); state.stacked = e.stacked } chart.update() }) }); return chart } multibar.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); multibar.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.multibar = multibar; chart.legend = legend; chart.xAxis = xAxis; chart.yAxis = yAxis; d3.rebind(chart, multibar, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "clipEdge", "id", "stacked", "stackOffset", "delay", "barColor", "groupSpacing"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showControls = function (_) { if (!arguments.length) return showControls; showControls = _; return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.reduceXTicks = function (_) { if (!arguments.length) return reduceXTicks; reduceXTicks = _; return chart }; chart.rotateLabels = function (_) { if (!arguments.length) return rotateLabels; rotateLabels = _; return chart }; chart.staggerLabels = function (_) { if (!arguments.length) return staggerLabels; staggerLabels = _; return chart }; chart.tooltip = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart }; nv.models.multiBarHorizontal = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, id = Math.floor(Math.random() * 1e4), x = d3.scale.ordinal(), y = d3.scale.linear(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, forceY = [0], color = nv.utils.defaultColor(), barColor = null, disabled, stacked = false, showValues = false, valuePadding = 60, valueFormat = d3.format(",.2f"), delay = 1200, xDomain, yDomain, xRange, yRange, dispatch = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"); var x0, y0; function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); if (stacked) data = d3.layout.stack().offset("zero").values(function (d) { return d.values }).y(getY)(data); data.forEach(function (series, i) { series.values.forEach(function (point) { point.series = i }) }); if (stacked) data[0].values.map(function (d, i) { var posBase = 0, negBase = 0; data.map(function (d) { var f = d.values[i]; f.size = Math.abs(f.y); if (f.y < 0) { f.y1 = negBase - f.size; negBase = negBase - f.size } else { f.y1 = posBase; posBase = posBase + f.size } }) }); var seriesData = xDomain && yDomain ? [] : data.map(function (d) { return d.values.map(function (d, i) { return { x: getX(d, i), y: getY(d, i), y0: d.y0, y1: d.y1 } }) }); x.domain(xDomain || d3.merge(seriesData).map(function (d) { return d.x })).rangeBands(xRange || [0, availableHeight], .1); y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) { return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y }).concat(forceY))); if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]); else y.range(yRange || [0, availableWidth]); x0 = x0 || x; y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); var wrap = d3.select(this).selectAll("g.nv-wrap.nv-multibarHorizontal").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-multibarHorizontal"); var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-groups"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var groups = wrap.select(".nv-groups").selectAll(".nv-group").data(function (d) { return d }, function (d, i) { return i }); groups.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); groups.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(); groups.attr("class", function (d, i) { return "nv-group nv-series-" + i }).classed("hover", function (d) { return d.hover }).style("fill", function (d, i) { return color(d, i) }).style("stroke", function (d, i) { return color(d, i) }); groups.transition().style("stroke-opacity", 1).style("fill-opacity", .75); var bars = groups.selectAll("g.nv-bar").data(function (d) { return d.values }); bars.exit().remove(); var barsEnter = bars.enter().append("g").attr("transform", function (d, i, j) { return "translate(" + y0(stacked ? d.y0 : 0) + "," + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ")" }); barsEnter.append("rect").attr("width", 0).attr("height", x.rangeBand() / (stacked ? 1 : data.length)); bars.on("mouseover", function (d, i) { d3.select(this).classed("hover", true); dispatch.elementMouseover({ value: getY(d, i), point: d, series: data[d.series], pos: [y(getY(d, i) + (stacked ? d.y0 : 0)), x(getX(d, i)) + x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length], pointIndex: i, seriesIndex: d.series, e: d3.event }) }).on("mouseout", function (d, i) { d3.select(this).classed("hover", false); dispatch.elementMouseout({ value: getY(d, i), point: d, series: data[d.series], pointIndex: i, seriesIndex: d.series, e: d3.event }) }).on("click", function (d, i) { dispatch.elementClick({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length, y(getY(d, i) + (stacked ? d.y0 : 0))], pointIndex: i, seriesIndex: d.series, e: d3.event }); d3.event.stopPropagation() }).on("dblclick", function (d, i) { dispatch.elementDblClick({ value: getY(d, i), point: d, series: data[d.series], pos: [x(getX(d, i)) + x.rangeBand() * (stacked ? data.length / 2 : d.series + .5) / data.length, y(getY(d, i) + (stacked ? d.y0 : 0))], pointIndex: i, seriesIndex: d.series, e: d3.event }); d3.event.stopPropagation() }); barsEnter.append("text"); if (showValues && !stacked) { bars.select("text").attr("text-anchor", function (d, i) { return getY(d, i) < 0 ? "end" : "start" }).attr("y", x.rangeBand() / (data.length * 2)).attr("dy", ".32em").text(function (d, i) { return valueFormat(getY(d, i)) }); bars.transition().select("text").attr("x", function (d, i) { return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4 }) } else { bars.selectAll("text").text("") } bars.attr("class", function (d, i) { return getY(d, i) < 0 ? "nv-bar negative" : "nv-bar positive" }); if (barColor) { if (!disabled) disabled = data.map(function () { return true }); bars.style("fill", function (d, i, j) { return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) { return i }).filter(function (d, i) { return !disabled[i] })[j]).toString() }).style("stroke", function (d, i, j) { return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) { return i }).filter(function (d, i) { return !disabled[i] })[j]).toString() }) } if (stacked) bars.transition().attr("transform", function (d, i) { return "translate(" + y(d.y1) + "," + x(getX(d, i)) + ")" }).select("rect").attr("width", function (d, i) { return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) }).attr("height", x.rangeBand()); else bars.transition().attr("transform", function (d, i) { return "translate(" + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + "," + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ")" }).select("rect").attr("height", x.rangeBand() / data.length).attr("width", function (d, i) { return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) }); x0 = x.copy(); y0 = y.copy() }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.forceY = function (_) { if (!arguments.length) return forceY; forceY = _; return chart }; chart.stacked = function (_) { if (!arguments.length) return stacked; stacked = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.barColor = function (_) { if (!arguments.length) return barColor; barColor = nv.utils.getColor(_); return chart }; chart.disabled = function (_) { if (!arguments.length) return disabled; disabled = _; return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.delay = function (_) { if (!arguments.length) return delay; delay = _; return chart }; chart.showValues = function (_) { if (!arguments.length) return showValues; showValues = _; return chart }; chart.valueFormat = function (_) { if (!arguments.length) return valueFormat; valueFormat = _; return chart }; chart.valuePadding = function (_) { if (!arguments.length) return valuePadding; valuePadding = _; return chart }; return chart }; nv.models.multiBarHorizontalChart = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var multibar = nv.models.multiBarHorizontal(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend().height(30), controls = nv.models.legend().height(30); var margin = { top: 30, right: 20, bottom: 50, left: 60 }, width = null, height = null, color = nv.utils.defaultColor(), showControls = true, showLegend = true, stacked = false, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + " - " + x + "</h3>" + "<p>" + y + "</p>" }, x, y, state = { stacked: stacked }, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), controlWidth = function () { return showControls ? 180 : 0 }, transitionDuration = 250; multibar.stacked(stacked); xAxis.orient("left").tickPadding(5).highlightZero(false).showMaxMin(false).tickFormat(function (d) { return d }); yAxis.orient("bottom").tickFormat(d3.format(",.1f")); controls.updateState(false); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(multibar.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(multibar.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "e" : "w", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = multibar.xScale(); y = multibar.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-multiBarHorizontalChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-multiBarHorizontalChart").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-barsWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-controlsWrap"); if (showLegend) { legend.width(availableWidth - controlWidth()); if (multibar.barColor()) data.forEach(function (series, i) { series.color = d3.rgb("#ccc").darker(i * 1.5).toString() }); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".nv-legendWrap").attr("transform", "translate(" + controlWidth() + "," + -margin.top + ")") } if (showControls) { var controlsData = [{ key: "Grouped", disabled: multibar.stacked() }, { key: "Stacked", disabled: !multibar.stacked() }]; controls.width(controlWidth()).color(["#444", "#444", "#444"]); g.select(".nv-controlsWrap").datum(controlsData).attr("transform", "translate(0," + -margin.top + ")").call(controls) } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); multibar.disabled(data.map(function (series) { return series.disabled })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); var barsWrap = g.select(".nv-barsWrap").datum(data.filter(function (d) { return !d.disabled })); barsWrap.transition().call(multibar); xAxis.scale(x).ticks(availableHeight / 24).tickSize(-availableWidth, 0); g.select(".nv-x.nv-axis").transition().call(xAxis); var xTicks = g.select(".nv-x.nv-axis").selectAll("g"); xTicks.selectAll("line, text").style("opacity", 1); yAxis.scale(y).ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-y.nv-axis").attr("transform", "translate(0," + availableHeight + ")"); g.select(".nv-y.nv-axis").transition().call(yAxis); legend.dispatch.on("stateChange", function (newState) { state = newState; dispatch.stateChange(state); chart.update() }); controls.dispatch.on("legendClick", function (d, i) { if (!d.disabled) return; controlsData = controlsData.map(function (s) { s.disabled = true; return s }); d.disabled = false; switch (d.key) { case "Grouped": multibar.stacked(false); break; case "Stacked": multibar.stacked(true); break } state.stacked = multibar.stacked(); dispatch.stateChange(state); chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } if (typeof e.stacked !== "undefined") { multibar.stacked(e.stacked); state.stacked = e.stacked } selection.call(chart) }) }); return chart } multibar.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); multibar.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.multibar = multibar; chart.legend = legend; chart.xAxis = xAxis; chart.yAxis = yAxis; d3.rebind(chart, multibar, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "clipEdge", "id", "delay", "showValues", "valueFormat", "stacked", "barColor"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            if (!arguments.length) return width;]]></c>
                </r>
                <r>
                  <c><![CDATA[            width = _; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[        }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); return chart }; chart.showControls = function (_) { if (!arguments.length) return showControls; showControls = _; return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.tooltip = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.multiChart = function () { "use strict"; var margin = { top: 30, right: 20, bottom: 50, left: 60 }, color = d3.scale.category20().range(), width = null, height = null, showLegend = true, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " at " + x + "</p>" }, x, y, yDomain1, yDomain2; var x = d3.scale.linear(), yScale1 = d3.scale.linear(), yScale2 = d3.scale.linear(), lines1 = nv.models.line().yScale(yScale1), lines2 = nv.models.line().yScale(yScale2), bars1 = nv.models.multiBar().stacked(false).yScale(yScale1), bars2 = nv.models.multiBar().stacked(false).yScale(yScale2), stack1 = nv.models.stackedArea().yScale(yScale1), stack2 = nv.models.stackedArea().yScale(yScale2), xAxis = nv.models.axis().scale(x).orient("bottom").tickPadding(5), yAxis1 = nv.models.axis().scale(yScale1).orient("left"), yAxis2 = nv.models.axis().scale(yScale2).orient("right"), legend = nv.models.legend().height(30), dispatch = d3.dispatch("tooltipShow", "tooltipHide"); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(lines1.x()(e.point, e.pointIndex)), y = (e.series.yAxis == 2 ? yAxis2 : yAxis1).tickFormat()(lines1.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, undefined, undefined, offsetElement.offsetParent) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; chart.update = function () { container.transition().call(chart) }; chart.container = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; var dataLines1 = data.filter(function (d) { return !d.disabled && d.type == "line" && d.yAxis == 1 }); var dataLines2 = data.filter(function (d) { return !d.disabled && d.type == "line" && d.yAxis == 2 }); var dataBars1 = data.filter(function (d) { return !d.disabled && d.type == "bar" && d.yAxis == 1 }); var dataBars2 = data.filter(function (d) { return !d.disabled && d.type == "bar" && d.yAxis == 2 }); var dataStack1 = data.filter(function (d) { return !d.disabled && d.type == "area" && d.yAxis == 1 }); var dataStack2 = data.filter(function (d) { return !d.disabled && d.type == "area" && d.yAxis == 2 }); var series1 = data.filter(function (d) { return !d.disabled && d.yAxis == 1 }).map(function (d) { return d.values.map(function (d, i) { return { x: d.x, y: d.y } }) }); var series2 = data.filter(function (d) { return !d.disabled && d.yAxis == 2 }).map(function (d) { return d.values.map(function (d, i) { return { x: d.x, y: d.y } }) }); x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) { return d.x })).range([0, availableWidth]); var wrap = container.selectAll("g.wrap.multiChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "wrap nvd3 multiChart").append("g"); gEnter.append("g").attr("class", "x axis"); gEnter.append("g").attr("class", "y1 axis"); gEnter.append("g").attr("class", "y2 axis"); gEnter.append("g").attr("class", "lines1Wrap"); gEnter.append("g").attr("class", "lines2Wrap"); gEnter.append("g").attr("class", "bars1Wrap"); gEnter.append("g").attr("class", "bars2Wrap"); gEnter.append("g").attr("class", "stack1Wrap"); gEnter.append("g").attr("class", "stack2Wrap"); gEnter.append("g").attr("class", "legendWrap"); var g = wrap.select("g"); if (showLegend) { legend.width(availableWidth / 2); g.select(".legendWrap").datum(data.map(function (series) { series.originalKey = series.originalKey === undefined ? series.key : series.originalKey; series.key = series.originalKey + (series.yAxis == 1 ? "" : " (right axis)"); return series })).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".legendWrap").attr("transform", "translate(" + availableWidth / 2 + "," + -margin.top + ")") } lines1.width(availableWidth).height(availableHeight).interpolate("monotone").color(data.map(function (d, i) { return d.color || color[i % color.length] }).filter(function (d, i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == "line" })); lines2.width(availableWidth).height(availableHeight).interpolate("monotone").color(data.map(function (d, i) { return d.color || color[i % color.length] }).filter(function (d, i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == "line" })); bars1.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color[i % color.length] }).filter(function (d, i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == "bar" })); bars2.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color[i % color.length] }).filter(function (d, i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == "bar" })); stack1.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color[i % color.length] }).filter(function (d, i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == "area" })); stack2.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color[i % color.length] }).filter(function (d, i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == "area" })); g.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var lines1Wrap = g.select(".lines1Wrap").datum(dataLines1); var bars1Wrap = g.select(".bars1Wrap").datum(dataBars1); var stack1Wrap = g.select(".stack1Wrap").datum(dataStack1); var lines2Wrap = g.select(".lines2Wrap").datum(dataLines2); var bars2Wrap = g.select(".bars2Wrap").datum(dataBars2); var stack2Wrap = g.select(".stack2Wrap").datum(dataStack2); var extraValue1 = dataStack1.length ? dataStack1.map(function (a) { return a.values }).reduce(function (a, b) { return a.map(function (aVal, i) { return { x: aVal.x, y: aVal.y + b[i].y } }) }).concat([{ x: 0, y: 0 }]) : []; var extraValue2 = dataStack2.length ? dataStack2.map(function (a) { return a.values }).reduce(function (a, b) { return a.map(function (aVal, i) { return { x: aVal.x, y: aVal.y + b[i].y } }) }).concat([{ x: 0, y: 0 }]) : []; yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function (d) { return d.y })).range([0, availableHeight]); yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function (d) { return d.y })).range([0, availableHeight]); lines1.yDomain(yScale1.domain()); bars1.yDomain(yScale1.domain()); stack1.yDomain(yScale1.domain()); lines2.yDomain(yScale2.domain()); bars2.yDomain(yScale2.domain()); stack2.yDomain(yScale2.domain()); if (dataStack1.length) { d3.transition(stack1Wrap).call(stack1) } if (dataStack2.length) { d3.transition(stack2Wrap).call(stack2) } if (dataBars1.length) { d3.transition(bars1Wrap).call(bars1) } if (dataBars2.length) { d3.transition(bars2Wrap).call(bars2) } if (dataLines1.length) { d3.transition(lines1Wrap).call(lines1) } if (dataLines2.length) { d3.transition(lines2Wrap).call(lines2) } xAxis.ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".x.axis").attr("transform", "translate(0," + availableHeight + ")"); d3.transition(g.select(".x.axis")).call(xAxis); yAxis1.ticks(availableHeight / 36).tickSize(-availableWidth, 0); d3.transition(g.select(".y1.axis")).call(yAxis1); yAxis2.ticks(availableHeight / 36).tickSize(-availableWidth, 0); d3.transition(g.select(".y2.axis")).call(yAxis2); g.select(".y2.axis").style("opacity", series2.length ? 1 : 0).attr("transform", "translate(" + x.range()[1] + ",0)"); legend.dispatch.on("stateChange", function (newState) { chart.update() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }) }); return chart } lines1.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines1.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); lines2.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines2.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); bars1.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); bars1.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); bars2.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); bars2.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); stack1.dispatch.on("tooltipShow", function (e) { if (!Math.round(stack1.y()(e.point) * 100)) { setTimeout(function () { d3.selectAll(".point.hover").classed("hover", false) }, 0); return false } e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top], dispatch.tooltipShow(e) }); stack1.dispatch.on("tooltipHide", function (e) { dispatch.tooltipHide(e) }); stack2.dispatch.on("tooltipShow", function (e) { if (!Math.round(stack2.y()(e.point) * 100)) { setTimeout(function () { d3.selectAll(".point.hover").classed("hover", false) }, 0); return false } e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top], dispatch.tooltipShow(e) }); stack2.dispatch.on("tooltipHide", function (e) { dispatch.tooltipHide(e) }); lines1.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines1.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); lines2.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); lines2.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.lines1 = lines1; chart.lines2 = lines2; chart.bars1 = bars1; chart.bars2 = bars2; chart.stack1 = stack1; chart.stack2 = stack2; chart.xAxis = xAxis; chart.yAxis1 = yAxis1; chart.yAxis2 = yAxis2; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; lines1.x(_); bars1.x(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; lines1.y(_); bars1.y(_); return chart }; chart.yDomain1 = function (_) { if (!arguments.length) return yDomain1; yDomain1 = _; return chart }; chart.yDomain2 = function (_) { if (!arguments.length) return yDomain2; yDomain2 = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin = _; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = _; legend.color(_); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; return chart }; nv.models.ohlcBar = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, id = Math.floor(Math.random() * 1e4), x = d3.scale.linear(), y = d3.scale.linear(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, getOpen = function (d) { return d.open }, getClose = function (d) { return d.close }, getHigh = function (d) { return d.high }, getLow = function (d) { return d.low }, forceX = [], forceY = [], padData = false, clipEdge = true, color = nv.utils.defaultColor(), xDomain, yDomain, xRange, yRange, dispatch = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"); function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX))); if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]); else x.range(xRange || [0, availableWidth]); y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * .01, x.domain()[1] + x.domain()[1] * .01]) : x.domain([-1, 1]); if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * .01, y.domain()[1] - y.domain()[1] * .01]) : y.domain([-1, 1]); var wrap = d3.select(this).selectAll("g.nv-wrap.nv-ohlcBar").data([data[0].values]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-ohlcBar"); var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-ticks"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); container.on("click", function (d, i) { dispatch.chartClick({ data: d, index: i, pos: d3.event, id: id }) }); defsEnter.append("clipPath").attr("id", "nv-chart-clip-path-" + id).append("rect"); wrap.select("#nv-chart-clip-path-" + id + " rect").attr("width", availableWidth).attr("height", availableHeight); g.attr("clip-path", clipEdge ? "url(#nv-chart-clip-path-" + id + ")" : ""); var ticks = wrap.select(".nv-ticks").selectAll(".nv-tick").data(function (d) { return d }); ticks.exit().remove(); var ticksEnter = ticks.enter().append("path").attr("class", function (d, i, j) { return (getOpen(d, i) > getClose(d, i) ? "nv-tick negative" : "nv-tick positive") + " nv-tick-" + j + "-" + i }).attr("d", function (d, i) { var w = availableWidth / data[0].values.length * .9; return "m0,0l0," + (y(getOpen(d, i)) - y(getHigh(d, i))) + "l" + -w / 2 + ",0l" + w / 2 + ",0l0," + (y(getLow(d, i)) - y(getOpen(d, i))) + "l0," + (y(getClose(d, i)) - y(getLow(d, i))) + "l" + w / 2 + ",0l" + -w / 2 + ",0z" }).attr("transform", function (d, i) { return "translate(" + x(getX(d, i)) + "," + y(getHigh(d, i)) + ")" }).on("mouseover", function (d, i) { d3.select(this).classed("hover", true); dispatch.elementMouseover({ point: d, series: data[0], pos: [x(getX(d, i)), y(getY(d, i))], pointIndex: i, seriesIndex: 0, e: d3.event }) }).on("mouseout", function (d, i) { d3.select(this).classed("hover", false); dispatch.elementMouseout({ point: d, series: data[0], pointIndex: i, seriesIndex: 0, e: d3.event }) }).on("click", function (d, i) { dispatch.elementClick({ value: getY(d, i), data: d, index: i, pos: [x(getX(d, i)), y(getY(d, i))], e: d3.event, id: id }); d3.event.stopPropagation() }).on("dblclick", function (d, i) { dispatch.elementDblClick({ value: getY(d, i), data: d, index: i, pos: [x(getX(d, i)), y(getY(d, i))], e: d3.event, id: id }); d3.event.stopPropagation() }); ticks.attr("class", function (d, i, j) { return (getOpen(d, i) > getClose(d, i) ? "nv-tick negative" : "nv-tick positive") + " nv-tick-" + j + "-" + i }); d3.transition(ticks).attr("transform", function (d, i) { return "translate(" + x(getX(d, i)) + "," + y(getHigh(d, i)) + ")" }).attr("d", function (d, i) { var w = availableWidth / data[0].values.length * .9; return "m0,0l0," + (y(getOpen(d, i)) - y(getHigh(d, i))) + "l" + -w / 2 + ",0l" + w / 2 + ",0l0," + (y(getLow(d, i)) - y(getOpen(d, i))) + "l0," + (y(getClose(d, i)) - y(getLow(d, i))) + "l" + w / 2 + ",0l" + -w / 2 + ",0z" }) }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = _; return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = _; return chart }; chart.open = function (_) { if (!arguments.length) return getOpen; getOpen = _; return chart }; chart.close = function (_) { if (!arguments.length) return getClose; getClose = _; return chart }; chart.high = function (_) { if (!arguments.length) return getHigh; getHigh = _; return chart }; chart.low = function (_) { if (!arguments.length) return getLow; getLow = _; return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.forceX = function (_) { if (!arguments.length) return forceX; forceX = _; return chart }; chart.forceY = function (_) { if (!arguments.length) return forceY; forceY = _; return chart }; chart.padData = function (_) { if (!arguments.length) return padData; padData = _; return chart }; chart.clipEdge = function (_) { if (!arguments.length) return clipEdge; clipEdge = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; return chart }; nv.models.pie = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 500, height = 500, getX = function (d) { return d.x }, getY = function (d) { return d.y }, getDescription = function (d) { return d.description }, id = Math.floor(Math.random() * 1e4), color = nv.utils.defaultColor(), valueFormat = d3.format(",.2f"), showLabels = true, pieLabelsOutside = true, donutLabelsOutside = false, labelType = "key", labelThreshold = .02, donut = false, labelSunbeamLayout = false, startAngle = false, endAngle = false, donutRatio = .5, dispatch = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"); function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, radius = Math.min(availableWidth, availableHeight) / 2, arcRadius = radius - radius / 5, container = d3.select(this); var wrap = container.selectAll(".nv-wrap.nv-pie").data(data); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-pie nv-chart-" + id); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-pie"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); g.select(".nv-pie").attr("transform", "translate(" + availableWidth / 2 + "," + availableHeight / 2 + ")"); container.on("click", function (d, i) { dispatch.chartClick({ data: d, index: i, pos: d3.event, id: id }) }); var arc = d3.svg.arc().outerRadius(arcRadius); if (startAngle) arc.startAngle(startAngle); if (endAngle) arc.endAngle(endAngle); if (donut) arc.innerRadius(radius * donutRatio); var pie = d3.layout.pie().sort(null).value(function (d) { return d.disabled ? 0 : getY(d) }); var slices = wrap.select(".nv-pie").selectAll(".nv-slice").data(pie); slices.exit().remove(); var ae = slices.enter().append("g").attr("class", "nv-slice").on("mouseover", function (d, i) { d3.select(this).classed("hover", true); dispatch.elementMouseover({ label: getX(d.data), value: getY(d.data), point: d.data, pointIndex: i, pos: [d3.event.pageX, d3.event.pageY], id: id }) }).on("mouseout", function (d, i) { d3.select(this).classed("hover", false); dispatch.elementMouseout({ label: getX(d.data), value: getY(d.data), point: d.data, index: i, id: id }) }).on("click", function (d, i) { dispatch.elementClick({ label: getX(d.data), value: getY(d.data), point: d.data, index: i, pos: d3.event, id: id }); d3.event.stopPropagation() }).on("dblclick", function (d, i) { dispatch.elementDblClick({ label: getX(d.data), value: getY(d.data), point: d.data, index: i, pos: d3.event, id: id }); d3.event.stopPropagation() }); slices.attr("fill", function (d, i) { return color(d, i) }).attr("stroke", function (d, i) { return color(d, i) }); var paths = ae.append("path").each(function (d) { this._current = d }); d3.transition(slices.select("path")).attr("d", arc).attrTween("d", arcTween); if (showLabels) { var labelsArc = d3.svg.arc().innerRadius(0); if (pieLabelsOutside) { labelsArc = arc } if (donutLabelsOutside) { labelsArc = d3.svg.arc().outerRadius(arc.outerRadius()) } ae.append("g").classed("nv-label", true).each(function (d, i) { var group = d3.select(this); group.attr("transform", function (d) { if (labelSunbeamLayout) { d.outerRadius = arcRadius + 10; d.innerRadius = arcRadius + 15; var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI); if ((d.startAngle + d.endAngle) / 2 < Math.PI) { rotateAngle -= 90 } else { rotateAngle += 90 } return "translate(" + labelsArc.centroid(d) + ") rotate(" + rotateAngle + ")" } else { d.outerRadius = radius + 10; d.innerRadius = radius + 15; return "translate(" + labelsArc.centroid(d) + ")" } }); group.append("rect").style("stroke", "#fff").style("fill", "#fff").attr("rx", 3).attr("ry", 3); group.append("text").style("text-anchor", labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? "start" : "end" : "middle").style("fill", "#000") }); slices.select(".nv-label").transition().attr("transform", function (d) { if (labelSunbeamLayout) { d.outerRadius = arcRadius + 10; d.innerRadius = arcRadius + 15; var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI); if ((d.startAngle + d.endAngle) / 2 < Math.PI) { rotateAngle -= 90 } else { rotateAngle += 90 } return "translate(" + labelsArc.centroid(d) + ") rotate(" + rotateAngle + ")" } else { d.outerRadius = radius + 10; d.innerRadius = radius + 15; return "translate(" + labelsArc.centroid(d) + ")" } }); slices.each(function (d, i) { var slice = d3.select(this); slice.select(".nv-label text").style("text-anchor", labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? "start" : "end" : "middle").text(function (d, i) { var percent = (d.endAngle - d.startAngle) / (2 * Math.PI); var labelTypes = { key: getX(d.data), value: getY(d.data), percent: d3.format("%")(percent) }; return d.value && percent > labelThreshold ? labelTypes[labelType] : "" }); var textBox = slice.select("text").node().getBBox(); slice.select(".nv-label rect").attr("width", textBox.width + 10).attr("height", textBox.height + 10).attr("transform", function () { return "translate(" + [textBox.x - 5, textBox.y - 5] + ")" }) }) } function angle(d) { var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90; return a > 90 ? a - 180 : a } function arcTween(a) { a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle; a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle; if (!donut) a.innerRadius = 0; var i = d3.interpolate(this._current, a); this._current = i(0); return function (t) { return arc(i(t)) } } function tweenPie(b) { b.innerRadius = 0; var i = d3.interpolate({ startAngle: 0, endAngle: 0 }, b); return function (t) { return arc(i(t)) } } }); return chart } chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.values = function (_) { nv.log("pie.values() is no longer supported."); return chart }; chart.x = function (_) { if (!arguments.length) return getX; getX = _; return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = d3.functor(_); return chart }; chart.description = function (_) { if (!arguments.length) return getDescription; getDescription = _; return chart }; chart.showLabels = function (_) { if (!arguments.length) return showLabels; showLabels = _; return chart }; chart.labelSunbeamLayout = function (_) { if (!arguments.length) return labelSunbeamLayout; labelSunbeamLayout = _; return chart }; chart.donutLabelsOutside = function (_) { if (!arguments.length) return donutLabelsOutside; donutLabelsOutside = _; return chart }; chart.pieLabelsOutside = function (_) { if (!arguments.length) return pieLabelsOutside; pieLabelsOutside = _; return chart }; chart.labelType = function (_) { if (!arguments.length) return labelType; labelType = _; labelType = labelType || "key"; return chart }; chart.donut = function (_) { if (!arguments.length) return donut; donut = _; return chart }; chart.donutRatio = function (_) { if (!arguments.length) return donutRatio; donutRatio = _; return chart }; chart.startAngle = function (_) { if (!arguments.length) return startAngle; startAngle = _; return chart }; chart.endAngle = function (_) { if (!arguments.length) return endAngle; endAngle = _; return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.valueFormat = function (_) { if (!arguments.length) return valueFormat; valueFormat = _; return chart }; chart.labelThreshold = function (_) { if (!arguments.length) return labelThreshold; labelThreshold = _; return chart }; return chart }; nv.models.pieChart = function () { "use strict"; var pie = nv.models.pie(), legend = nv.models.legend(); var margin = { top: 30, right: 20, bottom: 20, left: 20 }, width = null, height = null, showLegend = true, color = nv.utils.defaultColor(), tooltips = true, tooltip = function (key, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + "</p>" }, state = {}, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"); var showTooltip = function (e, offsetElement) { var tooltipLabel = pie.description()(e.point) || pie.x()(e.point); var left = e.pos[0] + (offsetElement && offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement && offsetElement.offsetTop || 0), y = pie.valueFormat()(pie.y()(e.point)), content = tooltip(tooltipLabel, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "n" : "s", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } var wrap = container.selectAll("g.nv-wrap.nv-pieChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-pieChart").append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-pieWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); if (showLegend) { legend.width(availableWidth).key(pie.x()); wrap.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } wrap.select(".nv-legendWrap").attr("transform", "translate(0," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); pie.width(availableWidth).height(availableHeight); var pieWrap = g.select(".nv-pieWrap").datum([data]); d3.transition(pieWrap).call(pie); legend.dispatch.on("stateChange", function (newState) { state = newState; dispatch.stateChange(state); chart.update() }); pie.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } chart.update() }) }); return chart } pie.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.legend = legend; chart.dispatch = dispatch; chart.pie = pie; d3.rebind(chart, pie, "valueFormat", "values", "x", "y", "description", "id", "showLabels", "donutLabelsOutside", "pieLabelsOutside", "labelType", "donut", "donutRatio", "labelThreshold"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); pie.color(color); return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; return chart }; nv.models.scatter = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, color = nv.utils.defaultColor(), id = Math.floor(Math.random() * 1e5), x = d3.scale.linear(), y = d3.scale.linear(), z = d3.scale.linear(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, getSize = function (d) { return d.size || 1 }, getShape = function (d) { return d.shape || "circle" }, onlyCircles = true, forceX = [], forceY = [], forceSize = [], interactive = true, pointKey = null, pointActive = function (d) { return !d.notActive }, padData = false, padDataOuter = .1, clipEdge = false, clipVoronoi = true, clipRadius = function () { return 25 }, xDomain = null, yDomain = null, xRange = null, yRange = null, sizeDomain = null, sizeRange = null, singlePoint = false, dispatch = d3.dispatch("elementClick", "elementMouseover", "elementMouseout"), useVoronoi = true; var x0, y0, z0, timeoutID, needsUpdate = false; function chart(selection) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            selection.each(function (data) {]]></c>
                </r>
                <r>
                  <c><![CDATA[                var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); data.forEach(function (series, i) { series.values.forEach(function (point) { point.series = i }) }); var seriesData = xDomain && yDomain && sizeDomain ? [] : d3.merge(data.map(function (d) { return d.values.map(function (d, i) { return { x: getX(d, i), y: getY(d, i), size: getSize(d, i) } }) })); x.domain(xDomain || d3.extent(seriesData.map(function (d) { return d.x }).concat(forceX))); if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); else x.range(xRange || [0, availableWidth]); y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y }).concat(forceY))).range(yRange || [availableHeight, 0]); z.domain(sizeDomain || d3.extent(seriesData.map(function (d) { return d.size }).concat(forceSize))).range(sizeRange || [16, 256]); if (x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1]) singlePoint = true; if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * .01, x.domain()[1] + x.domain()[1] * .01]) : x.domain([-1, 1]); if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * .01, y.domain()[1] + y.domain()[1] * .01]) : y.domain([-1, 1]); if (isNaN(x.domain()[0])) { x.domain([-1, 1]) } if (isNaN(y.domain()[0])) { y.domain([-1, 1]) } x0 = x0 || x; y0 = y0 || y; z0 = z0 || z; var wrap = container.selectAll("g.nv-wrap.nv-scatter").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatter nv-chart-" + id + (singlePoint ? " nv-single-point" : ""));]]></c>
                </r>
                <r>
                  <c><![CDATA[                var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-groups"); gEnter.append("g").attr("class", "nv-point-paths"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); defsEnter.append("clipPath").attr("id", "nv-edge-clip-" + id).append("rect"); wrap.select("#nv-edge-clip-" + id + " rect").attr("width", availableWidth).attr("height", availableHeight); g.attr("clip-path", clipEdge ? "url(#nv-edge-clip-" + id + ")" : ""); function updateInteractiveLayer() { if (!interactive) return false; var eventElements; var vertices = d3.merge(data.map(function (group, groupIndex) { return group.values.map(function (point, pointIndex) { var pX = getX(point, pointIndex); var pY = getY(point, pointIndex); return [x(pX) + Math.random() * 1e-7, y(pY) + Math.random() * 1e-7, groupIndex, pointIndex, point] }).filter(function (pointArray, pointIndex) { return pointActive(pointArray[4], pointIndex) }) })); if (useVoronoi === true) { if (clipVoronoi) { var pointClipsEnter = wrap.select("defs").selectAll(".nv-point-clips").data([id]).enter(); pointClipsEnter.append("clipPath").attr("class", "nv-point-clips").attr("id", "nv-points-clip-" + id); var pointClips = wrap.select("#nv-points-clip-" + id).selectAll("circle").data(vertices); pointClips.enter().append("circle").attr("r", clipRadius); pointClips.exit().remove(); pointClips.attr("cx", function (d) { return d[0] }).attr("cy", function (d) { return d[1] }); wrap.select(".nv-point-paths").attr("clip-path", "url(#nv-points-clip-" + id + ")") } if (vertices.length) { vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]); vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]); vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]); vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]) } var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); var voronoi = d3.geom.voronoi(vertices).map(function (d, i) { return { data: bounds.clip(d), series: vertices[i][2], point: vertices[i][3] } }); var pointPaths = wrap.select(".nv-point-paths").selectAll("path").data(voronoi); pointPaths.enter().append("path").attr("class", function (d, i) { return "nv-path-" + i }); pointPaths.exit().remove(); pointPaths.attr("d", function (d) { if (d.data.length === 0) return "M 0 0"; else return "M" + d.data.join("L") + "Z" }); var mouseEventCallback = function (d, mDispatch) { if (needsUpdate) return 0; var series = data[d.series]; if (typeof series === "undefined") return; var point = series.values[d.point]; mDispatch({ point: point, series: series, pos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top], seriesIndex: d.series, pointIndex: d.point }) }; pointPaths.on("click", function (d) { mouseEventCallback(d, dispatch.elementClick) }).on("mouseover", function (d) { mouseEventCallback(d, dispatch.elementMouseover) }).on("mouseout", function (d, i) { mouseEventCallback(d, dispatch.elementMouseout) }) } else { wrap.select(".nv-groups").selectAll(".nv-group").selectAll(".nv-point").on("click", function (d, i) { if (needsUpdate || !data[d.series]) return 0; var series = data[d.series], point = series.values[i]; dispatch.elementClick({ point: point, series: series, pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], seriesIndex: d.series, pointIndex: i }) }).on("mouseover", function (d, i) { if (needsUpdate || !data[d.series]) return 0; var series = data[d.series], point = series.values[i]; dispatch.elementMouseover({ point: point, series: series, pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], seriesIndex: d.series, pointIndex: i }) }).on("mouseout", function (d, i) { if (needsUpdate || !data[d.series]) return 0; var series = data[d.series], point = series.values[i]; dispatch.elementMouseout({ point: point, series: series, seriesIndex: d.series, pointIndex: i }) }) } needsUpdate = false } needsUpdate = true; var groups = wrap.select(".nv-groups").selectAll(".nv-group").data(function (d) { return d }, function (d) { return d.key }); groups.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6); groups.exit().remove(); groups.attr("class", function (d, i) { return "nv-group nv-series-" + i }).classed("hover", function (d) { return d.hover }); groups.transition().style("fill", function (d, i) { return color(d, i) }).style("stroke", function (d, i) { return color(d, i) }).style("stroke-opacity", 1).style("fill-opacity", .5); if (onlyCircles) { var points = groups.selectAll("circle.nv-point").data(function (d) { return d.values }, pointKey); points.enter().append("circle").style("fill", function (d, i) { return d.color }).style("stroke", function (d, i) { return d.color }).attr("cx", function (d, i) { return nv.utils.NaNtoZero(x0(getX(d, i))) }).attr("cy", function (d, i) { return nv.utils.NaNtoZero(y0(getY(d, i))) }).attr("r", function (d, i) { return Math.sqrt(z(getSize(d, i)) / Math.PI) }); points.exit().remove(); groups.exit().selectAll("path.nv-point").transition().attr("cx", function (d, i) { return nv.utils.NaNtoZero(x(getX(d, i))) }).attr("cy", function (d, i) { return nv.utils.NaNtoZero(y(getY(d, i))) }).remove(); points.each(function (d, i) { d3.select(this).classed("nv-point", true).classed("nv-point-" + i, true).classed("hover", false) }); points.transition().attr("cx", function (d, i) { return nv.utils.NaNtoZero(x(getX(d, i))) }).attr("cy", function (d, i) { return nv.utils.NaNtoZero(y(getY(d, i))) }).attr("r", function (d, i) { return Math.sqrt(z(getSize(d, i)) / Math.PI) }) } else { var points = groups.selectAll("path.nv-point").data(function (d) { return d.values }); points.enter().append("path").style("fill", function (d, i) { return d.color }).style("stroke", function (d, i) { return d.color }).attr("transform", function (d, i) { return "translate(" + x0(getX(d, i)) + "," + y0(getY(d, i)) + ")" }).attr("d", d3.svg.symbol().type(getShape).size(function (d, i) { return z(getSize(d, i)) })); points.exit().remove(); groups.exit().selectAll("path.nv-point").transition().attr("transform", function (d, i) { return "translate(" + x(getX(d, i)) + "," + y(getY(d, i)) + ")" }).remove(); points.each(function (d, i) { d3.select(this).classed("nv-point", true).classed("nv-point-" + i, true).classed("hover", false) }); points.transition().attr("transform", function (d, i) { return "translate(" + x(getX(d, i)) + "," + y(getY(d, i)) + ")" }).attr("d", d3.svg.symbol().type(getShape).size(function (d, i) { return z(getSize(d, i)) })) } clearTimeout(timeoutID); timeoutID = setTimeout(updateInteractiveLayer, 300); x0 = x.copy(); y0 = y.copy(); z0 = z.copy()]]></c>
                </r>
                <r>
                  <c><![CDATA[            }); return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[        } chart.clearHighlights = function () { d3.selectAll(".nv-chart-" + id + " .nv-point.hover").classed("hover", false) }; chart.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) { d3.select(".nv-chart-" + id + " .nv-series-" + seriesIndex + " .nv-point-" + pointIndex).classed("hover", isHoverOver) }; dispatch.on("elementMouseover.point", function (d) { if (interactive) chart.highlightPoint(d.seriesIndex, d.pointIndex, true) }); dispatch.on("elementMouseout.point", function (d) { if (interactive) chart.highlightPoint(d.seriesIndex, d.pointIndex, false) }); chart.dispatch = dispatch; chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = d3.functor(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = d3.functor(_); return chart }; chart.size = function (_) { if (!arguments.length) return getSize; getSize = d3.functor(_); return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.zScale = function (_) { if (!arguments.length) return z; z = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.sizeDomain = function (_) { if (!arguments.length) return sizeDomain; sizeDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.sizeRange = function (_) { if (!arguments.length) return sizeRange; sizeRange = _; return chart }; chart.forceX = function (_) { if (!arguments.length) return forceX; forceX = _; return chart }; chart.forceY = function (_) { if (!arguments.length) return forceY; forceY = _; return chart }; chart.forceSize = function (_) { if (!arguments.length) return forceSize; forceSize = _; return chart }; chart.interactive = function (_) { if (!arguments.length) return interactive; interactive = _; return chart }; chart.pointKey = function (_) { if (!arguments.length) return pointKey; pointKey = _; return chart }; chart.pointActive = function (_) { if (!arguments.length) return pointActive; pointActive = _; return chart }; chart.padData = function (_) { if (!arguments.length) return padData; padData = _; return chart }; chart.padDataOuter = function (_) { if (!arguments.length) return padDataOuter; padDataOuter = _; return chart }; chart.clipEdge = function (_) { if (!arguments.length) return clipEdge; clipEdge = _; return chart }; chart.clipVoronoi = function (_) { if (!arguments.length) return clipVoronoi; clipVoronoi = _; return chart }; chart.useVoronoi = function (_) { if (!arguments.length) return useVoronoi; useVoronoi = _; if (useVoronoi === false) { clipVoronoi = false } return chart }; chart.clipRadius = function (_) { if (!arguments.length) return clipRadius; clipRadius = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.shape = function (_) { if (!arguments.length) return getShape; getShape = _; return chart }; chart.onlyCircles = function (_) { if (!arguments.length) return onlyCircles; onlyCircles = _; return chart }; chart.id = function (_) { if (!arguments.length) return id; id = _; return chart }; chart.singlePoint = function (_) { if (!arguments.length) return singlePoint; singlePoint = _; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.scatterChart = function () { "use strict"; var scatter = nv.models.scatter(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(), controls = nv.models.legend(), distX = nv.models.distribution(), distY = nv.models.distribution(); var margin = { top: 30, right: 20, bottom: 50, left: 75 }, width = null, height = null, color = nv.utils.defaultColor(), x = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : scatter.xScale(), y = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : scatter.yScale(), xPadding = 0, yPadding = 0, showDistX = false, showDistY = false, showLegend = true, showXAxis = true, showYAxis = true, rightAlignYAxis = false, showControls = !!d3.fisheye, fisheye = 0, pauseFisheye = false, tooltips = true, tooltipX = function (key, x, y) { return "<strong>" + x + "</strong>" }, tooltipY = function (key, x, y) { return "<strong>" + y + "</strong>" }, tooltip = null, state = {}, defaultState = null, dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), noData = "No Data Available.", transitionDuration = 250; scatter.xScale(x).yScale(y); xAxis.orient("bottom").tickPadding(10); yAxis.orient(rightAlignYAxis ? "right" : "left").tickPadding(10); distX.axis("x"); distY.axis("y"); controls.updateState(false); var x0, y0; var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), leftX = e.pos[0] + (offsetElement.offsetLeft || 0), topX = y.range()[0] + margin.top + (offsetElement.offsetTop || 0), leftY = x.range()[0] + margin.left + (offsetElement.offsetLeft || 0), topY = e.pos[1] + (offsetElement.offsetTop || 0), xVal = xAxis.tickFormat()(scatter.x()(e.point, e.pointIndex)), yVal = yAxis.tickFormat()(scatter.y()(e.point, e.pointIndex)); if (tooltipX != null) nv.tooltip.show([leftX, topX], tooltipX(e.series.key, xVal, yVal, e, chart), "n", 1, offsetElement, "x-nvtooltip"); if (tooltipY != null) nv.tooltip.show([leftY, topY], tooltipY(e.series.key, xVal, yVal, e, chart), "e", 1, offsetElement, "y-nvtooltip"); if (tooltip != null) nv.tooltip.show([left, top], tooltip(e.series.key, xVal, yVal, e, chart), e.value < 0 ? "n" : "s", null, offsetElement) }; var controlsData = [{ key: "Magnify", disabled: true }]; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x0 = x0 || x; y0 = y0 || y; var wrap = container.selectAll("g.nv-wrap.nv-scatterChart").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatterChart nv-chart-" + scatter.id()); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("rect").attr("class", "nvd3 nv-background"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-scatterWrap"); gEnter.append("g").attr("class", "nv-distWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-controlsWrap"); if (showLegend) { var legendWidth = showControls ? availableWidth / 2 : availableWidth; legend.width(legendWidth); wrap.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } wrap.select(".nv-legendWrap").attr("transform", "translate(" + (availableWidth - legendWidth) + "," + -margin.top + ")") } if (showControls) { controls.width(180).color(["#444"]); g.select(".nv-controlsWrap").datum(controlsData).attr("transform", "translate(0," + -margin.top + ")").call(controls) } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); if (xPadding !== 0) scatter.xDomain(null); if (yPadding !== 0) scatter.yDomain(null); wrap.select(".nv-scatterWrap").datum(data.filter(function (d) { return !d.disabled })).call(scatter); if (xPadding !== 0) { var xRange = x.domain()[1] - x.domain()[0]; scatter.xDomain([x.domain()[0] - xPadding * xRange, x.domain()[1] + xPadding * xRange]) } if (yPadding !== 0) { var yRange = y.domain()[1] - y.domain()[0]; scatter.yDomain([y.domain()[0] - yPadding * yRange, y.domain()[1] + yPadding * yRange]) } if (yPadding !== 0 || xPadding !== 0) { wrap.select(".nv-scatterWrap").datum(data.filter(function (d) { return !d.disabled })).call(scatter) } if (showXAxis) { xAxis.scale(x).ticks(xAxis.ticks() && xAxis.ticks().length ? xAxis.ticks() : availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")").call(xAxis) } if (showYAxis) { yAxis.scale(y).ticks(yAxis.ticks() && yAxis.ticks().length ? yAxis.ticks() : availableHeight / 36).tickSize(-availableWidth, 0); g.select(".nv-y.nv-axis").call(yAxis) } if (showDistX) { distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); gEnter.select(".nv-distWrap").append("g").attr("class", "nv-distributionX"); g.select(".nv-distributionX").attr("transform", "translate(0," + y.range()[0] + ")").datum(data.filter(function (d) { return !d.disabled })).call(distX) } if (showDistY) { distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); gEnter.select(".nv-distWrap").append("g").attr("class", "nv-distributionY"); g.select(".nv-distributionY").attr("transform", "translate(" + (rightAlignYAxis ? availableWidth : -distY.size()) + ",0)").datum(data.filter(function (d) { return !d.disabled })).call(distY) } if (d3.fisheye) { g.select(".nv-background").attr("width", availableWidth).attr("height", availableHeight); g.select(".nv-background").on("mousemove", updateFisheye); g.select(".nv-background").on("click", function () { pauseFisheye = !pauseFisheye }); scatter.dispatch.on("elementClick.freezeFisheye", function () { pauseFisheye = !pauseFisheye }) } function updateFisheye() { if (pauseFisheye) { g.select(".nv-point-paths").style("pointer-events", "all"); return false } g.select(".nv-point-paths").style("pointer-events", "none"); var mouse = d3.mouse(this); x.distortion(fisheye).focus(mouse[0]); y.distortion(fisheye).focus(mouse[1]); g.select(".nv-scatterWrap").call(scatter); if (showXAxis) g.select(".nv-x.nv-axis").call(xAxis); if (showYAxis) g.select(".nv-y.nv-axis").call(yAxis); g.select(".nv-distributionX").datum(data.filter(function (d) { return !d.disabled })).call(distX); g.select(".nv-distributionY").datum(data.filter(function (d) { return !d.disabled })).call(distY) } controls.dispatch.on("legendClick", function (d, i) { d.disabled = !d.disabled; fisheye = d.disabled ? 0 : 2.5; g.select(".nv-background").style("pointer-events", d.disabled ? "none" : "all"); g.select(".nv-point-paths").style("pointer-events", d.disabled ? "all" : "none"); if (d.disabled) { x.distortion(fisheye).focus(0); y.distortion(fisheye).focus(0); g.select(".nv-scatterWrap").call(scatter); g.select(".nv-x.nv-axis").call(xAxis); g.select(".nv-y.nv-axis").call(yAxis) } else { pauseFisheye = false } chart.update() }); legend.dispatch.on("stateChange", function (newState) { state.disabled = newState.disabled; dispatch.stateChange(state); chart.update() }); scatter.dispatch.on("elementMouseover.tooltip", function (e) { d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", function (d, i) { return e.pos[1] - availableHeight }); d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", e.pos[0] + distX.size()); e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } chart.update() }); x0 = x.copy(); y0 = y.copy() }); return chart } scatter.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e); d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", 0); d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", distY.size()) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.scatter = scatter; chart.legend = legend; chart.controls = controls; chart.xAxis = xAxis; chart.yAxis = yAxis; chart.distX = distX; chart.distY = distY; d3.rebind(chart, scatter, "id", "interactive", "pointActive", "x", "y", "shape", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "sizeRange", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius", "useVoronoi"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); distX.color(color); distY.color(color); return chart }; chart.showDistX = function (_) { if (!arguments.length) return showDistX; showDistX = _; return chart }; chart.showDistY = function (_) { if (!arguments.length) return showDistY; showDistY = _; return chart }; chart.showControls = function (_) { if (!arguments.length) return showControls; showControls = _; return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.fisheye = function (_) { if (!arguments.length) return fisheye; fisheye = _; return chart }; chart.xPadding = function (_) { if (!arguments.length) return xPadding; xPadding = _; return chart }; chart.yPadding = function (_) { if (!arguments.length) return yPadding; yPadding = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.tooltipXContent = function (_) { if (!arguments.length) return tooltipX; tooltipX = _; return chart }; chart.tooltipYContent = function (_) { if (!arguments.length) return tooltipY; tooltipY = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart }; nv.models.scatterPlusLineChart = function () {]]></c>
                </r>
                <r>
                  <c><![CDATA[        "use strict"; var scatter = nv.models.scatter(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(), controls = nv.models.legend(), distX = nv.models.distribution(), distY = nv.models.distribution(); var margin = { top: 30, right: 20, bottom: 50, left: 75 }, width = null, height = null, color = nv.utils.defaultColor(), x = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : scatter.xScale(), y = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : scatter.yScale(), showDistX = false, showDistY = false, showLegend = true, showXAxis = true, showYAxis = true, rightAlignYAxis = false, showControls = !!d3.fisheye, fisheye = 0, pauseFisheye = false, tooltips = true, tooltipX = function (key, x, y) { return "<strong>" + x + "</strong>" }, tooltipY = function (key, x, y) { return "<strong>" + y + "</strong>" }, tooltip = function (key, x, y, date) { return "<h3>" + key + "</h3>" + "<p>" + date + "</p>" }, state = {}, defaultState = null, dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), noData = "No Data Available.", transitionDuration = 250; scatter.xScale(x).yScale(y); xAxis.orient("bottom").tickPadding(10); yAxis.orient(rightAlignYAxis ? "right" : "left").tickPadding(10); distX.axis("x"); distY.axis("y"); controls.updateState(false); var x0, y0; var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), leftX = e.pos[0] + (offsetElement.offsetLeft || 0), topX = y.range()[0] + margin.top + (offsetElement.offsetTop || 0), leftY = x.range()[0] + margin.left + (offsetElement.offsetLeft || 0), topY = e.pos[1] + (offsetElement.offsetTop || 0), xVal = xAxis.tickFormat()(scatter.x()(e.point, e.pointIndex)), yVal = yAxis.tickFormat()(scatter.y()(e.point, e.pointIndex)); if (tooltipX != null) nv.tooltip.show([leftX, topX], tooltipX(e.series.key, xVal, yVal, e, chart), "n", 1, offsetElement, "x-nvtooltip"); if (tooltipY != null) nv.tooltip.show([leftY, topY], tooltipY(e.series.key, xVal, yVal, e, chart), "e", 1, offsetElement, "y-nvtooltip"); if (tooltip != null) nv.tooltip.show([left, top], tooltip(e.series.key, xVal, yVal, e.point.tooltip, e, chart), e.value < 0 ? "n" : "s", null, offsetElement) }; var controlsData = [{ key: "Magnify", disabled: true }]; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = scatter.xScale(); y = scatter.yScale(); x0 = x0 || x; y0 = y0 || y; var wrap = container.selectAll("g.nv-wrap.nv-scatterChart").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatterChart nv-chart-" + scatter.id()); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("rect").attr("class", "nvd3 nv-background").style("pointer-events", "none"); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-scatterWrap"); gEnter.append("g").attr("class", "nv-regressionLinesWrap"); gEnter.append("g").attr("class", "nv-distWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-controlsWrap"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } if (showLegend) { legend.width(availableWidth / 2); wrap.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } wrap.select(".nv-legendWrap").attr("transform", "translate(" + availableWidth / 2 + "," + -margin.top + ")") } if (showControls) { controls.width(180).color(["#444"]); g.select(".nv-controlsWrap").datum(controlsData).attr("transform", "translate(0," + -margin.top + ")").call(controls) } scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); wrap.select(".nv-scatterWrap").datum(data.filter(function (d) { return !d.disabled })).call(scatter); wrap.select(".nv-regressionLinesWrap").attr("clip-path", "url(#nv-edge-clip-" + scatter.id() + ")"); var regWrap = wrap.select(".nv-regressionLinesWrap").selectAll(".nv-regLines").data(function (d) { return d }); regWrap.enter().append("g").attr("class", "nv-regLines"); var regLine = regWrap.selectAll(".nv-regLine").data(function (d) { return [d] }); var regLineEnter = regLine.enter().append("line").attr("class", "nv-regLine").style("stroke-opacity", 0); regLine.transition().attr("x1", x.range()[0]).attr("x2", x.range()[1]).attr("y1", function (d, i) { return y(x.domain()[0] * d.slope + d.intercept) }).attr("y2", function (d, i) { return y(x.domain()[1] * d.slope + d.intercept) }).style("stroke", function (d, i, j) { return color(d, j) }).style("stroke-opacity", function (d, i) { return d.disabled || typeof d.slope === "undefined" || typeof d.intercept === "undefined" ? 0 : 1 }); if (showXAxis) { xAxis.scale(x).ticks(xAxis.ticks() ? xAxis.ticks() : availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")").call(xAxis) } if (showYAxis) { yAxis.scale(y).ticks(yAxis.ticks() ? yAxis.ticks() : availableHeight / 36).tickSize(-availableWidth, 0); g.select(".nv-y.nv-axis").call(yAxis) } if (showDistX) { distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); gEnter.select(".nv-distWrap").append("g").attr("class", "nv-distributionX"); g.select(".nv-distributionX").attr("transform", "translate(0," + y.range()[0] + ")").datum(data.filter(function (d) { return !d.disabled })).call(distX) } if (showDistY) { distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) { return d.color || color(d, i) }).filter(function (d, i) { return !data[i].disabled })); gEnter.select(".nv-distWrap").append("g").attr("class", "nv-distributionY"); g.select(".nv-distributionY").attr("transform", "translate(" + (rightAlignYAxis ? availableWidth : -distY.size()) + ",0)").datum(data.filter(function (d) { return !d.disabled })).call(distY) } if (d3.fisheye) { g.select(".nv-background").attr("width", availableWidth).attr("height", availableHeight); g.select(".nv-background").on("mousemove", updateFisheye); g.select(".nv-background").on("click", function () { pauseFisheye = !pauseFisheye }); scatter.dispatch.on("elementClick.freezeFisheye", function () { pauseFisheye = !pauseFisheye }) } function updateFisheye() { if (pauseFisheye) { g.select(".nv-point-paths").style("pointer-events", "all"); return false } g.select(".nv-point-paths").style("pointer-events", "none"); var mouse = d3.mouse(this); x.distortion(fisheye).focus(mouse[0]); y.distortion(fisheye).focus(mouse[1]); g.select(".nv-scatterWrap").datum(data.filter(function (d) { return !d.disabled })).call(scatter); if (showXAxis) g.select(".nv-x.nv-axis").call(xAxis); if (showYAxis) g.select(".nv-y.nv-axis").call(yAxis); g.select(".nv-distributionX").datum(data.filter(function (d) { return !d.disabled })).call(distX); g.select(".nv-distributionY").datum(data.filter(function (d) { return !d.disabled })).call(distY) } controls.dispatch.on("legendClick", function (d, i) { d.disabled = !d.disabled; fisheye = d.disabled ? 0 : 2.5; g.select(".nv-background").style("pointer-events", d.disabled ? "none" : "all"); g.select(".nv-point-paths").style("pointer-events", d.disabled ? "all" : "none"); if (d.disabled) { x.distortion(fisheye).focus(0); y.distortion(fisheye).focus(0); g.select(".nv-scatterWrap").call(scatter); g.select(".nv-x.nv-axis").call(xAxis); g.select(".nv-y.nv-axis").call(yAxis) } else { pauseFisheye = false } chart.update() }); legend.dispatch.on("stateChange", function (newState) { state = newState; dispatch.stateChange(state); chart.update() }); scatter.dispatch.on("elementMouseover.tooltip", function (e) { d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", e.pos[1] - availableHeight); d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", e.pos[0] + distX.size()); e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top]; dispatch.tooltipShow(e) }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } chart.update() }); x0 = x.copy(); y0 = y.copy() }); return chart } scatter.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e); d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", 0); d3.select(".nv-chart-" + scatter.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", distY.size()) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.scatter = scatter; chart.legend = legend; chart.controls = controls; chart.xAxis = xAxis; chart.yAxis = yAxis; chart.distX = distX; chart.distY = distY; d3.rebind(chart, scatter, "id", "interactive", "pointActive", "x", "y", "shape", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "sizeRange", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius", "useVoronoi"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) {]]></c>
                </r>
                <r>
                  <c><![CDATA[            if (!arguments.length) return height;]]></c>
                </r>
                <r>
                  <c><![CDATA[            height = _; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[        }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); distX.color(color); distY.color(color); return chart }; chart.showDistX = function (_) { if (!arguments.length) return showDistX; showDistX = _; return chart }; chart.showDistY = function (_) { if (!arguments.length) return showDistY; showDistY = _; return chart }; chart.showControls = function (_) { if (!arguments.length) return showControls; showControls = _; return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.fisheye = function (_) { if (!arguments.length) return fisheye; fisheye = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.tooltipXContent = function (_) { if (!arguments.length) return tooltipX; tooltipX = _; return chart }; chart.tooltipYContent = function (_) { if (!arguments.length) return tooltipY; tooltipY = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; return chart]]></c>
                </r>
                <r>
                  <c><![CDATA[    }; nv.models.sparkline = function () { "use strict"; var margin = { top: 2, right: 0, bottom: 2, left: 0 }, width = 400, height = 32, animate = true, x = d3.scale.linear(), y = d3.scale.linear(), getX = function (d) { return d.x }, getY = function (d) { return d.y }, color = nv.utils.getColor(["#000"]), xDomain, yDomain, xRange, yRange; function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]); y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); var wrap = container.selectAll("g.nv-wrap.nv-sparkline").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-sparkline"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var paths = wrap.selectAll("path").data(function (d) { return [d] }); paths.enter().append("path"); paths.exit().remove(); paths.style("stroke", function (d, i) { return d.color || color(d, i) }).attr("d", d3.svg.line().x(function (d, i) { return x(getX(d, i)) }).y(function (d, i) { return y(getY(d, i)) })); var points = wrap.selectAll("circle.nv-point").data(function (data) { var yValues = data.map(function (d, i) { return getY(d, i) }); function pointIndex(index) { if (index != -1) { var result = data[index]; result.pointIndex = index; return result } else { return null } } var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])), minPoint = pointIndex(yValues.indexOf(y.domain()[0])), currentPoint = pointIndex(yValues.length - 1); return [minPoint, maxPoint, currentPoint].filter(function (d) { return d != null }) }); points.enter().append("circle"); points.exit().remove(); points.attr("cx", function (d, i) { return x(getX(d, d.pointIndex)) }).attr("cy", function (d, i) { return y(getY(d, d.pointIndex)) }).attr("r", 2).attr("class", function (d, i) { return getX(d, d.pointIndex) == x.domain()[1] ? "nv-point nv-currentValue" : getY(d, d.pointIndex) == y.domain()[0] ? "nv-point nv-minValue" : "nv-point nv-maxValue" }) }); return chart } chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.x = function (_) { if (!arguments.length) return getX; getX = d3.functor(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = d3.functor(_); return chart }; chart.xScale = function (_) { if (!arguments.length) return x; x = _; return chart }; chart.yScale = function (_) { if (!arguments.length) return y; y = _; return chart }; chart.xDomain = function (_) { if (!arguments.length) return xDomain; xDomain = _; return chart }; chart.yDomain = function (_) { if (!arguments.length) return yDomain; yDomain = _; return chart }; chart.xRange = function (_) { if (!arguments.length) return xRange; xRange = _; return chart }; chart.yRange = function (_) { if (!arguments.length) return yRange; yRange = _; return chart }; chart.animate = function (_) { if (!arguments.length) return animate; animate = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; return chart }; nv.models.sparklinePlus = function () { "use strict"; var sparkline = nv.models.sparkline(); var margin = { top: 15, right: 100, bottom: 10, left: 50 }, width = null, height = null, x, y, index = [], paused = false, xTickFormat = d3.format(",r"), yTickFormat = d3.format(",.2f"), showValue = true, alignValue = true, rightAlignValue = false, noData = "No Data Available."; function chart(selection) { selection.each(function (data) { var container = d3.select(this); var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { chart(selection) }; chart.container = this; if (!data || !data.length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); x = sparkline.xScale(); y = sparkline.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-sparklineplus").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-sparklineplus"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-sparklineWrap"); gEnter.append("g").attr("class", "nv-valueWrap"); gEnter.append("g").attr("class", "nv-hoverArea"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); var sparklineWrap = g.select(".nv-sparklineWrap"); sparkline.width(availableWidth).height(availableHeight); sparklineWrap.call(sparkline); var valueWrap = g.select(".nv-valueWrap"); var value = valueWrap.selectAll(".nv-currentValue").data([currentValue]); value.enter().append("text").attr("class", "nv-currentValue").attr("dx", rightAlignValue ? -8 : 8).attr("dy", ".9em").style("text-anchor", rightAlignValue ? "end" : "start"); value.attr("x", availableWidth + (rightAlignValue ? margin.right : 0)).attr("y", alignValue ? function (d) { return y(d) } : 0).style("fill", sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue)); gEnter.select(".nv-hoverArea").append("rect").on("mousemove", sparklineHover).on("click", function () { paused = !paused }).on("mouseout", function () { index = []; updateValueLine() }); g.select(".nv-hoverArea rect").attr("transform", function (d) { return "translate(" + -margin.left + "," + -margin.top + ")" }).attr("width", availableWidth + margin.left + margin.right).attr("height", availableHeight + margin.top); function updateValueLine() { if (paused) return; var hoverValue = g.selectAll(".nv-hoverValue").data(index); var hoverEnter = hoverValue.enter().append("g").attr("class", "nv-hoverValue").style("stroke-opacity", 0).style("fill-opacity", 0); hoverValue.exit().transition().duration(250).style("stroke-opacity", 0).style("fill-opacity", 0).remove(); hoverValue.attr("transform", function (d) { return "translate(" + x(sparkline.x()(data[d], d)) + ",0)" }).transition().duration(250).style("stroke-opacity", 1).style("fill-opacity", 1); if (!index.length) return; hoverEnter.append("line").attr("x1", 0).attr("y1", -margin.top).attr("x2", 0).attr("y2", availableHeight); hoverEnter.append("text").attr("class", "nv-xValue").attr("x", -6).attr("y", -margin.top).attr("text-anchor", "end").attr("dy", ".9em"); g.select(".nv-hoverValue .nv-xValue").text(xTickFormat(sparkline.x()(data[index[0]], index[0]))); hoverEnter.append("text").attr("class", "nv-yValue").attr("x", 6).attr("y", -margin.top).attr("text-anchor", "start").attr("dy", ".9em"); g.select(".nv-hoverValue .nv-yValue").text(yTickFormat(sparkline.y()(data[index[0]], index[0]))) } function sparklineHover() { if (paused) return; var pos = d3.mouse(this)[0] - margin.left; function getClosestIndex(data, x) { var distance = Math.abs(sparkline.x()(data[0], 0) - x); var closestIndex = 0; for (var i = 0; i < data.length; i++) { if (Math.abs(sparkline.x()(data[i], i) - x) < distance) { distance = Math.abs(sparkline.x()(data[i], i) - x); closestIndex = i } } return closestIndex } index = [getClosestIndex(data, Math.round(x.invert(pos)))]; updateValueLine() } }); return chart } chart.sparkline = sparkline; d3.rebind(chart, sparkline, "x", "y", "xScale", "yScale", "color"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.xTickFormat = function (_) { if (!arguments.length) return xTickFormat; xTickFormat = _; return chart }; chart.yTickFormat = function (_) { if (!arguments.length) return yTickFormat; yTickFormat = _; return chart }; chart.showValue = function (_) { if (!arguments.length) return showValue; showValue = _; return chart }; chart.alignValue = function (_) { if (!arguments.length) return alignValue; alignValue = _; return chart }; chart.rightAlignValue = function (_) { if (!arguments.length) return rightAlignValue; rightAlignValue = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; return chart }; nv.models.stackedArea = function () { "use strict"; var margin = { top: 0, right: 0, bottom: 0, left: 0 }, width = 960, height = 500, color = nv.utils.defaultColor(), id = Math.floor(Math.random() * 1e5), getX = function (d) { return d.x }, getY = function (d) { return d.y }, style = "stack", offset = "zero", order = "default", interpolate = "linear", clipEdge = false, x, y, scatter = nv.models.scatter(), dispatch = d3.dispatch("tooltipShow", "tooltipHide", "areaClick", "areaMouseover", "areaMouseout"); scatter.size(2.2).sizeDomain([2.2, 2.2]); function chart(selection) { selection.each(function (data) { var availableWidth = width - margin.left - margin.right, availableHeight = height - margin.top - margin.bottom, container = d3.select(this); x = scatter.xScale(); y = scatter.yScale(); var dataRaw = data; data.forEach(function (aseries, i) { aseries.seriesIndex = i; aseries.values = aseries.values.map(function (d, j) { d.index = j; d.seriesIndex = i; return d }) }); var dataFiltered = data.filter(function (series) { return !series.disabled }); data = d3.layout.stack().order(order).offset(offset).values(function (d) { return d.values }).x(getX).y(getY).out(function (d, y0, y) { var yHeight = getY(d) === 0 ? 0 : y; d.display = { y: yHeight, y0: y0 } })(dataFiltered); var wrap = container.selectAll("g.nv-wrap.nv-stackedarea").data([data]); var wrapEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-stackedarea"); var defsEnter = wrapEnter.append("defs"); var gEnter = wrapEnter.append("g"); var g = wrap.select("g"); gEnter.append("g").attr("class", "nv-areaWrap"); gEnter.append("g").attr("class", "nv-scatterWrap"); wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) { return d.display.y + d.display.y0 }).forceY([0]).color(data.map(function (d, i) { return d.color || color(d, d.seriesIndex) })); var scatterWrap = g.select(".nv-scatterWrap").datum(data); scatterWrap.call(scatter); defsEnter.append("clipPath").attr("id", "nv-edge-clip-" + id).append("rect"); wrap.select("#nv-edge-clip-" + id + " rect").attr("width", availableWidth).attr("height", availableHeight); g.attr("clip-path", clipEdge ? "url(#nv-edge-clip-" + id + ")" : ""); var area = d3.svg.area().x(function (d, i) { return x(getX(d, i)) }).y0(function (d) { return y(d.display.y0) }).y1(function (d) { return y(d.display.y + d.display.y0) }).interpolate(interpolate); var zeroArea = d3.svg.area().x(function (d, i) { return x(getX(d, i)) }).y0(function (d) { return y(d.display.y0) }).y1(function (d) { return y(d.display.y0) }); var path = g.select(".nv-areaWrap").selectAll("path.nv-area").data(function (d) { return d }); path.enter().append("path").attr("class", function (d, i) { return "nv-area nv-area-" + i }).attr("d", function (d, i) { return zeroArea(d.values, d.seriesIndex) }).on("mouseover", function (d, i) { d3.select(this).classed("hover", true); dispatch.areaMouseover({ point: d, series: d.key, pos: [d3.event.pageX, d3.event.pageY], seriesIndex: i }) }).on("mouseout", function (d, i) { d3.select(this).classed("hover", false); dispatch.areaMouseout({ point: d, series: d.key, pos: [d3.event.pageX, d3.event.pageY], seriesIndex: i }) }).on("click", function (d, i) { d3.select(this).classed("hover", false); dispatch.areaClick({ point: d, series: d.key, pos: [d3.event.pageX, d3.event.pageY], seriesIndex: i }) }); path.exit().transition().attr("d", function (d, i) { return zeroArea(d.values, i) }).remove(); path.style("fill", function (d, i) { return d.color || color(d, d.seriesIndex) }).style("stroke", function (d, i) { return d.color || color(d, d.seriesIndex) }); path.transition().attr("d", function (d, i) { return area(d.values, i) }); scatter.dispatch.on("elementMouseover.area", function (e) { g.select(".nv-chart-" + id + " .nv-area-" + e.seriesIndex).classed("hover", true) }); scatter.dispatch.on("elementMouseout.area", function (e) { g.select(".nv-chart-" + id + " .nv-area-" + e.seriesIndex).classed("hover", false) }); chart.d3_stackedOffset_stackPercent = function (stackData) { var n = stackData.length, m = stackData[0].length, k = 1 / n, i, j, o, y0 = []; for (j = 0; j < m; ++j) { for (i = 0, o = 0; i < dataRaw.length; i++) o += getY(dataRaw[i].values[j]); if (o) for (i = 0; i < n; i++) stackData[i][j][1] /= o; else for (i = 0; i < n; i++) stackData[i][j][1] = k } for (j = 0; j < m; ++j) y0[j] = 0; return y0 } }); return chart } scatter.dispatch.on("elementClick.area", function (e) { dispatch.areaClick(e) }); scatter.dispatch.on("elementMouseover.tooltip", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top], dispatch.tooltipShow(e) }); scatter.dispatch.on("elementMouseout.tooltip", function (e) { dispatch.tooltipHide(e) }); chart.dispatch = dispatch; chart.scatter = scatter; d3.rebind(chart, scatter, "interactive", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "forceX", "forceY", "forceSize", "clipVoronoi", "useVoronoi", "clipRadius", "highlightPoint", "clearHighlights"); chart.options = nv.utils.optionsFunc.bind(chart); chart.x = function (_) { if (!arguments.length) return getX; getX = d3.functor(_); return chart }; chart.y = function (_) { if (!arguments.length) return getY; getY = d3.functor(_); return chart }; chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.clipEdge = function (_) { if (!arguments.length) return clipEdge; clipEdge = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); return chart }; chart.offset = function (_) { if (!arguments.length) return offset; offset = _; return chart }; chart.order = function (_) { if (!arguments.length) return order; order = _; return chart }; chart.style = function (_) { if (!arguments.length) return style; style = _; switch (style) { case "stack": chart.offset("zero"); chart.order("default"); break; case "stream": chart.offset("wiggle"); chart.order("inside-out"); break; case "stream-center": chart.offset("silhouette"); chart.order("inside-out"); break; case "expand": chart.offset("expand"); chart.order("default"); break; case "stack_percent": chart.offset(chart.d3_stackedOffset_stackPercent); chart.order("default"); break } return chart }; chart.interpolate = function (_) { if (!arguments.length) return interpolate; interpolate = _; return chart }; return chart }; nv.models.stackedAreaChart = function () { "use strict"; var stacked = nv.models.stackedArea(), xAxis = nv.models.axis(), yAxis = nv.models.axis(), legend = nv.models.legend(), controls = nv.models.legend(), interactiveLayer = nv.interactiveGuideline(); var margin = { top: 30, right: 25, bottom: 50, left: 60 }, width = null, height = null, color = nv.utils.defaultColor(), showControls = true, showLegend = true, showXAxis = true, showYAxis = true, rightAlignYAxis = false, useInteractiveGuideline = false, tooltips = true, tooltip = function (key, x, y, e, graph) { return "<h3>" + key + "</h3>" + "<p>" + y + " on " + x + "</p>" }, x, y, yAxisTickFormat = d3.format(",.2f"), state = { style: stacked.style() }, defaultState = null, noData = "No Data Available.", dispatch = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"), controlWidth = 250, cData = ["Stacked", "Stream", "Expanded"], controlLabels = {}, transitionDuration = 250; xAxis.orient("bottom").tickPadding(7); yAxis.orient(rightAlignYAxis ? "right" : "left"); controls.updateState(false); var showTooltip = function (e, offsetElement) { var left = e.pos[0] + (offsetElement.offsetLeft || 0), top = e.pos[1] + (offsetElement.offsetTop || 0), x = xAxis.tickFormat()(stacked.x()(e.point, e.pointIndex)), y = yAxis.tickFormat()(stacked.y()(e.point, e.pointIndex)), content = tooltip(e.series.key, x, y, e, chart); nv.tooltip.show([left, top], content, e.value < 0 ? "n" : "s", null, offsetElement) }; function chart(selection) { selection.each(function (data) { var container = d3.select(this), that = this; var availableWidth = (width || parseInt(container.style("width")) || 960) - margin.left - margin.right, availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom; chart.update = function () { container.transition().duration(transitionDuration).call(chart) }; chart.container = this; state.disabled = data.map(function (d) { return !!d.disabled }); if (!defaultState) { var key; defaultState = {}; for (key in state) { if (state[key] instanceof Array) defaultState[key] = state[key].slice(0); else defaultState[key] = state[key] } } if (!data || !data.length || !data.filter(function (d) { return d.values.length }).length) { var noDataText = container.selectAll(".nv-noData").data([noData]); noDataText.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"); noDataText.attr("x", margin.left + availableWidth / 2).attr("y", margin.top + availableHeight / 2).text(function (d) { return d }); return chart } else { container.selectAll(".nv-noData").remove() } x = stacked.xScale(); y = stacked.yScale(); var wrap = container.selectAll("g.nv-wrap.nv-stackedAreaChart").data([data]); var gEnter = wrap.enter().append("g").attr("class", "nvd3 nv-wrap nv-stackedAreaChart").append("g"); var g = wrap.select("g"); gEnter.append("rect").style("opacity", 0); gEnter.append("g").attr("class", "nv-x nv-axis"); gEnter.append("g").attr("class", "nv-y nv-axis"); gEnter.append("g").attr("class", "nv-stackedWrap"); gEnter.append("g").attr("class", "nv-legendWrap"); gEnter.append("g").attr("class", "nv-controlsWrap"); gEnter.append("g").attr("class", "nv-interactive"); g.select("rect").attr("width", availableWidth).attr("height", availableHeight); if (showLegend) { var legendWidth = showControls ? availableWidth - controlWidth : availableWidth; legend.width(legendWidth); g.select(".nv-legendWrap").datum(data).call(legend); if (margin.top != legend.height()) { margin.top = legend.height(); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".nv-legendWrap").attr("transform", "translate(" + (availableWidth - legendWidth) + "," + -margin.top + ")") } if (showControls) { var controlsData = [{ key: controlLabels.stacked || "Stacked", metaKey: "Stacked", disabled: stacked.style() != "stack", style: "stack" }, { key: controlLabels.stream || "Stream", metaKey: "Stream", disabled: stacked.style() != "stream", style: "stream" }, { key: controlLabels.expanded || "Expanded", metaKey: "Expanded", disabled: stacked.style() != "expand", style: "expand" }, { key: controlLabels.stack_percent || "Stack %", metaKey: "Stack_Percent", disabled: stacked.style() != "stack_percent", style: "stack_percent" }]; controlWidth = cData.length / 3 * 260; controlsData = controlsData.filter(function (d) { return cData.indexOf(d.metaKey) !== -1 }); controls.width(controlWidth).color(["#444", "#444", "#444"]); g.select(".nv-controlsWrap").datum(controlsData).call(controls); if (margin.top != Math.max(controls.height(), legend.height())) { margin.top = Math.max(controls.height(), legend.height()); availableHeight = (height || parseInt(container.style("height")) || 400) - margin.top - margin.bottom } g.select(".nv-controlsWrap").attr("transform", "translate(0," + -margin.top + ")") } wrap.attr("transform", "translate(" + margin.left + "," + margin.top + ")"); if (rightAlignYAxis) { g.select(".nv-y.nv-axis").attr("transform", "translate(" + availableWidth + ",0)") } if (useInteractiveGuideline) { interactiveLayer.width(availableWidth).height(availableHeight).margin({ left: margin.left, top: margin.top }).svgContainer(container).xScale(x); wrap.select(".nv-interactive").call(interactiveLayer) } stacked.width(availableWidth).height(availableHeight); var stackedWrap = g.select(".nv-stackedWrap").datum(data); stackedWrap.transition().call(stacked); if (showXAxis) { xAxis.scale(x).ticks(availableWidth / 100).tickSize(-availableHeight, 0); g.select(".nv-x.nv-axis").attr("transform", "translate(0," + availableHeight + ")"); g.select(".nv-x.nv-axis").transition().duration(0).call(xAxis) } if (showYAxis) { yAxis.scale(y).ticks(stacked.offset() == "wiggle" ? 0 : availableHeight / 36).tickSize(-availableWidth, 0).setTickFormat(stacked.style() == "expand" || stacked.style() == "stack_percent" ? d3.format("%") : yAxisTickFormat); g.select(".nv-y.nv-axis").transition().duration(0).call(yAxis) } stacked.dispatch.on("areaClick.toggle", function (e) { if (data.filter(function (d) { return !d.disabled }).length === 1) data.forEach(function (d) { d.disabled = false }); else data.forEach(function (d, i) { d.disabled = i != e.seriesIndex }); state.disabled = data.map(function (d) { return !!d.disabled }); dispatch.stateChange(state); chart.update() }); legend.dispatch.on("stateChange", function (newState) { state.disabled = newState.disabled; dispatch.stateChange(state); chart.update() }); controls.dispatch.on("legendClick", function (d, i) { if (!d.disabled) return; controlsData = controlsData.map(function (s) { s.disabled = true; return s }); d.disabled = false; stacked.style(d.style); state.style = stacked.style(); dispatch.stateChange(state); chart.update() }); interactiveLayer.dispatch.on("elementMousemove", function (e) { stacked.clearHighlights(); var singlePoint, pointIndex, pointXLocation, allData = []; data.filter(function (series, i) { series.seriesIndex = i; return !series.disabled }).forEach(function (series, i) { pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x()); stacked.highlightPoint(i, pointIndex, true); var point = series.values[pointIndex]; if (typeof point === "undefined") return; if (typeof singlePoint === "undefined") singlePoint = point; if (typeof pointXLocation === "undefined") pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); var tooltipValue = stacked.style() == "expand" ? point.display.y : chart.y()(point, pointIndex); allData.push({ key: series.key, value: tooltipValue, color: color(series, series.seriesIndex), stackedValue: point.display }) }); allData.reverse(); if (allData.length > 2) { var yValue = chart.yScale().invert(e.mouseY); var yDistMax = Infinity, indexToHighlight = null; allData.forEach(function (series, i) { if (yValue >= series.stackedValue.y0 && yValue <= series.stackedValue.y0 + series.stackedValue.y) { indexToHighlight = i; return } }); if (indexToHighlight != null) allData[indexToHighlight].highlight = true } var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex)); var valueFormatter = stacked.style() == "expand" ? function (d, i) { return d3.format(".1%")(d) } : function (d, i) { return yAxis.tickFormat()(d) }; interactiveLayer.tooltip.position({ left: pointXLocation + margin.left, top: e.mouseY + margin.top }).chartContainer(that.parentNode).enabled(tooltips).valueFormatter(valueFormatter).data({ value: xValue, series: allData })(); interactiveLayer.renderGuideLine(pointXLocation) }); interactiveLayer.dispatch.on("elementMouseout", function (e) { dispatch.tooltipHide(); stacked.clearHighlights() }); dispatch.on("tooltipShow", function (e) { if (tooltips) showTooltip(e, that.parentNode) }); dispatch.on("changeState", function (e) { if (typeof e.disabled !== "undefined") { data.forEach(function (series, i) { series.disabled = e.disabled[i] }); state.disabled = e.disabled } if (typeof e.style !== "undefined") { stacked.style(e.style) } chart.update() }) }); return chart } stacked.dispatch.on("tooltipShow", function (e) { e.pos = [e.pos[0] + margin.left, e.pos[1] + margin.top], dispatch.tooltipShow(e) }); stacked.dispatch.on("tooltipHide", function (e) { dispatch.tooltipHide(e) }); dispatch.on("tooltipHide", function () { if (tooltips) nv.tooltip.cleanup() }); chart.dispatch = dispatch; chart.stacked = stacked; chart.legend = legend; chart.controls = controls; chart.xAxis = xAxis; chart.yAxis = yAxis; chart.interactiveLayer = interactiveLayer; d3.rebind(chart, stacked, "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "interactive", "useVoronoi", "offset", "order", "style", "clipEdge", "forceX", "forceY", "forceSize", "interpolate"); chart.options = nv.utils.optionsFunc.bind(chart); chart.margin = function (_) { if (!arguments.length) return margin; margin.top = typeof _.top != "undefined" ? _.top : margin.top; margin.right = typeof _.right != "undefined" ? _.right : margin.right; margin.bottom = typeof _.bottom != "undefined" ? _.bottom : margin.bottom; margin.left = typeof _.left != "undefined" ? _.left : margin.left; return chart }; chart.width = function (_) { if (!arguments.length) return width; width = _; return chart }; chart.height = function (_) { if (!arguments.length) return height; height = _; return chart }; chart.color = function (_) { if (!arguments.length) return color; color = nv.utils.getColor(_); legend.color(color); stacked.color(color); return chart }; chart.showControls = function (_) { if (!arguments.length) return showControls; showControls = _; return chart }; chart.showLegend = function (_) { if (!arguments.length) return showLegend; showLegend = _; return chart }; chart.showXAxis = function (_) { if (!arguments.length) return showXAxis; showXAxis = _; return chart }; chart.showYAxis = function (_) { if (!arguments.length) return showYAxis; showYAxis = _; return chart }; chart.rightAlignYAxis = function (_) { if (!arguments.length) return rightAlignYAxis; rightAlignYAxis = _; yAxis.orient(_ ? "right" : "left"); return chart }; chart.useInteractiveGuideline = function (_) { if (!arguments.length) return useInteractiveGuideline; useInteractiveGuideline = _; if (_ === true) { chart.interactive(false); chart.useVoronoi(false) } return chart }; chart.tooltip = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.tooltips = function (_) { if (!arguments.length) return tooltips; tooltips = _; return chart }; chart.tooltipContent = function (_) { if (!arguments.length) return tooltip; tooltip = _; return chart }; chart.state = function (_) { if (!arguments.length) return state; state = _; return chart }; chart.defaultState = function (_) { if (!arguments.length) return defaultState; defaultState = _; return chart }; chart.noData = function (_) { if (!arguments.length) return noData; noData = _; return chart }; chart.transitionDuration = function (_) { if (!arguments.length) return transitionDuration; transitionDuration = _; return chart }; chart.controlsData = function (_) { if (!arguments.length) return cData; cData = _; return chart }; chart.controlLabels = function (_) { if (!arguments.length) return controlLabels; if (typeof _ !== "object") return controlLabels; controlLabels = _; return chart }; yAxis.setTickFormat = yAxis.tickFormat; yAxis.tickFormat = function (_) { if (!arguments.length) return yAxisTickFormat; yAxisTickFormat = _; return yAxis }; return chart }]]></c>
                </r>
                <r>
                  <c>})();&lt;/script&gt;</c>
                </r>
              </Data>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="Output">
              <RecordInfo>
                <Field name="Field_1" size="40369" source="TextInput:" type="V_WString" />
              </RecordInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxTextInput" />
        </Node>
        <Node ToolID="45">
          <GuiSettings Plugin="AlteryxGuiToolkit.TextBox.TextBox">
            <Position x="120" y="467.1" width="100" height="60" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <Text>This input embeds D3 &amp; NVD3 into the output.</Text>
              <Font name="Segoe UI" size="8.25" style="0" />
              <TextColor name="Black" />
              <FillColor name="White" />
              <Shape shape="0" />
              <Justification Justification="4" />
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
      </ChildNodes>
    </Node>
    <Node ToolID="75">
      <GuiSettings Plugin="AlteryxGuiToolkit.ToolContainer.ToolContainer">
        <Position x="113" y="54" width="787.5" height="240.1" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Caption>Interface Tools</Caption>
          <Folded value="False">False</Folded>
          <Style Transparency="1" Margin="25" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <ChildNodes>
        <Node ToolID="62">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.DropDownListBox.DropDown">
            <Position x="138" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>NameField</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="63">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.NumericUpDown.NumericUpDown">
            <Position x="205.85" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>Width</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="64">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.NumericUpDown.NumericUpDown">
            <Position x="341.55" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>Height</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="65">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.DropDownListBox.DropDown">
            <Position x="477.25" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>ChartType</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="66">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.DropDownListBox.DropDown">
            <Position x="545.1" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>Scale</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="67">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.TextBox.QuestionTextBox">
            <Position x="612.95" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>Prefix</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="68">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.TextBox.QuestionTextBox">
            <Position x="680.8" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>Suffix</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="69">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.TextBox.QuestionTextBox">
            <Position x="748.65" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>YAxis</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="70">
          <GuiSettings Plugin="AlteryxGuiToolkit.Questions.TextBox.QuestionTextBox">
            <Position x="816.5" y="98" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>XAxis</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="51">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="205.85" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="52">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="341.55" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="53">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="273.7" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="54">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="409.4" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="55">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="477.25" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="56">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="545.1" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="57">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="612.95" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="58">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="680.8" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="59">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="748.65" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="60">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="816.5" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
        <Node ToolID="61">
          <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
            <Position x="138" y="210.1" width="59" height="59" />
          </GuiSettings>
          <Properties>
            <Configuration />
            <Annotation DisplayMode="0">
              <Name>Name</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
        </Node>
      </ChildNodes>
    </Node>
  </Nodes>
  <Connections>
    <Connection>
      <Origin ToolID="7" Connection="Output2" />
      <Destination ToolID="26" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="14" Connection="Output" />
      <Destination ToolID="17" Connection="Left" />
    </Connection>
    <Connection>
      <Origin ToolID="34" Connection="Output" />
      <Destination ToolID="17" Connection="Right" />
    </Connection>
    <Connection>
      <Origin ToolID="15" Connection="Output" />
      <Destination ToolID="14" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="17" Connection="Join" />
      <Destination ToolID="18" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="18" Connection="Output" />
      <Destination ToolID="19" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="19" Connection="Output" />
      <Destination ToolID="7" Connection="Control" />
    </Connection>
    <Connection>
      <Origin ToolID="19" Connection="Output" />
      <Destination ToolID="28" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="21" Connection="Output" />
      <Destination ToolID="25" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="25" Connection="Output" />
      <Destination ToolID="38" Connection="Right" />
    </Connection>
    <Connection>
      <Origin ToolID="26" Connection="Output" />
      <Destination ToolID="38" Connection="Left" />
    </Connection>
    <Connection>
      <Origin ToolID="28" Connection="Output" />
      <Destination ToolID="32" Connection="Input" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="51" Connection="Action" />
      <Destination ToolID="32" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="52" Connection="Action" />
      <Destination ToolID="32" Connection="Action" />
    </Connection>
    <Connection>
      <Origin ToolID="32" Connection="Output" />
      <Destination ToolID="21" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="35" Connection="Output" />
      <Destination ToolID="34" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="37" Connection="Output" />
      <Destination ToolID="39" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="38" Connection="Join" />
      <Destination ToolID="37" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="39" Connection="Output" />
      <Destination ToolID="74" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="39" Connection="Output" />
      <Destination ToolID="49" Connection="Input" />
    </Connection>
    <Connection name="#2">
      <Origin ToolID="43" Connection="Output" />
      <Destination ToolID="35" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="42" Connection="Output" />
      <Destination ToolID="35" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="73" Connection="Output" />
      <Destination ToolID="50" Connection="Input" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="61" Connection="Action" />
      <Destination ToolID="50" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="73" Connection="Question" />
      <Destination ToolID="62" Connection="Question Input" />
    </Connection>
    <Connection>
      <Origin ToolID="50" Connection="Output" />
      <Destination ToolID="15" Connection="Input" />
    </Connection>
    <Connection name="NameField" Wireless="True">
      <Origin ToolID="62" Connection="Question" />
      <Destination ToolID="61" Connection="Question" />
    </Connection>
    <Connection name="Width" Wireless="True">
      <Origin ToolID="63" Connection="Question" />
      <Destination ToolID="51" Connection="Question" />
    </Connection>
    <Connection name="Width" Wireless="True">
      <Origin ToolID="63" Connection="Question" />
      <Destination ToolID="53" Connection="Question" />
    </Connection>
    <Connection name="Height" Wireless="True">
      <Origin ToolID="64" Connection="Question" />
      <Destination ToolID="52" Connection="Question" />
    </Connection>
    <Connection name="Height" Wireless="True">
      <Origin ToolID="64" Connection="Question" />
      <Destination ToolID="54" Connection="Question" />
    </Connection>
    <Connection name="ChartType" Wireless="True">
      <Origin ToolID="65" Connection="Question" />
      <Destination ToolID="55" Connection="Question" />
    </Connection>
    <Connection name="Scale" Wireless="True">
      <Origin ToolID="66" Connection="Question" />
      <Destination ToolID="56" Connection="Question" />
    </Connection>
    <Connection name="Prefix" Wireless="True">
      <Origin ToolID="67" Connection="Question" />
      <Destination ToolID="57" Connection="Question" />
    </Connection>
    <Connection name="Suffix" Wireless="True">
      <Origin ToolID="68" Connection="Question" />
      <Destination ToolID="58" Connection="Question" />
    </Connection>
    <Connection name="YAxis" Wireless="True">
      <Origin ToolID="69" Connection="Question" />
      <Destination ToolID="59" Connection="Question" />
    </Connection>
    <Connection name="XAxis" Wireless="True">
      <Origin ToolID="70" Connection="Question" />
      <Destination ToolID="60" Connection="Question" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="53" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="54" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="55" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="56" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="57" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="58" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="59" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
    <Connection Wireless="True">
      <Origin ToolID="60" Connection="Action" />
      <Destination ToolID="43" Connection="Action" />
    </Connection>
  </Connections>
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="False" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <Constants>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>NameField</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Width</Name>
        <Value />
        <IsNumeric value="True" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Height</Name>
        <Value />
        <IsNumeric value="True" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>ChartType</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Scale</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Prefix</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Suffix</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>YAxis</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>XAxis</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
    </Constants>
    <MetaInfo>
      <NameIsFileName value="False" />
      <Name><![CDATA[ NVD3]]></Name>
      <Description>Part of a blog post from Inspiring Ingenuity.  Proptype of interactive charts in the gallery.</Description>
      <CategoryName />
      <SearchTags />
      <Author>Ned Harding</Author>
      <Company>Alteryx</Company>
      <Copyright>This app is in the public domain</Copyright>
      <DescriptionLink actual="http://inspiringingenuity.net/2013/10/23/alteryx-interactive-html/" displayed="http://inspiringingenuity.net/2013/10/23/alteryx-interactive-html/" />
    </MetaInfo>
    <Events>
      <Enabled value="True" />
    </Events>
    <RuntimeProperties>
      <Actions>
        <NoCondition>
          <Type>NoCondition</Type>
          <Description>(Always Run)</Description>
          <True>
            <Action>
              <Type>UpdateValueFormula</Type>
              <Description />
              <ToolId value="51" />
              <Expression>Replace([Destination], "800", ToString(ToNumber([Width])*96))</Expression>
              <Destination>32/Arguments</Destination>
              <Mode>Expression</Mode>
            </Action>
            <Action>
              <Type>UpdateValueFormula</Type>
              <Description />
              <ToolId value="52" />
              <Expression>Replace([Destination], "600", ToString(ToNumber([Height])*96))</Expression>
              <Destination>32/Arguments</Destination>
              <Mode>Expression</Mode>
            </Action>
            <Action>
              <Type>UpdateValueFormula</Type>
              <Description />
              <ToolId value="53" />
              <Expression>Replace([Destination], "800", ToString(ToNumber([Width])*96))</Expression>
              <Destination>43/Data/r[4]/c</Destination>
              <Mode>Expression</Mode>
            </Action>
            <Action>
              <Type>UpdateValueFormula</Type>
              <Description />
              <ToolId value="54" />
              <Expression>Replace([Destination], "600", ToString(ToNumber([Height])*96))</Expression>
              <Destination>43/Data/r[4]/c</Destination>
              <Mode>Expression</Mode>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>ChartType</Description>
              <ToolId value="55" />
              <Mode>Simple</Mode>
              <Variable>ChartType</Variable>
              <Replace value="True" />
              <ReplaceText>stackedAreaChart</ReplaceText>
              <Destination>43/Data/r[18]/c</Destination>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>Scale</Description>
              <ToolId value="56" />
              <Mode>Simple</Mode>
              <Variable>Scale</Variable>
              <Replace value="True" />
              <ReplaceText>1000000000</ReplaceText>
              <Destination>43/Data/r[33]/c</Destination>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>Prefix</Description>
              <ToolId value="57" />
              <Mode>Simple</Mode>
              <Variable>Prefix</Variable>
              <Replace value="True" />
              <ReplaceText>$</ReplaceText>
              <Destination>43/Data/r[33]/c</Destination>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>Suffix</Description>
              <ToolId value="58" />
              <Mode>Simple</Mode>
              <Variable>Suffix</Variable>
              <Replace value="True" />
              <ReplaceText>%</ReplaceText>
              <Destination>43/Data/r[33]/c</Destination>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>YAxis</Description>
              <ToolId value="59" />
              <Mode>Simple</Mode>
              <Variable>YAxis</Variable>
              <Replace value="True" />
              <ReplaceText>Billions of Dollars</ReplaceText>
              <Destination>43/Data/r[32]/c</Destination>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>XAxis</Description>
              <ToolId value="60" />
              <Mode>Simple</Mode>
              <Variable>XAxis</Variable>
              <Replace value="True" />
              <ReplaceText>Year</ReplaceText>
              <Destination>43/Data/r[29]/c</Destination>
            </Action>
            <Action>
              <Type>UpdateValue</Type>
              <Description>NameField</Description>
              <ToolId value="61" />
              <Mode>Simple</Mode>
              <Variable>NameField</Variable>
              <Replace value="False" />
              <Destination>50/SelectFields/SelectField[@field='NameTemplate']/@field</Destination>
            </Action>
          </True>
        </NoCondition>
      </Actions>
      <Questions>
        <Question>
          <Type>Tab</Type>
          <Description>Questions</Description>
          <Name>Tab (71)</Name>
          <ToolId value="71" />
          <Questions>
            <Question>
              <Type>ListBox</Type>
              <Description>Name Field</Description>
              <Name>NameField</Name>
              <ToolId value="62" />
              <Multiple value="False" />
              <Default>Name</Default>
              <Mode>MacroField</Mode>
              <MacroField_InputTool value="48" />
              <Field_IncludeNone value="False" />
              <MacroField_FilterTypes>Bool,Byte,Int16,Int32,Int64,FixedDecimal,Float,Double,String,WString,V_String,V_WString,Date,Time,DateTime</MacroField_FilterTypes>
            </Question>
            <Question>
              <Type>NumericUpDown</Type>
              <Description>Width (Inches)</Description>
              <Name>Width</Name>
              <ToolId value="63" />
              <Minimum value="4" />
              <Maximum value="100" />
              <Increment value="1" />
              <Default value="8" />
              <Decimals value="0" />
            </Question>
            <Question>
              <Type>NumericUpDown</Type>
              <Description>Height (Inches)</Description>
              <Name>Height</Name>
              <ToolId value="64" />
              <Minimum value="4" />
              <Maximum value="100" />
              <Increment value="1" />
              <Default value="6" />
              <Decimals value="0" />
            </Question>
            <Question>
              <Type>ListBox</Type>
              <Description>Chart Type</Description>
              <Name>ChartType</Name>
              <ToolId value="65" />
              <Multiple value="False" />
              <Default />
              <Mode>Manual</Mode>
              <Manual_Values><![CDATA[multiBarChart
stackedAreaChart
scatterChart
lineChart
]]></Manual_Values>
            </Question>
            <Question>
              <Type>ListBox</Type>
              <Description>Scale</Description>
              <Name>Scale</Name>
              <ToolId value="66" />
              <Multiple value="False" />
              <Default>1</Default>
              <Mode>Manual</Mode>
              <Manual_Values><![CDATA[1 in 1,000,000,000:1000000000
1 in 1,000,000:1000000
1 in 1,000:1000
1 in 1:1
]]></Manual_Values>
            </Question>
            <Question>
              <Type>TextBox</Type>
              <Description>Prefix (e.g. $)</Description>
              <Name>Prefix</Name>
              <ToolId value="67" />
              <Default />
              <Password value="False" />
              <Multiline value="False" />
              <Hidden value="False" />
            </Question>
            <Question>
              <Type>TextBox</Type>
              <Description>Suffix (e.g. %)</Description>
              <Name>Suffix</Name>
              <ToolId value="68" />
              <Default />
              <Password value="False" />
              <Multiline value="False" />
              <Hidden value="False" />
            </Question>
            <Question>
              <Type>TextBox</Type>
              <Description>Y Axis Title</Description>
              <Name>YAxis</Name>
              <ToolId value="69" />
              <Default />
              <Password value="False" />
              <Multiline value="False" />
              <Hidden value="False" />
            </Question>
            <Question>
              <Type>TextBox</Type>
              <Description>X Axis Title</Description>
              <Name>XAxis</Name>
              <ToolId value="70" />
              <Default />
              <Password value="False" />
              <Multiline value="False" />
              <Hidden value="False" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description>Output</Description>
              <Name>Output</Name>
              <ToolId value="74" />
            </Question>
          </Questions>
        </Question>
        <Question>
          <Type>Tab</Type>
          <Description>Input</Description>
          <Name>Tab (72)</Name>
          <ToolId value="72" />
          <Questions>
            <Question>
              <Type>MacroInput</Type>
              <Description>Input</Description>
              <Name>Input</Name>
              <ToolId value="73" />
            </Question>
          </Questions>
        </Question>
      </Questions>
      <ModuleType>Macro</ModuleType>
      <MacroCustomHelp value="False" />
      <MacroDynamicOutputFields value="False" />
      <MacroImage></MacroImage>
      <MacroInputs />
      <MacroOutputs />
      <Wiz_CustomHelp value="False" />
      <Wiz_CustomGraphic value="False" />
      <Wiz_ShowOutput value="True" />
      <Wiz_OpenOutputTools>
        <Tool ToolId="7" Selected="True" />
        <Tool ToolId="15" Selected="True" />
        <Tool ToolId="74" Selected="True" />
        <Tool ToolId="73" Selected="True" />
        <Tool ToolId="49" Selected="False" />
      </Wiz_OpenOutputTools>
      <Wiz_OutputMessage />
      <Wiz_NoOutputFilesMessage />
      <Wiz_ChainRunWizard />
    </RuntimeProperties>
  </Properties>
</AlteryxDocument>